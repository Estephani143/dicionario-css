<link href="estilos/estilo.css" rel="stylesheet" />

 - Selecionando seletores do HTML
Se for tag (<p><h1>..) = p { }
Se for id (<p id="my-id"><a id="my-id">) = #my-id {}
Se for class (<p class="my-class">) = .my-class {}

abs(20% - 100px); (é uma expressão matemática que calcula o valor absoluto da diferença entre dois valores: 20% e 100 pixels.)
acos(-0.2); (em matemática é a função inversa do cosseno (cos). Ela recebe um valor entre -1 e 1 e retorna o ângulo cujo cosseno é o valor especificado.)
asin(-0.2); (em matemática é a função inversa do seno (sin). Ela recebe um valor entre -1 e 1 e retorna o ângulo cujo seno é o valor especificado.)
atan(1); (em matemática é a função inversa da tangente (tan). Ela recebe um valor e retorna o ângulo cuja tangente é o valor especificado.)
atan2(3, 2); (em matemática é a função inversa da tangente (tan) que aceita dois argumentos e retorna o ângulo (em radianos) cuja tangente é (y / x).)
attr(nome-do-atributo); (é uma função CSS que é usada para recuperar o valor de um atributo especificado de um elemento HTML e usá-lo como valor para uma propriedade CSS.)
calc(100% - 80px); (em CSS é usada para realizar cálculos matemáticos em valores CSS. Ela permite combinar diferentes unidades de medida, valores numéricos e operadores matemáticos para calcular um valor final.)
clamp(200px, 40%, 400px); (é uma função CSS que permite definir um valor que está dentro de um intervalo específico. Ela recebe três parâmetros: um valor mínimo, um valor preferencial e um valor máximo.)
cos(45deg); (em matemática, também conhecida como cosseno, é uma função trigonométrica que retorna o cosseno de um ângulo especificado.)
counter(chapter) ". "; (é uma função CSS que é usada para recuperar o valor atual de um contador definido com a regra @counter-style e usá-lo como valor para uma propriedade CSS, geralmente content.)
counters(name, string); (é uma função CSS semelhante à função counter(), mas é usada para recuperar uma sequência de valores de contadores aninhados e combiná-los como um único valor.)
cross-fade(url(imagem1.jpg), url(imagem2.jpg), 50%); (é uma função CSS que é usada para criar um efeito de transição suave entre duas imagens ou entre uma imagem e uma cor de fundo.)
env(safe-area-inset-top); (retorna a dimensão da área segura na parte superior da tela.)
env(safe-area-inset-right); (retorna a dimensão da área segura na parte direita da tela.)
env(safe-area-inset-bottom); (retorna a dimensão da área segura na parte inferior da tela.)
env(safe-area-inset-left); (retorna a dimensão da área segura na parte esquerda da tela.)
env(safe-area-inset-top, 20px); (é um valor opcional que serve como um valor de fallback caso o ambiente não forneça as dimensões da área segura.)
exp(-1); ( refere-se à função exponencial, onde exp representa a função exponencial e -1 é o argumento da função.)
fit-content(200px); (em CSS é usada para definir o tamanho de um elemento com base no conteúdo dentro dele, limitado a um tamanho máximo especificado.)
hypot(2em); (é uma função matemática que calcula a hipotenusa de um triângulo retângulo com os comprimentos dos catetos fornecidos. )
log(7.389); (em matemática é a função logarítmica natural, também conhecida como logaritmo natural. Ela representa o inverso da função exponencial)
max(20vw, 400px); (é uma função que retorna o maior valor entre dois ou mais valores especificados. É comumente usada para definir propriedades CSS, como largura (width) ou altura (height), de modo que o valor resultante seja o maior valor entre os especificados.)
min(40%, 400px); (é uma função que retorna o menor valor entre dois ou mais valores especificados. É comumente usada para definir propriedades CSS, como largura (width) ou altura (height), de modo que o valor resultante seja o menor valor entre os especificados.)
minmax(200px, 1fr); (é usada principalmente em layouts de grade (grid layouts) para definir um tamanho flexível que pode ser limitado por um tamanho mínimo e máximo.)
mod(7, 2); (é uma função matemática que retorna o resto da divisão de dois números. No caso de mod(7, 2), estamos calculando o resto da divisão de 7 por 2.)
pow(5, 2); (é uma função matemática que calcula a potência de um número elevado a uma determinada potência. )
repeat(4, 1fr); (é uma função usada principalmente em layouts de grade (grid layouts) para repetir um padrão de valores em uma definição de grade)
sign(20vh - 100px); (em matemática retorna o sinal de um número, indicando se é positivo, negativo ou zero.)
sin(45deg); (em matemática, também conhecida como seno, é uma função trigonométrica que retorna o seno de um ângulo especificado. No caso de sin(45deg), estamos calculando o seno do ângulo de 45 graus.)
sqrt(9); (em matemática é a função raiz quadrada, que calcula a raiz quadrada de um número. No caso de sqrt(9), estamos calculando a raiz quadrada de 9.)
tan(45deg); (em matemática, também conhecida como tangente, é uma função trigonométrica que retorna a tangente de um ângulo especificado. No caso de tan(45deg), estamos calculando a tangente do ângulo de 45 graus.)
url(endereço); (é usada para especificar um endereço URL para ser usado em várias propriedades CSS, como background-image, @font-face, cursor, entre outras.)
var(nome-da-variável); (é usada para definir e usar variáveis CSS personalizadas. As variáveis CSS personalizadas permitem que você defina valores que podem ser reutilizados em várias partes do seu código CSS.)

color: #cdfeaa; (Cor do texto)
top: 30px; (Move o elemento 30 pixels para baixo a partir de sua posição normal)
bottom: 3px; (é usada para posicionar um elemento em relação ao seu elemento pai ou ao elemento que tem uma posição definida.  Isso geralmente é usado em conjunto com outras propriedades de posicionamento, como position: relative;, position: absolute;, ou position: fixed;, para criar layouts mais complexos.)
left: 30px; (Move o elemento 30 pixels para a direita a partir de sua posição normal.)
right: 30px; (Move o elemento 30 pixels para a esquerda a partir de sua posição normal)
line-height: 2; (Altura da Linha)
letter-spacing: 1px; (Espaço entre as letras)
width: 600px; (Isso força o corpo a ter 600 pixels de largura)
height: 100px; (altura)
outline-color: #ff; (é usada para definir a cor da linha de contorno de um elemento quando o foco é aplicado a ele)
caption-side: bottom; / top; / left; / right; (é utilizada para especificar o posicionamento da legenda de uma tabela em relação ao seu conteúdo. Esta propriedade é aplicada apenas a elementos <table>.)
text-stroke: 4px navy; (ssa propriedade é uma forma mais recente e padronizada de adicionar um contorno ao texto e é suportada por navegadores modernos)
accent-color: auto; / #fff (é uma propriedade CSS que permite definir a cor de destaque (também conhecida como cor de acento) para determinados elementos do usuário, como controles de formulário, botões, caixas de seleção, etc)
inline-size: 300px; / 25em; /  75%; / max-content; / min-content; / fit-content; / auto; ( usada para especificar o tamanho da dimensão inline de um elemento, que é a dimensão horizontal em blocos de texto que seguem a direção de escrita do texto, como a largura de um elemento em um layout horizontal ou a altura de um elemento em um layout vertical.)
aspect-ratio: 1 / 1; - auto 3/4; (é usada para definir a proporção de aspecto (largura/altura) de um elemento. Esta propriedade permite que você especifique uma proporção de aspecto para um elemento, o que pode ser útil para manter a consistência visual em diferentes tamanhos de tela ou para criar layouts responsivos.)
block-size: 300px; (é usada para definir a altura (ou largura, dependendo da direção de escrita do texto) de um elemento em um fluxo de bloco. )
size: A4; letter; landscape; legal; 1in; 1in 1.5in; 100px; (Define o tamanho)
tab-size: 4; (é usada para especificar a largura de um caractere de tabulação. Ela define o tamanho do espaço que um caractere de tabulação ocupa na renderização de texto. Isso é útil para controlar a aparência de texto que usa caracteres de tabulação.)
ascent-override: normal; / 10px; / 100%; (é usada para modificar a altura de subida (ascender) de um texto em relação à linha de base. Ela permite ajustar a posição vertical de um caractere ou conjunto de caracteres em relação aos caracteres vizinhos.)
caret-color: #ff; (é utilizada para definir a cor do cursor de texto (caret) em elementos de entrada de texto, como <input> ou <textarea>. O caret é o indicador que mostra onde o texto será inserido quando você digita em um campo de texto.)
forced-color-adjust: auto; / none; (é utilizada para especificar como um elemento deve se comportar em relação aos esquemas de cores forçadas do navegador ou do sistema operacional. Esses esquemas de cores forçadas podem ser aplicados para garantir que o conteúdo seja legível em contextos de alto contraste)
opacity: 0.9; / 10%; (é usada para definir a transparência de um elemento. Ela aceita valores entre 0 (totalmente transparente) e 1 (totalmente opaco), incluindo valores decimais entre 0 e 1 para especificar níveis de transparência intermediários.)
orphans: 2; (é usada para controlar o número mínimo de linhas de um parágrafo que devem ser exibidas na parte inferior de uma página. É uma das propriedades relacionadas à quebra de linhas e controle de layout em páginas da web. Quando você define orphans: 2;, você está especificando que um parágrafo não deve ser quebrado (ou seja, não pode haver uma quebra de página) se houver menos de 2 linhas restantes para exibir o conteúdo desse parágrafo na página atual.)
widows: 3; (é utilizada para controlar o número mínimo de linhas de um parágrafo que devem ser exibidas no início de uma nova página, antes que o restante do conteúdo continue na página seguinte)

white-space: normal; (Este é o valor padrão. O texto quebrará automaticamente para preencher a largura disponível do contêiner, e as sequências de espaços em branco serão tratadas como um único espaço em branco.)
white-space: pre; (O texto será exibido exatamente como está no código HTML, mantendo tanto os espaços em branco quanto as quebras de linha.)
white-space: pre-wrap; (O texto será exibido exatamente como está no código HTML, mas os espaços em branco serão mantidos e o texto será quebrado automaticamente para preencher a largura disponível do contêiner.)
white-space: pre-line; (O texto será exibido como se estivesse em uma tag <pre>, ou seja, as quebras de linha serão mantidas, mas os espaços em branco serão colapsados e o texto será quebrado automaticamente para preencher a largura disponível do contêiner.)
white-space: break-spaces; (O texto será exibido como normal, mas as sequências de espaços em branco quebrarão o texto automaticamente, mesmo se não houver espaço suficiente para preencher a largura do contêiner.)
white-space: nowrap; (é utilizada para controlar como o espaço em branco dentro de um elemento é tratado. O valor nowrap é utilizado para especificar que o texto dentro do elemento não deve ser quebrado em várias linhas e que deve continuar em uma única linha, independentemente do tamanho do contêiner.)

font: 1.2em "Fira Sans", sans-serif; (é uma forma abreviada de definir várias propriedades de fonte em uma única declaração)
font-size: 10px; (px significa "pixels": o tamanho da fonte base é agora de 10 pixels)
font-family: "Open Sans", sans-serif; (este deve ser o nome da fonte que você obteve no Google Fonts)
font-weight: bold; / normal; / bolder; / lighter;/ 100 a 900; (é utilizada para especificar o peso da fonte de um elemento de texto.)
font-style: normal; (Define o estilo de fonte como normal (sem itálico))
font-style: italic; (Define o estilo de fonte como itálico)
font-style: oblique; (Define o estilo de fonte como oblique) 
font-feature-settings: (é usada para ativar ou desativar as características da fonte OpenType. Isso permite que você controle recursos específicos da fonte, como ligaduras, números proporcionais, pequenas maiúsculas, entre outros.)
font-feature-settings: normal; (Define que as características da fonte devem seguir o comportamento padrão, ou seja, todas as características da fonte estão desativadas.)
font-feature-settings: "smcp"; (Ativa a característica "small capitals" (maiúsculas pequenas) na fonte)
font-feature-settings: "liga" 0; ("liga" refere-se a ligaduras, que são combinações estilísticas de dois ou mais glifos em uma única unidade. 0: Este é o valor que controla se a característica está ativada ou desativada.)
font-feature-settings: "tnum"; (está ativando a característica de números tabulares para o texto selecionado. Isso significa que os números renderizados com essa propriedade terão a mesma largura e serão alinhados verticalmente)
font-kerning: (é usada para controlar o kerning (espaçamento entre pares de caracteres) em fontes. Ela determina se o navegador deve usar o kerning automático fornecido pela fonte, desabilitar o kerning automático ou usar o kerning padrão do navegador.)
font-kerning: auto; (Este é o valor padrão. Ele indica que o navegador deve usar o kerning automático fornecido pela fonte, se disponível.)
font-kerning: normal; (Isso desabilita o kerning automático e faz com que o navegador use o kerning padrão do navegador.)
font-kerning: none; (Isso desabilita completamente o kerning, tanto o kerning automático fornecido pela fonte quanto o kerning padrão do navegador.)
font-language-override: normal; / "ENG"; (é utilizada para substituir a língua de texto padrão para a qual a fonte está projetada. Isso pode ser útil quando você deseja renderizar texto em uma fonte específica, mas gostaria de forçar a fonte a usar um conjunto de caracteres específico, como letras de um alfabeto diferente.)
font-optical-sizing: none; / auto; (é utilizada para especificar se o navegador deve usar ajustes ópticos automáticos fornecidos pela fonte, ou se esses ajustes devem ser desativados.)
font-size-adjust: 0.5; / from-font; / ex-height 0.5; / none; (é usada para ajustar a altura do texto de acordo com a altura do caractere x (caractere minúsculo 'x') da fonte. Isso é útil quando você deseja manter a consistência na altura do texto, independentemente da fonte usada.)
font-stretch: (é usada para controlar a largura horizontal da fonte. Ela especifica a largura relativa da fonte em relação à sua largura normal.)
font-stretch: normal; (Esta é a largura normal da fonte, conforme projetada pelo tipo de fonte.)
font-stretch: ultra-condensed; (A fonte é esticada ao máximo, tornando-a muito mais estreita do que a largura normal.)
font-stretch: extra-condensed; (A fonte é esticada além da largura normal, mas menos do que ultra-condensed.)
font-stretch: condensed; (A fonte é esticada para ser mais estreita do que a normal, mas menos do que extra-condensed.)
font-stretch: semi-condensed; (A fonte é ligeiramente mais estreita do que a normal.)
font-stretch: semi-expanded; (A fonte é ligeiramente mais larga do que a normal.)
font-stretch: expanded; (A fonte é esticada para ser mais larga do que a normal, mas menos do que extra-expanded.)
font-stretch: extra-expanded; (A fonte é esticada além da largura normal, mas menos do que ultra-expanded.)
font-stretch: ultra-expanded; (A fonte é esticada ao máximo, tornando-a muito mais larga do que a largura normal.)
font-stretch: 50%; (Este valor especifica uma largura relativa da fonte em relação à largura normal. )
font-synthesis: (é usada para controlar a síntese de fontes para permitir ou desabilitar a síntese de estilo, peso, posição e maiúsculas pequenas (small-caps) em fontes que não possuem essas características diretamente.)
font-synthesis: none; (Isso desativa completamente a síntese de fontes. Nenhuma síntese de estilo, peso, posição ou maiúsculas pequenas será aplicada.)
font-synthesis: weight; (Isso permite a síntese de peso da fonte. Se a fonte não tiver uma variante de peso específica, o navegador tentará sintetizar um peso de fonte adequado.)
font-synthesis: style; (Isso permite a síntese de estilo da fonte. Se a fonte não tiver uma variante de estilo específica (como itálico), o navegador tentará sintetizar o estilo da fonte.)
font-synthesis: position; (Isso permite a síntese de posição da fonte. Isso se aplica principalmente a variantes de posição (como subscrito e sobrescrito).)
font-synthesis: small-caps; (Isso permite a síntese de maiúsculas pequenas (small-caps) em fontes que não possuem essa variante. O navegador tentará sintetizar maiúsculas pequenas se a fonte original não as tiver.)
font-variant: small-caps; / common-ligatures; / normal; / no-common-ligatures / slashed-zero; / proportional-nums;( é usada para especificar variações na apresentação de fontes.)
font-variant-alternates: (é usada para especificar quais formas alternativas de glifos devem ser usadas ao renderizar o texto)
font-variant-alternates: normal; (Este é o valor padrão. Indica que as formas de glifos padrão da fonte devem ser usadas)
font-variant-alternates: historical-forms; (Isso indica que as formas históricas de glifos devem ser usadas, se disponíveis na fonte.)
font-variant-alternates: stylistic(user-defined-ident); (Isso permite especificar uma forma estilística específica de glifo, identificada pelo usuário.)
font-variant-alternates: styleset(user-defined-ident); (Isso permite especificar um conjunto de estilos específicos de glifos, identificado pelo usuário.)
font-variant-alternates: character-variant(user-defined-ident); (Isso permite especificar uma variante de caractere específica de glifo, identificada pelo usuário.)
font-variant-alternates: swash(user-defined-ident); (Isso permite especificar um glifo com ornamentos ou "swash", identificado pelo usuário.)
font-variant-alternates: ornaments(user-defined-ident); (Isso permite especificar um glifo ornamental específico, identificado pelo usuário.)
font-variant-alternates: annotation(user-defined-ident); (Isso permite especificar um glifo de anotação específico, identificado pelo usuário.)
font-variant-alternates: swash(ident1) annotation(ident2); (Isso permite especificar um glifo com ornamentos e um glifo de anotação específicos, identificados pelo usuário.)
font-variant-caps: (é usada para controlar a aparência das letras maiúsculas em um texto.)
font-variant-caps: normal; (Este é o valor padrão. Indica que a capitalização das letras segue o comportamento padrão da fonte.)
font-variant-caps: small-caps; (Isso transforma todas as letras maiúsculas em maiúsculas pequenas, onde as letras maiúsculas são substituídas por versões menores das letras maiúsculas correspondentes.)
font-variant-caps: all-small-caps; (Isso transforma todas as letras, incluindo letras minúsculas, em maiúsculas pequenas.)
font-variant-caps: petite-caps; (Isso transforma todas as letras maiúsculas em maiúsculas em tamanho reduzido (petite-caps).)
font-variant-caps: all-petite-caps; (Isso transforma todas as letras, incluindo letras minúsculas, em maiúsculas em tamanho reduzido (petite-caps).)
font-variant-caps: unicase; (Isso transforma as letras maiúsculas em maiúsculas unicase, que são variantes de letras maiúsculas que mantêm a altura das letras minúsculas.)
font-variant-caps: titling-caps; (Isso transforma as letras maiúsculas em maiúsculas de títulos (titling-caps), que são variantes de letras maiúsculas geralmente projetadas para uso em títulos e cabeçalhos.)
font-variant-east-asian: (é usada para controlar a apresentação de caracteres específicos do leste asiático em uma fonte. Esses caracteres incluem caracteres chineses, japoneses e coreanos (também conhecidos como CJKV), bem como caracteres de kana e kanji usados em japonês.)
font-variant-east-asian: normal; (Este é o valor padrão. Indica que a apresentação dos caracteres do leste asiático segue o comportamento padrão da fonte.)
font-variant-east-asian: ruby;(Especifica que os caracteres devem ser apresentados com formato de rubi, que é usado em textos japoneses para mostrar a pronúncia fonética ou o significado de caracteres.)
font-variant-east-asian: jis78; /  jis83; / jis90; / jis04; (Esses valores especificam o uso de padrões de codificação JIS (Japanese Industrial Standards) específicos para caracteres japoneses.)
font-variant-east-asian: simplified; (Especifica que os caracteres chineses devem ser apresentados na forma simplificada.)
font-variant-east-asian: traditional; (Especifica que os caracteres chineses devem ser apresentados na forma tradicional.)
font-variant-east-asian: full-width; (Especifica que os caracteres devem ser apresentados em largura total, o que é comum em muitas fontes para caracteres do leste asiático.)
font-variant-east-asian: proportional-width; (Especifica que os caracteres devem ser apresentados em largura proporcional, o que significa que cada caractere tem sua própria largura, semelhante ao texto latino.)
font-variant-emoji: (é uma propriedade experimental CSS que foi proposta para lidar com a renderização de emojis em navegadores da web. No entanto, seu suporte ainda é limitado e pode não funcionar conforme esperado em todos os navegadores.)
font-variant-emoji: normal; (Este é o valor padrão. Indica que a renderização de emojis seguirá o comportamento padrão do navegador.)
font-variant-emoji: text; (Este valor é usado para renderizar emojis como texto. Isso significa que os emojis serão renderizados usando fontes de texto padrão, em vez de imagens coloridas.)
font-variant-emoji: emoji; (Este valor é usado para renderizar emojis como imagens coloridas. Isso garante que os emojis sejam sempre exibidos como imagens, independentemente da fonte usada para o texto circundante.)
font-variant-emoji: unicode; (Este valor é usado para renderizar emojis usando sequências Unicode. Isso pode ser útil para garantir uma renderização consistente de emojis em diferentes sistemas e navegadores.)
font-variant-ligatures: (é usada para controlar a exibição de ligaduras (combinações de dois ou mais glifos em uma única forma) em texto. Ligaduras podem ser estilisticamente importantes para certas fontes e idiomas.)
font-variant-ligatures: normal; (Este é o valor padrão. Indica que a renderização do texto seguirá o comportamento padrão da fonte, incluindo ligaduras se estiverem presentes na fonte)
font-variant-ligatures: none; (Isso desabilita todas as ligaduras, independentemente do comportamento padrão da fonte.)
font-variant-ligatures: common-ligatures; (Isso habilita ligaduras comuns, que são ligaduras amplamente utilizadas e esperadas em fontes de texto.)
font-variant-ligatures: no-common-ligatures; (Isso desabilita ligaduras comuns, que são ligaduras amplamente utilizadas e esperadas em fontes de texto.)
font-variant-ligatures: discretionary-ligatures; (Isso habilita ligaduras discretas, que são ligaduras estilísticas adicionais projetadas pelo designer da fonte.)
font-variant-ligatures: no-discretionary-ligatures; (Isso desabilita ligaduras discretas, que são ligaduras estilísticas adicionais projetadas pelo designer da fonte.)
font-variant-ligatures: historical-ligatures; (Isso habilita ligaduras históricas, que são ligaduras baseadas em formas de caracteres antigas.)
font-variant-ligatures: no-historical-ligatures; (Isso desabilita ligaduras históricas, que são ligaduras baseadas em formas de caracteres antigas.)
font-variant-ligatures: contextual; (Isso habilita ligaduras contextuais, que são ligaduras que dependem do contexto em que são usadas.)
font-variant-ligatures: no-contextual; (Isso desabilita ligaduras contextuais, que são ligaduras que dependem do contexto em que são usadas.)
font-variant-numeric: (é usada para controlar a apresentação de números em texto. Ela permite especificar diferentes estilos de numeração, como números proporcionais, números antigos (old-style), números de estilo de tabulação (tabular), frações diagonais e frações empilhadas, entre outros.)
font-variant-numeric: normal; (Este é o valor padrão. Indica que a apresentação dos números seguirá o comportamento padrão da fonte.)
font-variant-numeric: ordinal; (Isso habilita o uso de sufixos ordinais para números (por exemplo, "1st", "2nd", "3rd", etc.).)
font-variant-numeric: slashed-zero; (Isso habilita o uso de um "zero barrado" (0) como uma variação estilística específica.)
font-variant-numeric: lining-nums; (Isso habilita o uso de números de estilo em linha, que são alinhados com a linha de base do texto.)
font-variant-numeric: oldstyle-nums; (Isso habilita o uso de números antigos (old-style), que têm alturas variadas e ascendentes e descendentes.)
font-variant-numeric: proportional-nums; (Isso habilita o uso de números proporcionais, que têm larguras variadas e se ajustam melhor ao texto circundante.)
font-variant-numeric: tabular-nums; (Isso habilita o uso de números de estilo de tabulação (tabular), que têm larguras fixas e são úteis para alinhar números em colunas.)
font-variant-numeric: diagonal-fractions; (Isso habilita o uso de frações diagonais para representar frações.)
font-variant-numeric: stacked-fractions; (Isso habilita o uso de frações empilhadas para representar frações.)
font-variant-position: normal; (Este é o valor padrão. Indica que o caractere deve ser renderizado em sua posição normal em relação à linha de base do texto.)
font-variant-position: sub; (Indica que o caractere deve ser renderizado como subscrito, ou seja, com sua posição inferior à linha de base.)
font-variant-position: super; (Indica que o caractere deve ser renderizado como sobrescrito, ou seja, com sua posição superior à linha de base.)
font-variation-settings: normal; / "XHGT" 0.7; (é utilizada para controlar as variações específicas de uma fonte de maneira detalhada. Essas variações podem incluir peso, largura, inclinação, entre outras.)

text-shadow: 1px 1px 2px black; (define um efeito de sombra para o texto.)
O primeiro valor (1px) especifica o deslocamento horizontal da sombra em relação ao texto. Neste caso, a sombra será deslocada 1 pixel para a direita.
O segundo valor (1px) especifica o deslocamento vertical da sombra em relação ao texto. Neste caso, a sombra será deslocada 1 pixel para baixo.
O terceiro valor (2px) especifica o raio da sombra, ou seja, a difusão da sombra. Quanto maior o valor, mais difusa será a sombra. Neste caso, a sombra terá um raio de 2 pixels.
O quarto valor (black) especifica a cor da sombra. Neste caso, a sombra será preta.

text-size-adjust: auto;/none;/<percentage>/<length>/inherit; (controla a maneira como o tamanho da fonte de texto é ajustado em relação ao tamanho da fonte padrão do dispositivo. No entanto, é importante observar que essa propriedade é relativamente pouco suportada pelos navegadores e, portanto, pode não funcionar consistentemente em todos os ambientes.)
auto: Indica que o navegador deve ajustar automaticamente o tamanho do texto para garantir a legibilidade em diferentes dispositivos. Esta é geralmente a configuração padrão.
none: Indica que o tamanho do texto não deve ser ajustado em relação ao tamanho da fonte padrão do dispositivo.
<percentage>: Um valor numérico que representa um percentual pelo qual o tamanho do texto deve ser ajustado. Por exemplo, 120% aumentará o tamanho do texto em 20% em relação ao tamanho padrão.
<length>: Um valor numérico que representa um tamanho fixo pelo qual o texto deve ser ajustado. Por exemplo, 2em aumentará o tamanho do texto em 2 vezes o tamanho padrão.
inherit: Indica que a propriedade deve herdar o valor do elemento pai.

text-underline-offset: auto; / 0.1em; / 3px; (é usada para controlar o deslocamento vertical do sublinhado (underline) de um texto em relação à sua linha de base. Isso permite ajustar a posição vertical do sublinhado em relação ao texto)
text-underline-position: (é usada para controlar a posição do sublinhado (underline) em relação ao texto. )
text-underline-position: auto; (Este é o valor padrão. O navegador decide a posição do sublinhado automaticamente com base em várias considerações, como o contexto de layout e a direção do texto.)
text-underline-position: under; (O sublinhado é posicionado abaixo do texto, seguindo a linha de base padrão.)
text-underline-position: left; (O sublinhado é posicionado à esquerda do texto, alinhado verticalmente com a borda esquerda do texto.)
text-underline-position: right; (O sublinhado é posicionado à direita do texto, alinhado verticalmente com a borda direita do texto.)

text-align: center; (Alinhamento ao centro)
text-align: left; (O texto é alinhado à esquerda.)
text-align: right; (O texto é alinhado à direita.)
text-align: justify; (O texto é justificado, o que significa que as palavras são espaçadas uniformemente para preencher a largura do contêiner, exceto a última linha.)
text-align: start; (O texto é alinhado à direção do texto. No caso de texto em inglês, é alinhado à esquerda.)
text-align: end; (O texto é alinhado à direção oposta à do texto. No caso de texto em inglês, é alinhado à direita.)
text-align: inherit; O elemento herda o valor de text-align de seu elemento pai.)
text-align: initial; (Define o valor inicial de text-align, que é left.)
text-align: unset; (Retorna o valor de text-align para o seu valor inicial, se estiver definido pelo usuário, caso contrário, para inherit.)
text-align-last: (é utilizada para definir como o alinhamento horizontal do último bloco ou linha de texto de um elemento deve ser tratado, quando o texto é distribuído em várias linhas.)
text-align-last: auto; (Esse é o valor padrão. O último bloco ou linha de texto será alinhado de acordo com o valor definido pela propriedade text-align do elemento.)
text-align-last: start; (O último bloco ou linha de texto será alinhado à esquerda (no caso de texto da esquerda para a direita) ou à direita (no caso de texto da direita para a esquerda).)
text-align-last: end; ( O último bloco ou linha de texto será alinhado à direita (no caso de texto da esquerda para a direita) ou à esquerda (no caso de texto da direita para a esquerda).)
text-align-last: left; (O último bloco ou linha de texto será alinhado à esquerda.)
text-align-last: right; (O último bloco ou linha de texto será alinhado à direita.)
text-align-last: center; (O último bloco ou linha de texto será alinhado ao centro.)
text-align-last: justify; (O último bloco ou linha de texto será justificado, distribuindo uniformemente o espaço entre as palavras.)

text-justify: (é utilizada para controlar o alinhamento e a justificação do texto dentro de um contêiner. Ela determina como o espaço extra é distribuído entre as palavras ou caracteres quando o texto é justificado.)
text-justify: none; (O texto não é justificado. Isso é o padrão.)
text-justify: auto; (O navegador decide a justificação do texto automaticamente.)
text-justify: inter-word; (Justifica o texto de modo que o espaço extra seja distribuído entre as palavras.)
text-justify: inter-character; (Justifica o texto de modo que o espaço extra seja distribuído entre os caracteres.)
text-justify: distribute; (Distribui uniformemente o espaço extra entre as palavras e os caracteres, ajustando o espaçamento entre letras e palavras de forma variável.)

text-decoration: none; (está especificando que nenhum estilo de decoração (como sublinhado) será aplicado ao texto.)
text-decoration: underline; (Adiciona um sublinhado ao texto.)
text-decoration: overline; (Adiciona uma linha sobre o texto.)
text-decoration: line-through; (Adiciona uma linha através do texto, como se estivesse tachado.)
text-decoration: blink; (Faz o texto piscar. (Não é amplamente suportado e geralmente não é recomendado devido à falta de suporte e acessibilidade.)
text-decoration: underline line-through; (aplicaria um sublinhado e uma linha através do texto.)
text-decoration-color: red; (é usada para especificar a cor da linha de decoração de texto, como sublinhado ou linha sobre o texto.)
text-decoration-line: (é usada para especificar o tipo de linha de decoração a ser aplicada a um elemento de texto.)
text-decoration-line: none; (Nenhuma linha de decoração é aplicada (valor padrão).)
text-decoration-line: underline; (Uma linha é desenhada abaixo do texto.)
text-decoration-line: overline; (Uma linha é desenhada acima do texto.)
text-decoration-line: line-through; (Uma linha é desenhada através do meio do texto.)
text-decoration-line: blink (Este valor não é mais parte das especificações e não é suportado na maioria dos navegadores modernos. Antigamente, era usado para criar um efeito de piscar (texto piscante), mas não é recomendado devido à má usabilidade e não é suportado em muitos navegadores.)
text-decoration-skip: (é usada para controlar quais partes do texto devem ser ignoradas ao aplicar a decoração de texto, como sublinhado, linha sobre o texto, etc. Essa propriedade é útil para evitar que a decoração se sobreponha a elementos específicos ou partes do texto.)
text-decoration-skip: none; (Nenhuma parte do texto é ignorada ao aplicar a decoração de texto (valor padrão).)
text-decoration-skip: objects; (Ignora objetos inseridos no texto, como imagens.)
text-decoration-skip: spaces; (Ignora espaços em branco entre palavras.)
text-decoration-skip: edges; (Ignora as bordas do texto, como as bordas das caixas de texto.)
text-decoration-skip: box-decoration; (Ignora a decoração da caixa (como bordas e preenchimento) ao redor do texto.)
text-decoration-skip-ink: (é usada para controlar como a decoração de texto (como sublinhado, linha sobre o texto, etc.) deve ser desenhada em torno de caracteres que se projetam para além do limite da caixa de tinta.)
text-decoration-skip-ink: none; (Nenhuma parte da decoração de texto será pulada em torno de caracteres que se projetam além do limite da caixa de tinta.)
text-decoration-skip-ink: auto; (O navegador decidirá automaticamente se deve pular ou não a decoração de texto em torno de caracteres que se projetam além do limite da caixa de tinta.)
text-decoration-skip-ink: all; (A decoração de texto será pulada em torno de todos os caracteres que se projetam além do limite da caixa de tinta.)
text-decoration-style: (é utilizada para definir o estilo da linha de decoração do texto, como sublinhado, linha sobre o texto, etc.)
text-decoration-style: solid; (Define uma linha de decoração sólida.)
text-decoration-style: double; (Define uma linha de decoração dupla.)
text-decoration-style: dotted; (Define uma linha de decoração pontilhada.)
text-decoration-style: dashed; (Define uma linha de decoração tracejada.)
text-decoration-style: wavy; (Define uma linha de decoração ondulada.)
text-decoration-thickness: (é utilizada para definir a espessura da linha de decoração de texto, como sublinhado, linha sobre o texto, etc.)
text-decoration-thickness: auto; (O navegador determina a espessura da linha de decoração de texto.)
text-decoration-thickness: from-font; (A espessura da linha de decoração de texto é determinada pela fonte do texto.)
text-decoration-thickness: 0.1em; (Especifica uma espessura fixa para a linha de decoração de texto, onde <length> é um valor de comprimento, como px, em, rem, etc.)

text-transform: (é usada para especificar como o texto deve ser transformado, como alterar para maiúsculas, minúsculas, capitalizar ou aplicar outras transformações.)
text-transform: none; (Nenhuma transformação é aplicada. O texto permanece como é.)
text-transform: capitalize; (Transforma a primeira letra de cada palavra em maiúscula.)
text-transform: uppercase; (Transforma todo o texto em letras maiúsculas.)
text-transform: lowercase; (Transforma todo o texto em letras minúsculas.)
text-transform: full-width; (Transforma o texto em um formato de largura total, ampliando caracteres para preencher a largura total de seus contêineres. Isso é mais comum em idiomas como o japonês ou chinês.)
text-transform: full-size-kana; (Transforma caracteres kana em uma variante de largura total. Isso é usado especificamente para texto japonês.)

text-rendering: (é utilizada para controlar a renderização de texto em um navegador. Ela define a qualidade de renderização do texto, afetando aspectos como a nitidez e a suavidade das bordas das fontes.)
text-rendering: auto; (Deixa o navegador escolher a qualidade de renderização padrão para o texto. A renderização pode variar entre navegadores.)
text-rendering: optimizeSpeed; (Prioriza a velocidade de renderização em detrimento da qualidade. Pode resultar em renderização mais rápida, mas com uma qualidade de texto potencialmente inferior.)
text-rendering: optimizeLegibility; (Prioriza a legibilidade do texto. Isso pode incluir aprimoramentos para melhorar a clareza do texto, mas pode afetar o desempenho em alguns casos.)
text-rendering: geometricPrecision; (Foca em precisão geométrica para a renderização de texto. Isso pode resultar em bordas mais nítidas e linhas mais definidas, especialmente em tamanhos de fonte pequenos.)

text-emphasis: (é utilizada para adicionar ênfase visual ao texto, como uma marcação ou destaque.)
text-emphasis: filled; (Aplica um destaque preenchido ao texto, geralmente uma cor sólida ou uma textura preenchida.)
text-emphasis: open; (Aplica um destaque vazado ao texto, onde o interior das letras é removido ou transparente.)
text-emphasis: "<string>"; (Especifica uma imagem ou marcação a ser usada para ênfase. A string pode ser um valor de imagem, como uma URL, ou uma string de marcação, como "x".)
text-emphasis: none; (Remove qualquer ênfase visual aplicada ao texto.)
text-emphasis-color: #555; (é utilizada para definir a cor da ênfase visual aplicada ao texto usando a propriedade text-emphasis. Esta propriedade é útil para definir a cor do destaque, seja ele preenchido ou vazado.)
text-emphasis-position: (é utilizada para definir a posição da ênfase visual aplicada ao texto usando a propriedade text-emphasis. Ela determina onde a ênfase visual será posicionada em relação ao texto.)
text-emphasis-position: over right; (Posiciona a ênfase visual acima do texto, alinhada à direita.)
text-emphasis-position: over left; (Posiciona a ênfase visual acima do texto, alinhada à esquerda.)
text-emphasis-position: under right; (Posiciona a ênfase visual abaixo do texto, alinhada à direita.)
text-emphasis-position: under left; (Posiciona a ênfase visual abaixo do texto, alinhada à esquerda.)
text-emphasis-position: left over; (Posiciona a ênfase visual à esquerda do texto, alinhada acima.)
text-emphasis-position: right under; (Posiciona a ênfase visual à direita do texto, alinhada abaixo.)
text-emphasis-position: left under; (Posiciona a ênfase visual à esquerda do texto, alinhada abaixo.)
text-emphasis-style: (é utilizada para definir o estilo da ênfase visual aplicada ao texto usando a propriedade text-emphasis. Ela determina o estilo gráfico da ênfase visual, como preenchido, aberto, com pontos, etc.)
text-emphasis-style: filled; (Aplica um estilo de ênfase visual preenchido.)
text-emphasis-style: open; (Aplica um estilo de ênfase visual aberto.)
text-emphasis-style: dot; (Aplica um estilo de ênfase visual com pontos.)
text-emphasis-style: circle; (Aplica um estilo de ênfase visual com círculo.)
text-emphasis-style: double-circle; (Aplica um estilo de ênfase visual com círculo duplo.)
text-emphasis-style: triangle; (Aplica um estilo de ênfase visual com triângulo.)
text-emphasis-style: filled; (Isso aplica um estilo de ênfase visual preenchido ao texto.)
text-emphasis-style: none; (Remove qualquer estilo de ênfase visual aplicado.)
text-emphasis-style: open; (Isso aplica um estilo de ênfase visual aberto ao texto.)

text-indent: (é utilizada para definir o recuo (ou "indentação") da primeira linha de um bloco de texto. No entanto, a sintaxe para este valor pode ser um pouco complexa.)
text-indent: 5em each-line; (Isso define um recuo de 5em para cada linha do bloco de texto.)
text-indent: 5em hanging; (Isso define um recuo de 5em onde a primeira linha do bloco de texto é recuada em relação às demais linhas.)
text-indent: 5em hanging each-line; (Isso define um recuo de 5em onde a primeira linha do bloco de texto é recuada em relação às demais linhas, e cada linha do bloco de texto tem um recuo adicional de 5em.)

text-overflow: (controla o comportamento do texto quando ele transborda o contêiner em que está contido. Esta propriedade é comumente usada em conjunto com a propriedade overflow para lidar com casos em que o texto é longo demais para caber no espaço disponível.)
text-overflow: clip; (O texto que transborda o contêiner é cortado, ou seja, é completamente removido da visualização.)
text-overflow: ellipsis; (O texto que transborda o contêiner é substituído por um caractere de reticências (...), indicando que mais texto está disponível, mas não está sendo mostrado.)

text-orientation: (é utilizada para controlar a orientação do texto em um elemento. Ela determina se o texto é exibido na direção padrão (vertical ou horizontal) ou se é rotacionado de alguma forma.)
text-orientation: mixed; (Esta opção é usada quando o texto contém caracteres que são orientados verticalmente e horizontalmente, como em idiomas asiáticos.)
text-orientation: upright; (Esta opção é usada para exibir o texto verticalmente, com os caracteres na posição vertical, como em idiomas asiáticos.)
text-orientation: sideways-right; (Esta opção é usada para rotacionar o texto em 90 graus no sentido horário, mantendo os caracteres na posição vertical.)
text-orientation: sideways; (Esta opção é usada para rotacionar o texto em 90 graus no sentido anti-horário, mantendo os caracteres na posição vertical.)
text-orientation: use-glyph-orientation; (Esta opção é usada para usar a orientação do glifo, o que significa que a orientação do texto será determinada pelos glifos individuais, em vez de uma orientação fixa.)

text-combine-upright: (é utilizada para controlar a forma como os caracteres de texto são renderizados quando estão em uma orientação vertical, como pode ser o caso em scripts asiáticos. Ela afeta principalmente a forma como os caracteres numéricos são renderizados.)
text-combine-upright: none; (Os caracteres são renderizados individualmente, sem combinação, mesmo se estiverem em uma orientação vertical.)
text-combine-upright: all; (Os caracteres são combinados verticalmente quando possível, criando uma visualização mais compacta e estilizada. Isso é frequentemente usado para combinar dígitos em um único caractere vertical.)
text-combine-upright: digits; (Apenas os dígitos numéricos são combinados verticalmente. Isso é útil em scripts asiáticos onde os dígitos podem ser combinados para formar caracteres verticalmente.)
text-combine-upright: digits 4; (Semelhante ao valor digits, mas você pode especificar o número de dígitos que devem ser combinados verticalmente em um único caractere. Por exemplo, digits 4 combinará grupos de 4 dígitos verticalmente.)

vertical-align: (é usada para controlar o alinhamento vertical de elementos em relação à linha de base (baseline) de seu contêiner ou em relação a outros elementos na mesma linha.)
vertical-align: baseline; (Alinha o elemento com a linha de base do texto circundante.)
vertical-align: sub; (Alinha o elemento como se fosse um subscrito ao texto circundante.)
vertical-align: super; (Alinha o elemento como se fosse um sobrescrito ao texto circundante.)-
vertical-align: text-top; (Alinha o elemento ao topo do texto circundante.)
vertical-align: text-bottom; (Alinha o elemento à parte inferior do texto circundante.)
vertical-align: middle; (Alinha o elemento verticalmente ao centro do texto circundante.)
vertical-align: top; (Alinha o elemento ao topo de seu contêiner.)
vertical-align: bottom; (Alinha o elemento à parte inferior de seu contêiner.)
vertical-align: 10em; (Você também pode especificar um valor de comprimento, como 10em, para definir um deslocamento vertical em relação à linha de base. Isso permite um posicionamento mais preciso em relação ao texto circundante.)

word-break: (é utilizada para controlar o comportamento da quebra de palavras dentro de um elemento quando o texto não cabe dentro de seu contêiner. Ela determina como as palavras longas ou não divisíveis devem ser quebradas e exibidas quando o espaço disponível é insuficiente para conter a palavra inteira.)
word-break: normal; (Esse é o valor padrão. Ele quebra palavras longas ou não divisíveis apenas quando necessário, seguindo as regras padrão de quebra de palavras.)
word-break: break-all; (Força a quebra de palavras longas ou não divisíveis em qualquer ponto dentro da palavra, mesmo no meio de uma letra. Isso pode resultar em palavras quebradas de maneira não uniforme ou menos legíveis.)
word-break: keep-all; (Evita a quebra de palavras longas ou não divisíveis, mantendo-as juntas sempre que possível. Isso é útil para texto com caracteres não latinos, como o texto chinês ou japonês, onde as quebras de palavras são menos desejáveis.)
word-break: auto-phrase; (Faz com que o navegador use um algoritmo de quebra de palavras otimizado para determinados idiomas asiáticos, como chinês e japonês, para evitar quebras de palavras inapropriadas entre frases.)
word-break: break-word; (Este valor é uma forma mais antiga e não padronizada de break-all. Ele força a quebra de palavras longas ou não divisíveis em qualquer ponto dentro da palavra, sem levar em consideração a legibilidade ou as regras gramaticais.)

word-spacing: 2px; / normal; (é utilizada para controlar o espaçamento entre as palavras em um texto. Ela define o tamanho do espaço adicional que será inserido entre as palavras em um elemento de texto.)

line-break: (é usada para especificar como quebras de linha devem ser tratadas dentro de um elemento de texto. Ela controla o comportamento de quebra de linha entre palavras e caracteres dentro de um texto.)
line-break: auto; (Este é o valor padrão. Ele permite que o navegador determine automaticamente onde quebrar as linhas.)
line-break: loose; (Este valor permite que o navegador quebre linhas em qualquer lugar entre palavras.)
line-break: normal; (Este valor especifica um comportamento de quebra de linha padrão, permitindo que o navegador quebre linhas entre palavras de acordo com regras linguísticas padrão.)
line-break: strict; (Este valor especifica um comportamento de quebra de linha estrito, onde o navegador tenta evitar quebras de linha dentro de uma palavra, mesmo se isso resultar em overflow do conteúdo.)
line-break: anywhere; (Este valor permite que o navegador quebre linhas em qualquer lugar, inclusive dentro de palavras, para evitar overflow de conteúdo. Isso pode resultar em quebras de palavras em locais inesperados.)

background-color: #ff9500; (Mudar cor do fundo)
background-image: url(star.svg); (é usada para definir uma imagem de plano de fundo para um elemento HTML. Ela especifica a URL da imagem que será usada como plano de fundo.)
background-position: 0 0; / top; / bottom; / left; / rigth; / center; / 20px; ( é usada para definir a posição inicial do plano de fundo de um elemento HTML em relação ao seu contêiner. Ela especifica as coordenadas horizontais e verticais onde o plano de fundo será posicionado.)
background-position-y: 0 0; / top; / bottom; / left; / rigth; / center; / 20px; (é usada para definir a posição vertical do plano de fundo de um elemento. )
background-position-x: 0 0; / top; / bottom; / left; / rigth; / center; / 20px; (é usada para definir a posição horizontal do plano de fundo de um elemento. )
background-size: 1.6rem 1.6rem; / 50%; / 12px; / auto; (define o tamanho da imagem de plano de fundo de um elemento HTML. No exemplo fornecido, background-size: 1.6rem 1.6rem;, o tamanho da imagem de plano de fundo é definido como 1.6rem de largura e 1.6rem de altura.)
background-size: cover; (A imagem de fundo é dimensionada de modo que ela cubra completamente a área do elemento. Isso significa que a imagem pode ser redimensionada para que ela preencha toda a área do elemento, sem distorção, e algumas partes da imagem podem ser cortadas se necessário para manter a proporção original da imagem.)
background-size: contain; (A imagem de fundo é dimensionada de modo que ela seja totalmente visível dentro da área do elemento. Isso significa que a imagem é redimensionada para que ela caiba completamente dentro da área do elemento, mantendo a proporção original da imagem, e sem distorção. Não haverá partes da imagem cortadas, mas pode haver espaços vazios ao redor da imagem se a proporção da imagem não corresponder exatamente à proporção da área do elemento.)
background-repeat: no-repeat; (é utilizada para especificar se e como uma imagem de plano de fundo deve ser repetida (ou não) dentro do elemento ao qual está sendo aplicada.)
background-repeat: repeat-x; (Repete a imagem de fundo horizontalmente ao longo do eixo X (horizontal), sem repetição vertical. Isso significa que a imagem de fundo será repetida apenas horizontalmente, e não verticalmente.)
background-repeat: repeat-y; (Repete a imagem de fundo verticalmente ao longo do eixo Y (vertical), sem repetição horizontal. Isso significa que a imagem de fundo será repetida apenas verticalmente, e não horizontalmente.)
background-repeat: repeat; (Repete a imagem de fundo tanto horizontal quanto verticalmente. Isso é o mesmo que especificar repeat-x e repeat-y juntos.)
background-repeat: space; (Repete a imagem de fundo tanto horizontal quanto verticalmente, mas dimensiona a imagem para que ela preencha completamente o elemento, mantendo a mesma distância entre cada repetição. Se a imagem não puder ser dimensionada para preencher completamente o elemento, ela será cortada no final.)
background-repeat: round; (Repete a imagem de fundo tanto horizontal quanto verticalmente, mas dimensiona a imagem para que ela preencha completamente o elemento, sem cortar ou distorcer a imagem. Se a imagem não puder ser dimensionada para preencher completamente o elemento, ela será duplicada ou triplicada até que o elemento esteja completamente preenchido, e as repetições restantes serão cortadas.)
background-attachment (é usada para definir se e como a imagem de fundo de um elemento se move em relação à rolagem da página)
background-attachment: scroll; ( Esta é a configuração padrão. A imagem de fundo rolará junto com o conteúdo da página à medida que você rola a página para cima ou para baixo.)
background-attachment: fixed; (A imagem de fundo permanecerá fixa em relação à janela do navegador. Isso significa que, independentemente de você rolar a página, a imagem de fundo permanecerá no mesmo local na janela do navegador.)
background-attachment: local; (A imagem de fundo rolará junto com o elemento que a contém. Se o elemento se mover devido à rolagem da página, a imagem de fundo se moverá junto com ele. Isso pode ser útil para criar efeitos de paralaxe, onde a imagem de fundo se move a uma taxa diferente do conteúdo da página.)
background-blend-mode: (é usada para definir como as imagens de fundo e as cores de fundo de um elemento se misturam entre si. Ela aceita um ou mais valores de modo de mesclagem.)
background-blend-mode: normal; (Este é o valor padrão. Ele especifica que as imagens de fundo e as cores de fundo não serão mescladas entre si.)
background-blend-mode: darken; (seleciona o valor mais escuro de cada canal de cor entre as imagens de fundo e as cores de fundo.)
background-blend-mode: luminosity; (ajusta a luminosidade da imagem de fundo com base na cor de fundo.)
background-blend-mode: multiply; (As cores das imagens de plano de fundo são multiplicadas pelas cores do elemento e do conteúdo por baixo. Isso resulta em uma aparência mais escura e mais saturada.)
background-blend-mode: screen; (As cores das imagens de plano de fundo são clareadas pela cor do elemento e do conteúdo por baixo. Isso resulta em uma aparência mais clara e mais saturada.)
background-blend-mode: overlay; (Combinação de multiply e screen. As áreas escuras da imagem de plano de fundo tornam-se mais escuras, enquanto as áreas claras tornam-se mais claras.)
background-blend-mode: lighten; (Escolhe o valor mais claro entre a cor do elemento e a cor da imagem de plano de fundo para cada canal de cor (vermelho, verde, azul).
background-blend-mode: color-dodge; (Divide a cor do elemento pelas cores das imagens de plano de fundo. O resultado é uma cor mais clara.)
background-blend-mode: color-burn; (Divide a cor do elemento pelas cores das imagens de plano de fundo e depois inverte o resultado. O resultado é uma cor mais escura.)
background-blend-mode: hard-light; (Combinação de overlay e screen. As áreas escuras da imagem de plano de fundo tornam-se mais escuras, enquanto as áreas claras tornam-se mais claras.)
background-blend-mode: soft-light; (Combinação de overlay e screen, mas é mais suave do que hard-light.)
background-blend-mode: difference:; (Subtrai o valor da cor da imagem de plano de fundo do valor da cor do elemento. O resultado pode ser negativo, o que pode resultar em uma inversão de cores.)
background-blend-mode: exclusion; (Um efeito de inversão de cor que subtrai o dobro da cor de fundo da cor do elemento.)
background-blend-mode: hue; (Mantém a luminosidade e a saturação originais das imagens de plano de fundo, mas aplica o tom (matiz) da camada de plano de fundo superior à camada de fundo inferior.)
background-blend-mode: saturation; (Mantém a luminosidade e o tom originais das imagens de plano de fundo, mas aplica a saturação da camada de plano de fundo superior à camada de fundo inferior.)
background-blend-mode: color; (Mantém a luminosidade original das imagens de plano de fundo, mas aplica o tom e a saturação da camada de plano de fundo superior à camada de fundo inferior.)
background-clip: (é utilizada para determinar como a imagem de fundo (ou a cor de fundo) de um elemento é cortada em relação à caixa de conteúdo do elemento.)
background-clip: border-box; (A imagem de fundo (ou a cor de fundo) se estende até a borda externa da caixa do elemento, incluindo a borda e a margem. Qualquer conteúdo ou preenchimento definido para o elemento estará acima da imagem de fundo.)
background-clip: padding-box; ( A imagem de fundo (ou a cor de fundo) se estende até a borda interna da caixa do elemento, excluindo a borda, mas incluindo o preenchimento e o conteúdo. Isso significa que a imagem de fundo é cortada na borda da área de preenchimento do elemento.)
background-clip: content-box; (A imagem de fundo (ou a cor de fundo) se estende apenas até a área de conteúdo do elemento, excluindo o preenchimento, a borda e a margem. Isso significa que a imagem de fundo é cortada na borda da área de conteúdo do elemento.)
background-clip: text; (A imagem de fundo (ou a cor de fundo) é limitada ao texto do elemento. Isso significa que a imagem de fundo só será visível onde o texto do elemento estiver presente.)
background-origin: (é usada para determinar o ponto de origem da imagem de fundo (ou a cor de fundo) de um elemento em relação à sua caixa.)
background-origin: border-box; (Este é o valor padrão. Ele especifica que o ponto de origem da imagem de fundo é o canto superior esquerdo da borda externa (border box) do elemento. Isso significa que a imagem de fundo (ou a cor de fundo) se estende por toda a área do elemento, incluindo a borda e a margem.)
background-origin: padding-box; (Este valor especifica que o ponto de origem da imagem de fundo é o canto superior esquerdo da borda interna (padding box) do elemento. Isso significa que a imagem de fundo (ou a cor de fundo) se estende pela área do elemento, excluindo a borda, mas incluindo o preenchimento.)
background-origin: content-box; (Este valor especifica que o ponto de origem da imagem de fundo é o canto superior esquerdo da área de conteúdo (content box) do elemento. Isso significa que a imagem de fundo (ou a cor de fundo) se estende apenas pela área de conteúdo do elemento, excluindo o preenchimento e a borda.)

touch-action: (é usada para controlar o comportamento do navegador quando ocorrem interações de toque (touch) em elementos da página. Esta propriedade especifica se e como um elemento pode ser manipulado pelo usuário através de gestos de toque.)
touch-action: auto; (O navegador decide automaticamente como lidar com as interações de toque com base no tipo de conteúdo e na configuração do próprio navegador.)
touch-action: none; (O navegador não executa nenhum comportamento padrão em resposta aos gestos de toque no elemento. Isso é útil quando você deseja criar seus próprios manipuladores de eventos de toque.)
touch-action: pan-x; (Permite que o usuário arraste horizontalmente (pan) o conteúdo do elemento.)
touch-action: pan-left; (Indica que o elemento pode ser arrastado horizontalmente para a esquerda.)
touch-action: pan-right; (Indica que o elemento pode ser arrastado horizontalmente para a direita.)
touch-action: pan-y; (Indica que o elemento pode ser arrastado verticalmente.)
touch-action: pan-up; (Indica que o elemento pode ser arrastado verticalmente para cima.)
touch-action: pan-down; (Indica que o elemento pode ser arrastado verticalmente para baixo.)
touch-action: pinch-zoom; (Indica que o elemento pode ser ampliado ou reduzido usando o gesto de pinça.)
touch-action: manipulation; (Indica que o navegador deve tratar o toque no elemento como uma ação de manipulação padrão, como rolagem, zoom, etc.)

table-layout: (é utilizada para especificar o algoritmo de layout a ser utilizado para renderizar uma tabela HTML e suas células. Ela define como as células de uma tabela devem ser dimensionadas e distribuídas.)
table-layout: auto; (O navegador calcula automaticamente as larguras das colunas e das tabelas com base no conteúdo das células. Isso pode resultar em uma tabela com larguras de coluna variáveis.)
table-layout: fixed; (As larguras das colunas são definidas explicitamente pelo autor do estilo ou pelo navegador. Isso resulta em uma tabela com larguras de coluna fixas, onde as larguras das colunas são distribuídas igualmente.)

resize: (é utilizada para especificar se um elemento é redimensionável pelo usuário e, em caso afirmativo, em qual direção ele pode ser redimensionado. Ela é aplicada principalmente a elementos como <textarea> e <iframe>.)
resize: none; (Este valor indica que o elemento não é redimensionável pelo usuário.)
resize: both; (Este valor indica que o elemento pode ser redimensionado pelo usuário em ambas as direções, tanto horizontal quanto verticalmente.)
resize: horizontal; (Este valor indica que o elemento pode ser redimensionado pelo usuário apenas horizontalmente.)
resize: vertical; (Este valor indica que o elemento pode ser redimensionado pelo usuário apenas verticalmente.)
resize: block; (Este valor é um alias para resize: both;, indicando que o elemento pode ser redimensionado tanto horizontal quanto verticalmente.)
resize: inline; (Este valor é um alias para resize: none;, indicando que o elemento não é redimensionável pelo usuário.)

outline: [outline-width] [outline-style] [outline-color]; / 2px solid red; (permite definir uma linha que circunda um elemento HTML. Esta linha é desenhada fora da borda do elemento, ocupando espaço adicional na caixa de layout apenas para fins visuais, sem afetar o tamanho ou o layout real do elemento.)
outline-width: thin; / medium; / thick; / 10px; / 1em; (Especifica a largura da linha do contorno)
outline-style: dotted; / dashed; / solid; / double; (Especifica o estilo da linha do contorno, como dotted (pontilhado), dashed (tracejado), solid (contínuo), double (duplo), entre outros.)
outline-color: #ff; (Especifica a cor da linha do contorno.)
outline-offset: 5px; (é uma propriedade em CSS que especifica a quantidade de espaço entre o contorno (outline) de um elemento e sua borda (border). Essencialmente, ela controla a distância entre o contorno e a borda do elemento.)

cursor: (é utilizada para definir o tipo de cursor que será exibido quando o cursor do mouse estiver sobre um elemento HTML. Ela pode aceitar vários valores para especificar diferentes tipos de cursores.)
cursor: auto; (O navegador define o cursor a ser exibido com base no contexto.)
cursor: pointer; (O cursor é exibido como uma mão, indicando que o elemento é clicável.)
cursor: zoom-out; (O cursor é exibido como um sinal de menos com uma lente, indicando que é possível reduzir o zoom em uma área de zoom.)
cursor: url(hand.png); (permite especificar um cursor personalizado usando um arquivo de imagem)

pointer-events: (é utilizada para controlar como um elemento responde a eventos do ponteiro do mouse ou de toque. Ela define se um elemento pode ser alvo de eventos de ponteiro e como esses eventos devem ser tratados.)
pointer-events: auto; (O elemento reage normalmente aos eventos de ponteiro. Isso significa que o elemento pode ser alvo de eventos de ponteiro, conforme definido pela posição do mouse ou de toque.)
pointer-events: none; (O elemento não reage a eventos de ponteiro. Isso significa que o elemento não é alvo de eventos de ponteiro e não responde a interações do mouse ou de toque.)
pointer-events: visiblePainted; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado, incluindo preenchimento e contorno.)
pointer-events: visibleFill; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado no preenchimento.)
pointer-events: visibleStroke; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado no contorno.)
pointer-events: visible; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado, incluindo preenchimento, contorno e sombras.)
pointer-events: painted; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado, incluindo preenchimento e contorno, mas não sombras.)
pointer-events: fill; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado no preenchimento, incluindo preenchimento e sombras, mas não contorno.)
pointer-events: stroke; (O elemento é alvo de eventos de ponteiro apenas onde ele tem conteúdo renderizado no contorno, incluindo contorno e sombras, mas não preenchimento.)
pointer-events: all; (O elemento é alvo de eventos de ponteiro em todas as áreas, independentemente de ter conteúdo renderizado ou não.)

hyphenate-character: "-"; (é usada para especificar o caractere que será usado como o caractere de hifenização (ou de quebra de palavra) em um texto. Esse caractere será utilizado para indicar onde uma palavra pode ser quebrada quando necessário para ajustar o texto dentro de um contêiner.)
hyphenate-limit-chars: 10; / auto (é usada para especificar o número mínimo de caracteres que uma palavra deve ter para ser elegível para hifenização (ou quebra de palavra) em um texto.)
hyphens: (é usada para especificar como as palavras em um bloco de texto devem ser hifenizadas (ou quebradas em sílabas) quando o texto não se ajusta completamente dentro do contêiner.)
hyphens: none; (Isso desativa completamente a hifenização de palavras no texto. As palavras não serão divididas em sílabas, mesmo que isso resulte em quebras de palavras longas em lugares inapropriados dentro do layout.)
hyphens: manual; (Isso permite a hifenização manual de palavras usando o caractere de hífen (ou qualquer caractere especificado pela propriedade hyphenate-character). Isso significa que, se você desejar hifenizar uma palavra manualmente, precisará incluir o caractere de hífen em pontos específicos dentro da palavra.)
hyphens: auto; (Isso ativa a hifenização automática de palavras no texto. O navegador determina automaticamente os pontos de quebra de sílabas com base em regras linguísticas e de hifenização padrão.)

direction: ltr; (Indica que o texto deve ser exibido da esquerda para a direita. Esta é a direção padrão para a maioria dos idiomas escritos da esquerda para a direita, como inglês, espanhol, francês, etc.)
direction: rtl; ( Indica que o texto deve ser exibido da direita para a esquerda. Esta direção é usada para idiomas que são escritos da direita para a esquerda, como árabe, hebraico, persa, etc)

isolation; (é utilizada para definir como um elemento deve ser renderizado em relação aos elementos ao seu redor em um fluxo de documentos. Ela controla se um elemento deve criar um novo contexto de empilhamento (stacking context) ou se deve ser renderizado no contexto de empilhamento de seu elemento pai.)
isolation: auto; (Este é o valor padrão. Indica que o elemento será renderizado no contexto de empilhamento de seu elemento pai, a menos que um dos filhos desse elemento tenha um valor diferente para a propriedade position.)
isolation: isolate; (Indica que o elemento criará um novo contexto de empilhamento, isolando seus descendentes dos elementos ao seu redor. Isso significa que os descendentes do elemento isolado não serão afetados por z-index dos elementos fora do contexto de empilhamento.)

overflow: hidden; (é usada para controlar o comportamento do conteúdo que transborda o contêiner em que está contido. O valor hidden é usado para ocultar qualquer conteúdo que transborda o contêiner, tornando-o invisível para o usuário.)
overflow: visible; (O conteúdo transbordante é visível fora dos limites do contêiner.)
overflow: scroll; (São exibidas barras de rolagem para permitir ao usuário rolar para ver o conteúdo transbordante.)
overflow: auto; (Semelhante a scroll, mas as barras de rolagem só são exibidas quando necessário.)
overflow: clip; (qualquer conteúdo que ultrapasse as dimensões especificadas será simplesmente cortado e não será exibido além dessas dimensões)
overflow-anchor: auto; / none; (é uma propriedade CSS que permite controlar o comportamento de rolagem (scrolling) quando um novo conteúdo é adicionado a um elemento com overflow (conteúdo que ultrapassa as dimensões do elemento).)
overflow-block: (é uma propriedade que define o comportamento do overflow (conteúdo que ultrapassa as dimensões do elemento) em relação ao bloco de um elemento. Ela é usada principalmente em contextos onde o layout do conteúdo é orientado por blocos, como em fluxos de bloco de texto.)
overflow-block: visible; (Especifica que o overflow do bloco do elemento deve ser visível. O conteúdo que ultrapassa as dimensões do bloco será exibido fora do bloco, sem recorte ou ocultação.)
overflow-block: hidden; (Especifica que o overflow do bloco do elemento deve ser oculto. O conteúdo que ultrapassa as dimensões do bloco será cortado (ou clipado), sem ser exibido.)
overflow-block: clip; (Especifica que o overflow do bloco do elemento deve ser clipado.)
overflow-block: scroll; (Especifica que o overflow do bloco do elemento deve ser rolável. Barras de rolagem serão adicionadas ao bloco sempre que necessário para permitir que o usuário role o conteúdo que ultrapassa as dimensões do bloco.)
overflow-block: auto; (Especifica que o navegador deve escolher automaticamente se o overflow do bloco do elemento deve ser visível ou rolável, dependendo do conteúdo e do espaço disponível no layout.)
overflow-x: visible | hidden | scroll | auto; (Controla o overflow na direção horizontal)
overflow-y: visible | hidden | scroll | auto; (Controla o overflow na direção vertical)
overflow-wrap: (é usada para controlar o comportamento da quebra de linha dentro de um elemento. Ela especifica como o texto deve ser quebrado quando ultrapassa as dimensões do contêiner.)
overflow-wrap: normal; (Este é o valor padrão. Ele indica que o navegador pode quebrar o texto em qualquer ponto entre as palavras, mas não permitirá quebras dentro de uma palavra.)
overflow-wrap: break-word; (Este valor permite que o navegador quebre as palavras para evitar transbordamento (overflow) em qualquer caractere que exceda as dimensões do contêiner. )
overflow-wrap: anywhere; (Este valor permite que o navegador quebre as palavras em qualquer ponto, incluindo dentro das próprias letras. )

scroll-behavior: (é utilizada para definir o comportamento de rolagem (scrolling) de um elemento quando o usuário ativa a rolagem através de métodos como roda do mouse, teclado ou barras de rolagem.)
scroll-behavior: auto; (Este é o valor padrão. A rolagem é instantânea, ou seja, sem efeitos suaves. O navegador utiliza o comportamento de rolagem padrão definido pelo sistema operacional ou navegador.)
scroll-behavior: smooth; (Este valor faz com que a rolagem seja suave e animada, proporcionando uma experiência mais agradável ao usuário. Quando o usuário rola para uma posição específica no elemento, a rolagem é animada para essa posição.)
scroll-margin: 10px; / 1em 0.5em 1em 1em; (é usada para definir uma margem de espaço adicional entre um elemento e a janela de visualização quando o elemento é focado usando uma âncora (por exemplo, <a href="#section">). Isso permite que o conteúdo rolado fique posicionado com um espaço extra em relação à borda da janela de visualização quando o usuário navega para ele.)
scroll-margin-block: 10px; / 1em 0.5em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre um elemento e a borda da janela de visualização ao longo do eixo de bloco (geralmente o eixo vertical) quando o elemento é focado.)
scroll-margin-block-end: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre o final de um elemento e a borda da janela de visualização ao longo do eixo de bloco (geralmente o eixo vertical) quando o elemento é focado.)
scroll-margin-block-start: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre o início de um elemento e a borda da janela de visualização ao longo do eixo de bloco (geralmente o eixo vertical) quando o elemento é focado.)
scroll-margin-bottom: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre a borda inferior de um elemento e a borda inferior da janela de visualização quando o elemento é focado.)
scroll-margin-inline: 10px; / 1em 0.5em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre um elemento e a borda da janela de visualização ao longo do eixo inline (geralmente o eixo horizontal) quando o elemento é focado.)
scroll-margin-inline-end: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre o final de um elemento e a borda da janela de visualização ao longo do eixo inline (geralmente o eixo horizontal) quando o elemento é focado.)
scroll-margin-inline-start: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre o início de um elemento e a borda da janela de visualização ao longo do eixo inline (geralmente o eixo horizontal) quando o elemento é focado.)
scroll-margin-left: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre a borda esquerda de um elemento e a borda esquerda da janela de visualização quando o elemento é focado.)
scroll-margin-right: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre a borda direita de um elemento e a borda direita da janela de visualização quando o elemento é focado.)
scroll-margin-top: 10px; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define a margem de espaço adicional entre a borda superior de um elemento e a borda superior da janela de visualização quando o elemento é focado.)
scroll-padding: 10px; / auto; / 1em 0.5em 1em 1em; (é usada para definir o preenchimento interno de um elemento em relação à área de rolagem (scrolling area). Isso pode ser útil quando você deseja criar um espaço adicional entre o conteúdo do elemento e a borda da área de rolagem.)
scroll-padding-block: 10px; / 1em 0.5em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem ao longo do eixo de bloco (geralmente o eixo vertical). Isso é útil para criar espaços adicionais entre o conteúdo do elemento e a borda da área de rolagem vertical.)
scroll-padding-block-end: 10px; / auto; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem ao longo do eixo de bloco (geralmente o eixo vertical) na extremidade final do elemento.)
scroll-padding-block-start: 10px; / auto; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem ao longo do eixo de bloco (geralmente o eixo vertical) na extremidade inicial do elemento.)
scroll-padding-bottom: 10px; / auto; / 1em; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem na extremidade inferior do elemento.)
scroll-padding-inline: 10px; / 1em 0.5em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem ao longo do eixo inline (geralmente o eixo horizontal).)
scroll-padding-inline-end: 10px; / 1em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem ao longo do eixo inline (geralmente o eixo horizontal) na extremidade final do elemento.)
scroll-padding-inline-start: 10px; / 1em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem ao longo do eixo inline (geralmente o eixo horizontal) na extremidade inicial do elemento.)
scroll-padding-left: 10px; / 1em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem na extremidade esquerda do elemento)
scroll-padding-right: 10px; / 1em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem na extremidade direita do elemento.)
scroll-padding-top: 10px; / 1em; / auto; (é uma propriedade específica do CSS Overflow Level 4 que define o preenchimento interno de um elemento em relação à área de rolagem na extremidade superior do elemento.)
scroll-snap-align: (é uma propriedade que especifica como um elemento deve ser alinhado durante o scroll, em relação ao contêiner de rolagem, de acordo com as posições de "snap" (alinhamento) definidas no contêiner.)
scroll-snap-align: none; (O elemento não será alinhado de forma especial durante o scroll.)
scroll-snap-align: start; (O elemento será alinhado ao início do contêiner de rolagem (ou à borda do snap mais próximo, se definido).)
scroll-snap-align: center; (O elemento será alinhado ao centro do contêiner de rolagem (ou ao snap mais próximo, se definido).)
scroll-snap-align: end; (O elemento será alinhado ao final do contêiner de rolagem (ou à borda do snap mais próximo, se definido).)
scroll-snap-stop: (é uma propriedade que especifica se a rolagem deve parar em um ponto específico (snap point) durante a rolagem. Ela determina se a rolagem deve ser interrompida ou não quando um ponto de "snap" é alcançado.)
scroll-snap-stop: normal; (A rolagem não será interrompida quando um ponto de "snap" é alcançado.)
scroll-snap-stop: always; (A rolagem será interrompida quando um ponto de "snap" é alcançado.)
scroll-snap-type: (é usada para especificar como o scrolling deve ser alinhado em um contêiner de rolagem, especialmente em relação aos pontos de "snap" definidos dentro desse contêiner. Ela determina se a rolagem deve "snap" para pontos específicos durante a rolagem, e se isso deve ser feito ao longo do eixo X, Y ou ambos.)
scroll-snap-type: none; (Nenhuma rolagem suave (scroll snapping) será aplicada.)
scroll-snap-type: x; (A rolagem suave será aplicada apenas ao longo do eixo X (horizontal).)
scroll-snap-type: y; (A rolagem suave será aplicada apenas ao longo do eixo Y (vertical).)
scroll-snap-type: block; (A rolagem suave será aplicada apenas em blocos, definidos por elementos de bloco.)
scroll-snap-type: inline; (A rolagem suave será aplicada apenas em linha, definidos por elementos inline.)
scroll-snap-type: both; (A rolagem suave será aplicada em ambos os eixos, X e Y.)
scroll-snap-type: proximity; (Indica que o scrolling deve "snap" para os pontos especificados, mesmo se o usuário estiver rolando lentamente.)
scroll-snap-type: mandatory; (Indica que o scrolling deve "snap" para os pontos especificados com base na proximidade do ponto, ou seja, o ponto de "snap" mais próximo será selecionado.)

overscroll-behavior: (é usada para controlar o comportamento do scroll além dos limites de rolagem de um contêiner de rolagem. Ela permite que você especifique se o comportamento de rolagem elástica (quando você tenta rolar além dos limites de rolagem) deve ser permitido, desativado ou modificado de alguma forma.)
overscroll-behavior: auto; (Este é o valor padrão. Ele permite que o comportamento de rolagem elástica seja controlado pelo navegador ou dispositivo, dependendo das configurações padrão do sistema operacional ou do navegador.)
overscroll-behavior: contain; (Este valor indica que o comportamento de rolagem elástica deve ser modificado para ser contido dentro do elemento de rolagem. Isso significa que a rolagem elástica será limitada ao próprio contêiner de rolagem e não propagará para outros contêineres de rolagem aninhados.)
overscroll-behavior: none; (Este valor desativa completamente o comportamento de rolagem elástica. Isso significa que não haverá nenhum efeito de rolagem elástica ao tentar rolar além dos limites de rolagem do contêiner.)
overscroll-behavior-block: (permite especificar o comportamento de rolagem elástica ao longo do eixo de bloco (geralmente vertical) de um contêiner de rolagem. Ela é usada para controlar como a rolagem elástica deve ser tratada quando o usuário tenta rolar além dos limites de rolagem ao longo desse eixo.)
overscroll-behavior-block: auto; (Este é o valor padrão. Ele permite que o comportamento de rolagem elástica ao longo do eixo de bloco seja controlado pelo navegador ou dispositivo, seguindo as configurações padrão do sistema operacional ou do navegador.)
overscroll-behavior-block: contain; (Este valor indica que o comportamento de rolagem elástica ao longo do eixo de bloco deve ser modificado para ser contido dentro do elemento de rolagem ao longo desse eixo. Isso significa que a rolagem elástica ao longo do eixo de bloco será limitada ao próprio contêiner de rolagem ao longo desse eixo.)
overscroll-behavior-block: none; (Este valor desativa completamente o comportamento de rolagem elástica ao longo do eixo de bloco. Isso significa que não haverá nenhum efeito de rolagem elástica ao tentar rolar além dos limites de rolagem ao longo desse eixo.)
overscroll-behavior-inline: (permite especificar o comportamento de rolagem elástica ao longo do eixo inline (geralmente horizontal) de um contêiner de rolagem. Ela é usada para controlar como a rolagem elástica deve ser tratada quando o usuário tenta rolar além dos limites de rolagem ao longo desse eixo.)
overscroll-behavior-inline: auto; (Este é o valor padrão. Ele permite que o comportamento de rolagem elástica ao longo do eixo inline seja controlado pelo navegador ou dispositivo, seguindo as configurações padrão do sistema operacional ou do navegador.)
overscroll-behavior-inline: contain; (Este valor indica que o comportamento de rolagem elástica ao longo do eixo inline deve ser modificado para ser contido dentro do elemento de rolagem ao longo desse eixo. Isso significa que a rolagem elástica ao longo do eixo inline será limitada ao próprio contêiner de rolagem ao longo desse eixo.)
overscroll-behavior-inline: none; (Este valor desativa completamente o comportamento de rolagem elástica ao longo do eixo inline. Isso significa que não haverá nenhum efeito de rolagem elástica ao tentar rolar além dos limites de rolagem ao longo desse eixo.)
overscroll-behavior-x: (controla o comportamento da rolagem elástica ao longo do eixo X (horizontal) de um elemento com rolagem. Ela permite especificar como a rolagem elástica deve ser tratada quando o usuário tenta rolar além dos limites de rolagem ao longo desse eixo.)
overscroll-behavior-x: auto; (Este é o valor padrão. Ele permite que o comportamento de rolagem elástica ao longo do eixo X seja controlado pelo navegador ou dispositivo, seguindo as configurações padrão do sistema operacional ou do navegador.)
overscroll-behavior-x: contain; (Este valor indica que o comportamento de rolagem elástica ao longo do eixo X deve ser modificado para ser contido dentro do elemento com rolagem ao longo desse eixo. Isso significa que a rolagem elástica ao longo do eixo X será limitada ao próprio elemento com rolagem ao longo desse eixo.)
overscroll-behavior-x: none; (Este valor desativa completamente o comportamento de rolagem elástica ao longo do eixo X. Isso significa que não haverá nenhum efeito de rolagem elástica ao tentar rolar além dos limites de rolagem ao longo do eixo X.)
overscroll-behavior-y: (controla o comportamento da rolagem elástica ao longo do eixo Y (vertical) de um elemento com rolagem. Ela permite especificar como a rolagem elástica deve ser tratada quando o usuário tenta rolar além dos limites de rolagem ao longo desse eixo.)
overscroll-behavior-y: auto; (Este é o valor padrão. Ele permite que o comportamento de rolagem elástica ao longo do eixo Y seja controlado pelo navegador ou dispositivo, seguindo as configurações padrão do sistema operacional ou do navegador.)
overscroll-behavior-y: contain; (Este valor indica que o comportamento de rolagem elástica ao longo do eixo Y deve ser modificado para ser contido dentro do elemento com rolagem ao longo desse eixo. Isso significa que a rolagem elástica ao longo do eixo Y será limitada ao próprio elemento com rolagem ao longo desse eixo.)
overscroll-behavior-y: none; (Este valor desativa completamente o comportamento de rolagem elástica ao longo do eixo Y. Isso significa que não haverá nenhum efeito de rolagem elástica ao tentar rolar além dos limites de rolagem ao longo do eixo Y.)

scrollbar-color: auto | dark-light; / rebeccapurple green; (é usada para definir a cor da barra de rolagem e a cor do trilho (track) em navegadores que suportam personalização de barras de rolagem. Atualmente, esta propriedade é experimental e só é suportada no Firefox. 
auto: Indica que as cores da barra de rolagem e do trilho serão determinadas pelo navegador.
dark-light: Especifica a cor da barra de rolagem e do trilho, respectivamente. Você pode usar cores em hexadecimal, nomes de cores ou valores RGB.
scrollbar-gutter: (é usada para especificar como o espaço reservado para a barra de rolagem é tratado em relação ao conteúdo rolável. Ela controla se a barra de rolagem deve ocupar espaço no layout ou se deve ser sobreposta ao conteúdo.)
scrollbar-gutter: auto; (Indica que o navegador deve decidir se a barra de rolagem deve ocupar espaço no layout ou se deve ser sobreposta ao conteúdo. O comportamento é determinado pelo navegador.)
scrollbar-gutter: stable; (Indica que a barra de rolagem sempre ocupará espaço no layout, independentemente do estado de rolagem.)
scrollbar-gutter: stable both-edges; (Indica que a barra de rolagem sempre ocupará espaço no layout em ambas as extremidades do contêiner de rolagem, independentemente do estado de rolagem.)
scrollbar-width: (é usada para controlar a largura da barra de rolagem em navegadores que suportam a personalização da aparência da barra de rolagem. Esta propriedade está atualmente em fase experimental e é suportada apenas pelo Firefox.)
scrollbar-width: auto; (Indica que o navegador deve decidir a largura da barra de rolagem.)
scrollbar-width: thin; (Especifica que a barra de rolagem deve ter uma largura fina.)
scrollbar-width: none; (Especifica que nenhuma barra de rolagem deve ser exibida.)

hanging-punctuation: (são propriedades CSS que controlam a formatação de pontuação suspensa em um bloco de texto. A pontuação suspensa é a prática tipográfica de posicionar a pontuação fora da caixa de texto principal, o que pode melhorar a legibilidade do texto em certos contextos.)
hanging-punctuation: none; (Nenhuma formatação de pontuação suspensa é aplicada. A pontuação é posicionada dentro da caixa de texto principal.)
hanging-punctuation: first; (Apenas a primeira linha do bloco de texto terá formatação de pontuação suspensa, se aplicável.)
hanging-punctuation: last; (Apenas a última linha do bloco de texto terá formatação de pontuação suspensa, se aplicável.)
hanging-punctuation: force-end; (A formatação de pontuação suspensa é aplicada à última linha de texto, mesmo que a pontuação não seja naturalmente suspensa.)
hanging-punctuation: allow-end; (A formatação de pontuação suspensa é permitida na última linha de texto, mas não é forçada.)

padding: 0 20px 20px 20px; (espaço de preenchimento para todos os lados do elemento, seguindo a ordem: top, right, bottom, left.)
padding-top: 20px; (Define o espaço de preenchimento acima do conteúdo do elemento.)
padding-right: 20px; (Define o espaço de preenchimento à direita do conteúdo do elemento.)
padding-bottom: 20px; (Define o espaço de preenchimento abaixo do conteúdo do elemento.)
padding-left: 20px; (Define o espaço de preenchimento à esquerda do conteúdo do elemento.)
padding-block: 10px / 1em  (é uma propriedade CSS que faz parte do módulo de espaçamento lógico (Logical Properties) e é usada para definir o espaçamento interno (padding) de um elemento ao longo do eixo de bloco (geralmente vertical).)
padding-block-end: 10px / 1em  (é uma propriedade do módulo de espaçamento lógico (Logical Properties) que define o espaçamento interno (padding) do final do bloco de um elemento, ao longo do eixo de bloco (geralmente vertical).)
padding-block-start: 10px / 1em (é uma propriedade do módulo de espaçamento lógico (Logical Properties) que define o espaçamento interno (padding) do início do bloco de um elemento, ao longo do eixo de bloco (geralmente vertical).)
padding-inline: 10px / 1em (é uma propriedade CSS do módulo de espaçamento lógico (Logical Properties) que define o espaçamento interno (padding) ao longo do eixo inline de um elemento.)
padding-inline-end: 10px / 1em (é uma propriedade do módulo de espaçamento lógico (Logical Properties) que define o espaçamento interno (padding) do final do inline de um elemento.)
padding-inline-start: 10px / 1em (é uma propriedade do módulo de espaçamento lógico (Logical Properties) que define o espaçamento interno (padding) do início do inline de um elemento.)

max-width: 900px; / none; /max-content; / min-content; / fit-content; / fit-content(20em); (define a largura máxima que um elemento pode ter. Se a largura do elemento ultrapassar esse valor, ela será ajustada automaticamente para a largura máxima especificada.)
max-height: none; /max-content; / min-content; / fit-content; / fit-content(20em); / 3.5em; / 75%; / 300px;(é usada para definir a altura máxima que um elemento pode ter. Ela é comumente usada para limitar a altura de um elemento, impedindo que ele cresça além de um determinado tamanho.)
max-block-size: (é uma propriedade CSS que define a altura máxima que um elemento de bloco pode ter. Ela é usada para controlar a dimensão do bloco ao longo do eixo do bloco, que geralmente é a direção vertical.)
max-block-size: 75%; / 300px; / 25em; (define o tamanho máximo do bloco explicitamente.)
max-block-size: none; (Este valor indica que não há limite máximo para o tamanho do bloco.)
max-block-size: max-content; (Este valor faz com que o tamanho máximo do bloco seja o tamanho máximo possível do conteúdo dentro do bloco, ao longo do eixo do bloco. O bloco não crescerá além do tamanho máximo do conteúdo.)
max-block-size: min-content; (Este valor faz com que o tamanho máximo do bloco seja o tamanho mínimo possível do conteúdo dentro do bloco, ao longo do eixo do bloco. O bloco não crescerá além do tamanho mínimo do conteúdo.)
max-block-size: fit-content; (Este valor faz com que o tamanho máximo do bloco seja ajustado para caber no tamanho do conteúdo dentro do bloco, mas o bloco não crescerá além de um tamanho especificado.)
max-block-size: fit-content(20em); ( Este valor funciona da mesma forma que fit-content, mas permite especificar um tamanho máximo adicional para o bloco.)
max-inline-size: none; /max-content; / min-content; / fit-content; / fit-content(20em); / 3.5em; / 75%; / 300px; (é usada para definir o tamanho máximo que um elemento pode ter na direção inline, ou seja, na direção do texto. Isso é relevante para elementos em que o texto flui na horizontal, como parágrafos, divs, etc.) 

min-block-size: none; /max-content; / min-content; / fit-content; / fit-content(20em); / 3.5em; / 75%; / 300px; (é usada para definir a altura mínima que um elemento pode ter. Ela é comumente usada para garantir que um elemento tenha pelo menos uma certa altura, independentemente do tamanho do conteúdo dentro dele.)
min-height: 900px; / none; /max-content; / min-content; / fit-content; / fit-content(20em); (é usada para definir a altura mínima que um elemento pode ter. Ela é comumente usada para garantir que um elemento tenha pelo menos uma certa altura, independentemente do tamanho do conteúdo dentro dele.)
min-inline-size: 900px; / none; /max-content; / min-content; / fit-content; / fit-content(20em); (é usada para definir a largura mínima que um elemento pode ter na direção inline, ou seja, na direção do texto. Isso é relevante para elementos em que o texto flui na horizontal, como parágrafos, divs, etc.)
min-width: 900px; / none; /max-content; / min-content; / fit-content; / fit-content(20em); (é usada para definir a largura mínima que um elemento pode ter. Ela é comumente usada para garantir que um elemento tenha pelo menos uma certa largura, independentemente do tamanho do conteúdo dentro dele.)

border: 5px solid black; (Especificações para criar uma borda)
border-color: red; (Mudar a cor da borda)
border-bottom-color: red; (Mudar a cor da linha de baixo)
border-right-color: red; (Mudar a cor da linha da direita)
border-left-color: red; (Mudar a cor da linha da esquerda)
border-top-color: red; (Mudar a cor da linha do topo)
border-left: none thick green; (Especificações para criar uma borda ao lado esquerdo)
border-right: none thick green; (Especificações para criar uma borda ao lado direito)
border-top: none thick green; (Especificações para criar uma borda acima)
border-bottom: none thick green; (Especificações para criar uma borda abaixo)
border-style: solid; (Uma linha sólida.)
border-style: dotted; (Uma linha pontilhada.)
border-style: dashed; (Uma linha tracejada.)
border-style: double; (Duas linhas paralelas.)
border-style: groove; (Uma borda 3D esculpida.)
border-style: ridge; (Uma borda 3D em relevo.)
border-style: inset; (Uma borda 3D entalhada.)
border-style: outset; (Uma borda 3D saliente.)
border-style: none; (Sem borda.)
border-top-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (Estilo para o topo)
border-right-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (Estilo para a direita)
border-bottom-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (Estilo para a parte inferior)
border-left-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (Estilo para a esquerda)
border-block-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (é uma propriedade específica que define o estilo da borda de um bloco, de acordo com a direção de escrita do texto. Ela faz parte das propriedades de borda lógicas (CSS Logical Properties), que são usadas para lidar com layouts bidirecionais e internacionais onde a direção do texto pode ser diferente da direção do documento.)
border-width: 5px; (A largura da borda em pixels, em, rem, etc.)
border-block-width: 5px; (é uma propriedade específica que define a largura da borda de um bloco, de acordo com a direção de escrita do texto. Ela faz parte das propriedades de borda lógicas (CSS Logical Properties), que são usadas para lidar com layouts bidirecionais e internacionais onde a direção do texto pode ser diferente da direção do documento.)
border-radius: 5px; (O arredondamento das bordas.)
border-bottom-left-radius: 3px; (O arredondamento da borda esquerda)
border-bottom-right-radius: 3px; (O arredondamento da borda direita)
border-bottom-top-radius: 3px; (O arredondamento da borda do topo)
border-bottom-bottom-radius: 3px; (O arredondamento da borda de baixo)
border-top-width: medium; (Largura para o topo)
border-right-width: medium; (Largura para a direita)
border-bottom-width: medium; (Largura para a parte inferior)
border-bottom-width: medium; (Largura para a esquerda. Define a largura da borda como "média". A espessura real pode variar dependendo da implementação do navegador.)
border-bottom-width: thin; (Define a largura da borda como "fina".)
border-bottom-width: thick; (Define a largura da borda como "grossa".)
border-bottom-width: 2px; (Define a largura da borda usando um valor específico de comprimento, como px, em, rem, etc.)
border-bottom-width: inherit; (Herda a largura da borda do elemento pai.)
border-bottom-width: initial; (Define a largura da borda superior como o valor inicial.)
border-bottom-width: unset; (Retorna a largura da borda superior ao seu valor padrão.)
border-left-width: medium; (Largura para a esquerda. Define a largura da borda como "média". A espessura real pode variar dependendo da implementação do navegador.)
border-left-width: thin; (Define a largura da borda como "fina".)
border-left-width: thick; (Define a largura da borda como "grossa".)
border-left-width: 2px; (Define a largura da borda usando um valor específico de comprimento, como px, em, rem, etc.)
border-left-width: inherit; (Herda a largura da borda do elemento pai.)
border-left-width: initial; (Define a largura da borda superior como o valor inicial.)
border-left-width: unset; (Retorna a largura da borda superior ao seu valor padrão.)
border-top-width: medium; (Define a largura da borda como "média".)
border-top-width: thin; (Define a largura da borda como "fina".)
border-top-width: thick; (Define a largura da borda como "grossa".)
border-top-width: 2px; (Define a largura da borda usando um valor específico de comprimento, como px, em, rem, etc.)
border-top-width: inherit; (Herda a largura da borda do elemento pai.)
border-top-width: initial; (Define a largura da borda superior como o valor inicial.)
border-top-width: unset; (Retorna a largura da borda superior ao seu valor padrão.)
border-right-width: medium; (Largura para a esquerda. Define a largura da borda como "média". A espessura real pode variar dependendo da implementação do navegador.)
border-right-width: thin; (Define a largura da borda como "fina".)
border-right-width: thick; (Define a largura da borda como "grossa".)
border-right-width: 2px; (Define a largura da borda usando um valor específico de comprimento, como px, em, rem, etc.)
border-right-width: inherit; (Herda a largura da borda do elemento pai.)
border-right-width: initial; (Define a largura da borda superior como o valor inicial.)
border-right-width: unset; (Retorna a largura da borda superior ao seu valor padrão.)
border-block-color: yellow; (é uma propriedade que define a cor da borda em um bloco de acordo com a direção do texto.)
border-block-end: 1px; /  medium dashed blue; (é uma propriedade específica que define a largura, o estilo e a cor da borda do bloco no final de um elemento, de acordo com a direção de escrita do texto. )
border-block-end-color: yellow; (está definindo a cor da borda do bloco no final do elemento)
border-block-end-style: dashed; (está definindo o estilo da borda do bloco no final do elemento. Uma linha tracejada.)
border-block-end-style: dotted; (Uma linha pontilhada.)
border-block-end-style: groove; (Uma borda 3D esculpida.)
border-block-end-width: 5px; (Define a largura da borda no final do bloco)
border-block-end-width: thick; (Define a largura da borda no final do bloco como "thick" (grosso).)
border-block-end-width: thin; (Define a largura da borda como "fina".)
border-block-end-width: medium; (Define a largura da borda como "média".)
border-block-start: 1px; / medium dashed blue; (é uma propriedade específica que define a largura, o estilo e a cor da borda do bloco no início de um elemento, de acordo com a direção de escrita do texto. )
border-block-start-color: blue; (está definindo a cor da borda do bloco no início do elemento)
border-block-start-style: dashed; (está definindo o estilo da borda do bloco no início do elemento. Uma linha tracejada.)
border-block-start-style: dotted; (Uma linha pontilhada.)
border-block-start-style: groove; (Uma borda 3D esculpida.)
border-block-start-width: 5px; (Define a largura da borda no início do bloco)
border-block-start-width: thick; (Define a largura da borda no início do bloco como "thick" (grosso).)
border-block-start-width: thin; (Define a largura da borda como "fina".)
border-block-start-width: medium; (Define a largura da borda como "média".)
border-collapse: collapse; (é usada em tabelas HTML para definir como as bordas de células adjacentes são mescladas. Este é o valor padrão. Ele especifica que as bordas das células da tabela e as bordas das células internas (como células TD ou TH) serão combinadas em uma única borda quando possível. Isso resulta em uma tabela com bordas mais limpas e uma aparência mais coesa.)
border-collapse: separate; (Este valor especifica que as bordas das células da tabela e as bordas das células internas serão separadas, mesmo quando são adjacentes. Isso resulta em uma aparência de tabela onde as bordas das células internas são visíveis mesmo quando estão próximas umas das outras, o que pode resultar em uma aparência mais espaçada e menos coesa.)
border-end-end-radius: 10px; (é parte das propriedades de borda de contorno (border-radius) e é utilizada para definir o raio da borda do canto correspondente ao final do bloco em elementos que são afetados pela direção do texto.)
border-end-start-radius: 10px; (faz parte das propriedades de borda de contorno (border-radius) e é usada para definir o raio da borda do canto correspondente ao início do bloco em elementos que são afetados pela direção do texto.)
border-image: (usada para especificar uma imagem que será usada como uma borda para um elemento, em vez de uma borda tradicional. Ela substitui a borda normal do elemento pela imagem especificada.)
border-image: linear-gradient(red, blue) 27; (uma borda de 27 pixels de largura será aplicada ao elemento, gradiente linear que vai de vermelho a azul como imagem de borda.)
border-image: url("/images/border.png") 27 space; (uma borda de 27 pixels de largura será aplicada ao elemento, usando a imagem /images/border.png como imagem de borda. O valor space indica que o espaço entre as imagens da borda deve ser preenchido com a imagem, se necessário.)
border-image-outset: 1rem; (é usada para especificar o afastamento (outset) das imagens de borda em relação à borda do elemento. O valor define o espaço adicional a ser aplicado além da largura da borda ao redor do elemento.)
border-image-repeat: (é usada para especificar como uma imagem de borda deve se repetir ao longo da borda de um elemento. Ela determina o comportamento de repetição da imagem de borda.)
border-image-repeat: stretch; (A imagem de borda é esticada para preencher a área da borda.)
border-image-repeat: repeat; (A imagem de borda é repetida (tiled) ao longo da borda. Se a imagem não couber exatamente na borda, ela será repetida.)
border-image-repeat: round; (A imagem de borda é repetida (tiled) ao longo da borda, mas é redimensionada para caber exatamente no espaço disponível. Isso pode resultar em um número fracionário de imagens.)
border-image-repeat: space; (A imagem de borda é repetida (tiled) ao longo da borda, mas é redimensionada para caber exatamente no espaço disponível. O espaçamento entre as imagens de borda é distribuído uniformemente.)
border-image-slice: 30%; (é usada para especificar a área da imagem de borda que deve ser usada para preencher cada lado da borda de um elemento.)
border-image-source: url(image.jpg); (é usada para especificar a imagem que será usada como borda para um elemento. Ela define a fonte da imagem que será usada como borda, substituindo a borda padrão do elemento.)
border-image-source: linear-gradient(to top, red, yellow);
border-image-width: auto; 1rem; (é uma propriedade em CSS que especifica a largura da imagem utilizada para criar a borda de um elemento. )
border-inline-start: medium dashed blue; (Define a largura, estilo e cor da borda do início da direção inline do elemento.)
border-inline-end: medium dashed blue; (Define a largura, estilo e cor da borda do fim da direção inline do elemento.)
border-inline-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (é utilizada para definir o estilo da borda em uma direção "inline", que segue a direção do texto)
border-inline-color: red; (é uma propriedade CSS que define a cor da borda em uma direção "inline".)
border-inline-width: 5px; / thick; / thin; / medium; (Define a largura da borda do início da direção inline do elemento.)
border-inline-end-color: #663399; (Define cor da borda do fim da direção inline do elemento.)
border-inline-end-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (Define estilo da borda do fim da direção inline do elemento.)
border-inline-end-width: 2px; / thick; / thin; / medium; (Define a largura do final da direção inline do elemento.)
border-inline-start-color: #663399; (Define cor da borda do início da direção inline do elemento.)
border-inline-start-style: solid; dotted; dashed; double; groove; ridge; inset; outset; none; (Define estilo da borda do início da direção inline do elemento.)
border-inline-start-width: 2px; / thick; / thin; / medium; (Define a largura do início da direção inline do elemento.)
border-spacing: 2px; (é usada principalmente em tabelas para definir o espaçamento entre as células que têm bordas adjacentes. Esse espaçamento é aplicado tanto vertical quanto horizontalmente entre as bordas das células. só funciona em tabelas e elementos de exibição de tabela (como table, inline-table, table-row, table-column, table-cell, e table-caption)
border-start-end-radius: 10px; (é uma propriedade CSS que define os raios de borda para os cantos "start" e "end" de um elemento, onde "start" e "end" dependem da direção de escrita do texto)
border-start-start-radius: 10px; (define o raio da borda do canto "start-start" de um elemento, onde "start-start" depende da direção de escrita do texto )

margin: 0 auto; / -3px; / 1em; / 5% 0; / 10px 50px 20px; / 10px 50px 20px 0; (Margem, definir o espaçamento entre elementos HTML. Referente a todos os lados)
margin-bottom: 0; (Margem linha debaixo)
margin-left: 0; (Margem linha da esquerda)
margin-right: 0; (Margem linha da direita)
margin-top: 0; (Margem linha de cima)
margin: inherit; (Isso define a margem do elemento para ser herdada do seu elemento pai. Ou seja, o elemento filho terá a mesma margem que seu elemento pai.)
margin: initial; (Define a margem do elemento para o valor inicial padrão, que é geralmente 0. Isso significa que o elemento não terá margem definida, a menos que especificada em outro lugar.)
margin: revert; (Esta propriedade redefine a margem do elemento para o valor definido pelo usuário ou pelo navegador. Se nenhum valor foi definido, ele se comporta como initial.)
margin: revert-layer; (Este é um valor experimental que foi introduzido no CSS para lidar com casos de sobreposição de elementos quando as margens deveriam se comportar de forma diferente em relação às camadas de sobreposição. Até onde eu sei, este valor ainda não é amplamente suportado pelos navegadores e seu comportamento pode variar.)
margin: unset; (Define a margem do elemento para o valor padrão, que é geralmente 0. Isso também remove qualquer valor de margem que tenha sido definido anteriormente para o elemento, seja diretamente ou através de herança.)
margin-block: 10px 20px; / 1em 2em; / 5% 2%; / 10px; / auto; (controla a margem de bloco de um elemento, ou seja, a margem entre os blocos de texto dentro do elemento. Ela é usada em layouts de escrita vertical, como em scripts verticais usados em algumas línguas asiáticas.)
margin-block: inherit; / initial; / revert; / revert-layer; / unset;
margin-block-start: 0; (ontrola a margem de bloco no início do elemento)
margin-block-end: 0; (controla a margem de bloco no final do elemento)
margin-inline-end: 10px; /  1em; /  5%; / auto; (define a margem do elemento no final do eixo inline, ou seja, na direção em que o texto flui. Se o texto estiver fluindo da esquerda para a direita (como em idiomas ocidentais), o final do eixo inline será à direita do elemento. Se o texto estiver fluindo da direita para a esquerda (como em alguns idiomas asiáticos), o final do eixo inline será à esquerda do elemento.)
margin-inline-end: inherit; / initial; / revert; / revert-layer; / unset;
margin-inline-start: 10px; / 1em; /  5%; / auto (define a margem do elemento no início do eixo inline, ou seja, na direção em que o texto flui. Se o texto estiver fluindo da esquerda para a direita (como em idiomas ocidentais), o início do eixo inline será à esquerda do elemento. Se o texto estiver fluindo da direita para a esquerda (como em alguns idiomas asiáticos), o início do eixo inline será à direita do elemento.)
margin-inline-start: inherit; / initial; / revert; / revert-layer; / unset;
margin-trim: (é usada para controlar como as margens de um elemento devem ser ajustadas em relação a elementos vizinhos. Essa propriedade não é amplamente suportada em todos os navegadores até o momento da minha última atualização em janeiro de 2022)
margin-trim: none; (Isso indica que nenhuma margem será ajustada ou recortada.
margin-trim: block; (Isso indica que apenas as margens verticais (margens de bloco) do elemento devem ser ajustadas ou recortadas.)
margin-trim: block-start; (Isso indica que apenas a margem de bloco no início do elemento (geralmente a parte superior em layouts horizontais) deve ser ajustada ou recortada.)
margin-trim: block-end; (Isso indica que apenas a margem de bloco no final do elemento (geralmente a parte inferior em layouts horizontais) deve ser ajustada ou recortada.)
margin-trim: inline; (Isso indica que apenas as margens horizontais (margens inline) do elemento devem ser ajustadas ou recortadas.)
margin-trim: inline-start; (Isso indica que apenas a margem inline no início do elemento (geralmente a parte esquerda em layouts horizontais) deve ser ajustada ou recortada.)
margin-trim: inline-end; (Isso indica que apenas a margem inline no final do elemento (geralmente a parte direita em layouts horizontais) deve ser ajustada ou recortada.)
margin-trim: inherit; (Define o comportamento de margin-trim para ser herdado do elemento pai. Isso significa que o elemento filho terá o mesmo comportamento de margem-trim que seu elemento pai.)
margin-trim: initial; (Define o comportamento de margin-trim para o valor inicial padrão, que geralmente é auto. Isso significa que o comportamento de margem-trim será o padrão do navegador, a menos que seja especificado de outra forma.)
margin-trim: revert; (Esta propriedade redefine o comportamento de margin-trim para o valor definido pelo usuário ou pelo navegador. Se nenhum valor foi definido, ele se comporta como initial.)
margin-trim: revert-layer; (Este é um valor experimental introduzido no CSS para lidar com casos de sobreposição de elementos quando as margens-trim devem se comportar de forma diferente em relação às camadas de sobreposição. Até onde eu sei, este valor ainda não é amplamente suportado pelos navegadores e seu comportamento pode variar.)
margin-trim: unset; (Define o comportamento de margin-trim para o valor padrão, que geralmente é auto. Isso também remove qualquer valor de margin-trim que tenha sido definido anteriormente para o elemento, seja diretamente ou através de herança.)

image-orientation: (é usada para especificar a orientação de uma imagem em relação ao bloco de texto que a contém. Esta propriedade só tem efeito em elementos <img> e <image> SVG.)
image-orientation: none; (Esta configuração desativa qualquer ajuste automático da orientação da imagem e mantém a orientação original da imagem como foi fornecida.)
image-orientation: from-image; (Esta configuração faz com que o navegador determine automaticamente a orientação correta da imagem com base em seu conteúdo interno, como os metadados EXIF de uma imagem JPEG.)
image-rendering: (é utilizada para controlar a qualidade de renderização de imagens quando são redimensionadas, especialmente em cenários onde a imagem é exibida em tamanhos menores ou maiores do que sua resolução nativa.)
image-rendering: auto; (Esta é a configuração padrão, na qual o navegador usa seu algoritmo interno para renderizar a imagem, tentando equilibrar a qualidade visual e o desempenho.)
image-rendering: crisp-edges; (Esta configuração é usada para renderizar a imagem com bordas nítidas e bem definidas, o que pode ser útil para imagens com bordas nítidas ou gráficos vetoriais.)
image-rendering: pixelated; (Esta configuração é usada para renderizar a imagem de forma que os pixels individuais sejam claramente visíveis, criando uma aparência pixelada. Isso é comumente usado para imagens de estilo 8-bit ou pixel art, onde a aparência pixelada é desejada.)
image-resolution: 300dpi; (é usada para controlar a resolução com a qual uma imagem é exibida em um dispositivo de saída.)

mask: (é utilizada para definir uma máscara que é aplicada a um elemento. Uma máscara é uma imagem que define quais áreas de um elemento devem ser mostradas ou ocultas.)
mask: none; (Este é o valor padrão. Indica que nenhum efeito de máscara é aplicado ao elemento.)
mask: url(mask.png); (Especifica a URL de uma imagem a ser usada como máscara.)
mask: url(masks.svg#star) luminance; (aplica a máscara com base na luminância (brilho) dos pixels da imagem.)
mask: url(masks.svg#star) 40px 20px; (Especifica a URL de uma imagem SVG com um ID específico e aplica a máscara com uma posição e tamanho específicos.)
mask: url(masks.svg#star) repeat-x; (repete a máscara ao longo do eixo X.)
mask: url(masks.svg#star) stroke-box; (aplica a máscara à caixa de traçado (stroke box) do elemento.)
mask: url(masks.svg#star) exclude; (exclui as áreas da máscara do elemento.)
mask-border-mode: luminance; (Este valor indica que a máscara de borda deve ser aplicada com base na luminância (brilho) dos pixels da imagem da máscara.)
mask-border-mode: alpha; (Este valor indica que a máscara de borda deve ser aplicada com base no canal alfa (transparência) dos pixels da imagem da máscara.)
mask-border-outset: 1rem; (determina o tamanho da expansão da máscara de borda em todas as direções, em relação à borda do elemento ao qual a máscara está sendo aplicada.)
mask-border-repeat: (é utilizada para especificar o comportamento de repetição da imagem da máscara de borda definida pela propriedade )
mask-border-repeat: stretch; (Este valor indica que a imagem da máscara de borda deve ser esticada para cobrir todo o conteúdo da borda.)
mask-border-repeat: repeat; (Este valor indica que a imagem da máscara de borda deve ser repetida para preencher toda a área da borda, sem esticar ou distorcer.)
mask-border-repeat: round; (Este valor indica que a imagem da máscara de borda deve ser repetida para preencher toda a área da borda, mas será esticada ou reduzida conforme necessário para que não haja espaços em branco no final.)
mask-border-repeat: space; (Este valor indica que a imagem da máscara de borda deve ser repetida para preencher toda a área da borda, mas será esticada ou reduzida conforme necessário, e o espaço em branco será distribuído uniformemente entre as repetições.)
mask-border-slice: 30%; / 100px; / fill; (é utilizada para especificar como a imagem da máscara de borda é dividida ou fatiada ao longo da borda do elemento. Esta propriedade é usada em conjunto com a propriedade mask-border-width para definir a máscara de borda.)
mask-border-width: 1rem; / thin; / medium; / thick; (é utilizada para especificar a largura da máscara de borda definida pela propriedade mask-border. Ela determina a largura da área ao longo da borda do elemento onde a máscara será aplicada.)
mask-clip: (é utilizada para definir a área do elemento que será utilizada como referência para a aplicação da máscara. Ela determina o box model do elemento que será usado para delimitar a área visível da máscara.)
mask-clip: content-box; (A máscara é aplicada dentro da área de conteúdo do elemento, excluindo margens, bordas e preenchimento.)
mask-clip: padding-box; (A máscara é aplicada dentro da área de preenchimento do elemento, excluindo margens e bordas.)
mask-clip: border-box; (A máscara é aplicada dentro da área da borda do elemento.)
mask-clip: fill-box; (A máscara é aplicada na área preenchida do elemento, incluindo preenchimento, mas excluindo margens e bordas.)
mask-clip: stroke-box; (A máscara é aplicada na área da borda do elemento, incluindo bordas, mas excluindo margens e preenchimento.)
mask-clip: view-box; (A máscara é aplicada na área visual do elemento, incluindo margens, bordas, preenchimento e conteúdo.)
mask-clip: no-clip; (A máscara é aplicada em toda a área do elemento, incluindo margens, bordas, preenchimento e conteúdo.)
-webkit-mask-clip: border; (A máscara é aplicada na área da borda do elemento.)
-webkit-mask-clip: padding; (A máscara é aplicada dentro da área de preenchimento do elemento.)
-webkit-mask-clip: content; (A máscara é aplicada dentro da área de conteúdo do elemento.)
-webkit-mask-clip: text; (A máscara é aplicada apenas no texto do elemento.)
mask-composite: (é utilizada para especificar como as máscaras são combinadas ou compostas quando múltiplas máscaras são aplicadas a um elemento. Ela determina como as áreas de sobreposição entre as máscaras são tratadas.)
mask-composite: add; (Este valor indica que as máscaras são combinadas usando a operação de adição. Isso significa que os valores das máscaras são somados entre si.)
mask-composite: subtract; (Este valor indica que as máscaras são combinadas usando a operação de subtração. Isso significa que a segunda máscara é subtraída da primeira máscara.)
mask-composite: intersect; (Este valor indica que as máscaras são combinadas usando a operação de interseção. Isso significa que apenas as áreas onde as máscaras se sobrepõem são mantidas.)
mask-composite: exclude; (Este valor indica que as máscaras são combinadas usando a operação de exclusão. Isso significa que as áreas onde as máscaras se sobrepõem são removidas.)
mask-image: url(masks.svg#mask1); / none; / image(url(mask.png), skyblue); / linear-gradient(rgb(0 0 0 / 100%), transparent); (é utilizada para definir a imagem que será usada como máscara em um elemento.)
mask-mode: (é utilizada para especificar como a máscara de um elemento deve ser aplicada. Ela determina o modo de composição entre a máscara e o conteúdo do elemento.)
mask-mode: alpha; (Este valor indica que a máscara é aplicada utilizando o canal alfa (transparência) da máscara. Isso significa que apenas a transparência da máscara é considerada para aplicar o efeito de máscara.)
mask-mode: luminance; (Este valor indica que a máscara é aplicada utilizando a luminância (brilho) da máscara. Isso significa que a máscara é convertida para uma imagem em tons de cinza e a sua intensidade é usada para aplicar o efeito de máscara.)
mask-mode: match-source; (Este valor indica que a máscara deve ser aplicada usando o mesmo modo de composição que foi utilizado para o elemento ao qual a máscara está sendo aplicada. Isso significa que o modo de composição da máscara será o mesmo que o do elemento.)
mask-origin: (é utilizada para especificar o ponto de origem da máscara em relação ao elemento ao qual ela está sendo aplicada. Ela determina o box model do elemento que será usado como ponto de referência para a aplicação da máscara.)
mask-origin: content-box; (A máscara é aplicada a partir da borda interna da área de conteúdo do elemento, excluindo margens, bordas e preenchimento.)
mask-origin: padding-box; (A máscara é aplicada a partir da borda interna da área de preenchimento do elemento, excluindo margens e bordas.)
mask-origin: border-box; (A máscara é aplicada a partir da borda externa da área da borda do elemento.)
mask-origin: fill-box; (A máscara é aplicada a partir da borda externa da área preenchida do elemento, incluindo preenchimento, mas excluindo margens e bordas.)
mask-origin: stroke-box; (A máscara é aplicada a partir da borda externa da área da borda do elemento, incluindo bordas, mas excluindo margens e preenchimento.)
mask-origin: view-box; (A máscara é aplicada a partir da borda externa da área visual do elemento, incluindo margens, bordas, preenchimento e conteúdo.)
mask-position: (é utilizada para definir a posição inicial da máscara em relação ao elemento ao qual ela está sendo aplicada. Ela determina onde a máscara será posicionada inicialmente dentro do elemento.)
mask-position: top; (A máscara é posicionada no topo do elemento.)
mask-position: bottom; (A máscara é posicionada na parte inferior do elemento.)
mask-position: left; (A máscara é posicionada à esquerda do elemento.)
mask-position: right; (A máscara é posicionada à direita do elemento.)
mask-position: center; (A máscara é posicionada no centro do elemento.)
mask-repeat: (é usada para controlar como uma máscara é repetida ou distribuída ao longo do elemento ao qual ela está sendo aplicada. Ela especifica o comportamento de repetição da máscara.)
mask-repeat: repeat-x; (A máscara é repetida horizontalmente ao longo do eixo x (horizontal).)
mask-repeat: repeat-y; (A máscara é repetida verticalmente ao longo do eixo y (vertical).)
mask-repeat: repeat; (A máscara é repetida tanto horizontal quanto verticalmente, cobrindo o elemento completamente.)
mask-repeat: space; (A máscara é repetida tanto horizontal quanto verticalmente, mas o espaçamento é distribuído uniformemente entre as repetições.)
mask-repeat: round; (A máscara é repetida tanto horizontal quanto verticalmente, mas é esticada ou reduzida para preencher o elemento sem espaços em branco.)
mask-repeat: no-repeat; (A máscara não é repetida e é aplicada apenas uma vez ao elemento.)
mask-size: (é usada para especificar o tamanho da máscara aplicada a um elemento. Ela determina as dimensões da máscara em relação ao elemento ao qual ela está sendo aplicada.)
mask-size: cover; (a máscara é dimensionada para cobrir completamente o elemento ao qual ela está sendo aplicada, mantendo a proporção original da máscara.)
mask-size: contain; (é utilizado para ajustar o tamanho da máscara de forma que ela seja completamente contida dentro do elemento ao qual está sendo aplicada, mantendo a proporção original da máscara)
mask-size: auto; ( isso indica que o tamanho da máscara será determinado automaticamente pelo navegador, usando o tamanho natural da imagem da máscara.)
mask-size: 50%; / 3em; / 12px;
mask-type: luminance; (é utilizada para especificar o tipo de máscara que está sendo aplicada a um elemento. Ela determina se a máscara está sendo aplicada com base na luminância (brilho) ou no canal alfa (transparência) da máscara.)
mask-type: alpha; (é utilizada para especificar o tipo de máscara que está sendo aplicada a um elemento. Ela determina se a máscara está sendo aplicada com base na luminância (brilho) ou no canal alfa (transparência) da máscara.)

math-depth: (é utilizada em CSS para controlar a profundidade máxima das raízes quadradas e outras construções matemáticas aninhadas em elementos HTML. )
math-depth: auto; (Indica que a profundidade máxima é determinada automaticamente pelo navegador.)
math-depth: 4; (Um número inteiro que define a profundidade máxima permitida para construções matemáticas aninhadas.)
math-shift: (é utilizada em CSS para controlar o espaçamento vertical ao redor de expressões matemáticas em elementos HTML que utilizam a tag <math>)
math-shift: normal; (Este valor indica que o navegador deve usar o espaçamento vertical padrão ao redor de expressões matemáticas.)
math-shift: compact; (Este valor indica que o navegador deve usar um espaçamento vertical mais compacto ao redor de expressões matemáticas, resultando em menos espaço entre linhas.)

transition: <property> <duration> <timing-function> <delay>; (é usada para criar efeitos de transição suaves entre diferentes estados de um elemento. Esses estados podem ser alterados por meio de interações do usuário, como hover, focus, etc., ou por meio de mudanças de propriedades CSS.)
<property>: Especifica qual propriedade CSS será afetada pela transição.
<duration>: Define a duração da transição. Pode ser especificada em segundos (s) ou milissegundos (ms).
<timing-function>: Define como a transição progride ao longo do tempo. Isso pode ser um dos valores predefinidos como linear, ease, ease-in, ease-out, ease-in-out, ou uma função de tempo personalizada, como cubic-bezier().
<delay>: (Opcional) Define um atraso antes do início da transição. Pode ser especificado em segundos (s) ou milissegundos (ms).
transition: width 0.5s; (Transição de largura (width) com duração de 0.5 segundos )
transition: background-color 1s cubic-bezier(0.25, 0.1, 0.25, 1); (Transição de cor de fundo (background-color) com duração de 1 segundo, utilizando uma função de tempo personalizada)
transition: opacity 0.3s ease-in-out 0.2s; (Transição de opacidade (opacity) com duração de 0.3 segundos e atraso de 0.2 segundos)
transition-behavior: (é uma propriedade CSS que define como as transições devem ser tratadas em relação a mudanças intermediárias de valor durante a transição. )
transition-behavior: allow-discrete; (Este valor permite que o navegador interrompa a transição para mostrar todas as alterações intermediárias de valor. Isso pode ser útil quando há uma série de mudanças de valor intermediárias durante a transição e o autor da página deseja que todas essas mudanças sejam renderizadas e não apenas o estado final da transição.)
transition-behavior: normal; (Este é o valor padrão. Ele especifica que a transição deve se comportar normalmente, como descrito na propriedade transition-timing-function.)
transition-delay: 3s; (é utilizada para especificar um atraso antes do início de uma transição. Esse atraso determina o tempo que deve decorrer antes que a transição comece a ser aplicada após a propriedade que está sendo transicionada ter sofrido uma alteração.)
transition-duration: 6s; (é utilizada para especificar a duração de uma transição, ou seja, o tempo que leva para a transição ocorrer de um estado para outro quando uma propriedade CSS está sendo animada.)
transition-property: none; -Nenhuma aplicação / all; -todas as propriedades animáveis / width, height; - nome da propriedade CSS que se deseja animar durante a transição  (é utilizada para especificar qual propriedade CSS deve ser afetada por uma transição. Ela determina quais propriedades CSS serão animadas durante uma transição quando ocorrer uma mudança de estado.)
transition-timing-function: (é utilizada para definir como uma transição CSS deve se comportar ao longo do tempo. Ela determina a aceleração e a desaceleração da transição entre os estados inicial e final dos elementos durante uma animação de transição.)
transition-timing-function: ease; (Começa lentamente, acelera no meio e desacelera novamente no final da transição. É o valor padrão.)
transition-timing-function: ease-in; (Começa lentamente e acelera à medida que a transição progride.)
transition-timing-function: ease-out; (Começa rapidamente e desacelera à medida que a transição progride.)
transition-timing-function: ease-in-out; (Combina as características de ease-in e ease-out, começando lentamente, acelerando no meio e desacelerando novamente no final da transição.)
transition-timing-function: linear; (Mantém uma velocidade constante ao longo de toda a transição.)
transition-timing-function: step-start; (Faz a transição dar um salto instantâneo para o valor final e, em seguida, mantém esse valor até o final da transição.)
transition-timing-function: step-end; (Mantém o valor inicial até o ponto médio da transição e, em seguida, faz um salto instantâneo para o valor final.)
transition-timing-function: steps(4, jump-end); (Faz a transição avançar em n etapas, com um salto instantâneo para o valor final no final de cada etapa.)
transition-timing-function: cubic-bezier(0.1, 0.7, 1, 0.1); (Define uma curva de Bézier cúbica personalizada com pontos de controle (p1x, p1y) e (p2x, p2y), onde p1x e p1y controlam a curvatura no início da transição e p2x e p2y controlam a curvatura no final da transição.)

transform: rotate(45deg); / (3.1416rad); / (-50grad); / (1.75turn); (é usada para aplicar transformações 2D e 3D a um elemento. você está aplicando uma transformação de rotação. "deg" é equivalente a ângulo de graus)
transform: translate(100px, 50px); (Move um elemento ao longo do eixo X e/ou Y.)
transform: scale(1.5); (Aumenta ou diminui o tamanho de um elemento. )
transform: skew(30deg, 20deg); (Inclina um elemento ao longo do eixo X e/ou Y. )
transform: matrix(1, 0, 0, 1, 100, 100); (Define uma transformação 2D usando uma matriz de seis valores. )
transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 100, 100, 0, 1); (Define uma transformação 3D usando uma matriz de 16 valores.)
transform: perspective(1000px); (Define a perspectiva para uma transformação 3D. )
transform: perspective(1000px) translateZ(50px); (Define a perspectiva para uma transformação 3D com valores diferentes para o eixo Z)
transform: rotate(atan(1)); (em matemática e linguagens de programação retorna o arco tangente (ou tangente inversa) de um número x, em radianos. O arco tangente é o ângulo cuja tangente é igual a x)
transform: rotate(atan2(3, 2)); (em matemática e linguagens de programação retorna o arco tangente do quociente de seus argumentos y e x. Em outras palavras, ela calcula o ângulo em radianos entre o eixo x positivo e a linha que passa pelo ponto (0,0) e pelo ponto (x,y), com sinais de y e x determinando o quadrante do resultado.)
transform: none; (Isso define que não haverá nenhuma transformação aplicada ao elemento.)
transform: rotate3d(1, 2, 3, 10deg); (Isso rotaciona o elemento em um espaço tridimensional. Os valores 1, 2, 3 representam um vetor em torno do qual o elemento será rotacionado, e 10deg indica o ângulo de rotação.)
transform: rotateX(10deg); (Isso rotaciona o elemento em torno do eixo X por um ângulo de 10deg.)
transform: rotateY(10deg); (Isso rotaciona o elemento em torno do eixo Y por um ângulo de 10deg.)
transform: rotateZ(10deg); (Isso rotaciona o elemento em torno do eixo Z por um ângulo de 10deg.)
transform: translate3d(12px, 50%, 3em); (sso move o elemento no espaço tridimensional. 12px é o deslocamento em pixels no eixo X, 50% é o deslocamento em relação à altura do elemento no eixo Y, e 3em é o deslocamento em relação à profundidade do elemento no eixo Z.)
transform: translateX(2em); (Isso move o elemento horizontalmente no eixo X por 2em.)
transform: translateY(3in); (Isso move o elemento verticalmente no eixo Y por 3in (polegadas).)
transform: translateZ(2px); (Isso move o elemento na direção do eixo Z por 2px (pixels).)
transform: scale3d(2.5, 1.2, 0.3); (Isso escala o elemento no espaço tridimensional. Os valores 2.5, 1.2, 0.3 representam os fatores de escala nos eixos X, Y e Z, respectivamente.)
transform: scaleX(2); (Isso escala o elemento horizontalmente por um fator de 2.)
transform: scaleY(0.5); (Isso escala o elemento verticalmente por um fator de 0.5.)
transform: scaleZ(0.3); (Isso escala o elemento na direção do eixo Z por um fator de 0.3.)
transform: skewX(30deg); (Isso inclina o elemento ao longo do eixo X por um ângulo de 30deg.)
transform: skewY(1.07rad); (Isso inclina o elemento ao longo do eixo Y por um ângulo de 1.07rad (radianos).)

transform-box: (especifica o referencial para a aplicação das transformações 2D ou 3D especificadas pela propriedade transform. Essa propriedade determina como as transformações afetam o tamanho e a posição do elemento alvo.)
transform-box: content-box; (Este é o valor padrão. As transformações são aplicadas ao conteúdo do elemento, mas o tamanho do elemento não é afetado pelas transformações.)
transform-box: border-box; (As transformações são aplicadas à caixa de limite (border box) do elemento, incluindo a borda e o preenchimento (padding). Isso afeta tanto o conteúdo quanto o tamanho do elemento.)
transform-box: fill-box; (As transformações são aplicadas para preencher (fill) o espaço disponível no elemento. Isso inclui o conteúdo, a borda e o preenchimento, mas não afeta o tamanho do elemento.)
transform-box: stroke-box; (As transformações são aplicadas apenas à área de traçado (stroke) do elemento. Isso é mais relevante para elementos SVG com traçados definidos.)
transform-box: view-box; (As transformações são aplicadas ao sistema de coordenadas do elemento, levando em consideração o tamanho e a posição do elemento em relação ao sistema de coordenadas global (viewport).)

transform-origin: 10px; / 50%;/ top; / bottom; / left; / right; / center; (é usada para controlar o ponto de origem das transformações aplicadas a um elemento usando a propriedade transform. Esta propriedade define o ponto em torno do qual o elemento será transformado.)

transform-style: (é usada em conjunto com transformações 3D para especificar como os elementos filhos de um elemento com transformações 3D devem ser renderizados no espaço 3D.)
transform-style: flat; (Esse é o valor padrão. Ele indica que os elementos filhos serão renderizados em um único plano comum, ignorando as transformações 3D aplicadas ao elemento pai.)
transform-style: preserve-3d; (Esse valor indica que os elementos filhos devem preservar suas transformações 3D individuais, mesmo que estejam dentro de um elemento com transformações 3D aplicadas.)

perspective: 20px; / 5.5cm; / 23rem; / none; (é usada em conjunto com a transformação 3D para definir a perspectiva a partir da qual um elemento é visto. Ela afeta a profundidade de elementos posicionados em um espaço 3D, criando a ilusão de perspectiva tridimensional. é frequentemente usada em conjunto com as transformações 3D, como rotateX, rotateY e rotateZ, para criar efeitos tridimensionais em elementos HTML)
perspective-origin: left; / top; / right; / bottom; / center; / 50% 50%; (é usada em conjunto com a propriedade perspective para definir o ponto de origem da perspectiva em um elemento 3D. Isso afeta a posição relativa da perspectiva em relação ao elemento, alterando a aparência da transformação 3D.)
 
mix-blend-mode: (controla como os elementos de uma camada se misturam com os elementos da camada abaixo. Ela é comumente usada em contextos de gráficos e design para criar efeitos de mistura interessantes.)
mix-blend-mode: normal; (Os elementos da camada superior se sobrepõem diretamente aos elementos da camada inferior sem aplicar nenhuma mistura.)
mix-blend-mode: multiply; (Os elementos da camada superior são multiplicados pelos elementos da camada inferior.)
mix-blend-mode: screen; (Os elementos da camada superior são invertidos, multiplicados e invertidos novamente pelos elementos da camada inferior.)
mix-blend-mode: overlay; (Combina os efeitos de multiply e screen.)
mix-blend-mode: darken; (Mantém o valor da cor mais escura de cada canal de cor.)
mix-blend-mode: lighten; (Mantém o valor da cor mais clara de cada canal de cor.)
mix-blend-mode: color-dodge; (Clareia a cor da camada inferior para refletir a camada superior.)
mix-blend-mode: color-burn; (Escurece a cor da camada inferior para refletir a camada superior.)
mix-blend-mode: hard-light; (Combina os efeitos de overlay e screen.)
mix-blend-mode: soft-light; (Clareia ou escurece a camada inferior dependendo da cor da camada superior.)
mix-blend-mode: difference; (Subtrai a cor da camada inferior da cor da camada superior.)
mix-blend-mode: exclusion; (Produz efeitos semelhantes a difference, mas com menos contraste.)
mix-blend-mode: hue; (Mantém o matiz da cor da camada inferior, mas aplica a saturação e luminosidade da camada superior.)
mix-blend-mode: saturation; (Mantém a saturação da cor da camada inferior, mas aplica o matiz e a luminosidade da camada superior.)
mix-blend-mode: color; (Mantém a cor da camada inferior, mas aplica o matiz e a saturação da camada superior.)
mix-blend-mode: luminosity; (Mantém a luminosidade da cor da camada inferior, mas aplica o matiz e a saturação da camada superior.)
mix-blend-mode: plus-darker; (Semelhante a darken, mas aumenta o contraste.)
mix-blend-mode: plus-lighter; (Semelhante a lighten, mas aumenta o contraste.)
	
color-interpolation: (é utilizada em SVG (Scalable Vector Graphics) para especificar o modelo de interpolação de cores a ser usado ao processar gradientes e cores em gradientes, preenchimentos, contornos e imagens rasterizadas dentro do SVG. Ela controla como as cores são interpoladas entre diferentes valores de cor.)
color-interpolation: auto; (Especifica que a interpolação de cores deve ser escolhida automaticamente pelo navegador, dependendo do contexto.)
color-interpolation: sRGB; (Especifica que as cores devem ser interpoladas no espaço de cores sRGB (standard RGB), que é o espaço de cores padrão usado em monitores e na web.)
color-interpolation: linearRGB; (Especifica que as cores devem ser interpoladas no espaço de cores linear RGB, que é um espaço de cores linear que melhor corresponde à percepção humana de cores.)

color-scheme: (é utilizada para especificar a preferência de esquema de cores para um documento ou para partes de um documento, como componentes da interface do usuário (UI).)
color-scheme: normal; (Indica que o esquema de cores padrão deve ser utilizado. Este é o valor padrão se nenhum outro for especificado.)
color-scheme: light; (Indica que um esquema de cores claro (claro) deve ser utilizado. Isso geralmente se refere a um tema de cores com cores mais claras ou um fundo claro.)
color-scheme: dark; (Indica que um esquema de cores escuro (escuro) deve ser utilizado. Isso geralmente se refere a um tema de cores com cores mais escuras ou um fundo escuro.)
color-scheme: light dark; (Indica que os estilos de luz e escuro devem ser aplicados, permitindo que o usuário ou o sistema escolha entre os dois esquemas de cores, conforme a preferência.)
color-scheme: only light; ( Indica que apenas o esquema de cores claro deve ser utilizado, ignorando quaisquer estilos de cores escuros definidos.)

animation: 3s ease-in 1s 2 reverse both paused slidein; (é usada para aplicar animações a elementos HTML. Ela combina várias outras propriedades de animação em uma única declaração.)
animation: 3s; (A animação terá uma duração de 3 segundos.)
animation: ease-in; (A animação começará devagar e acelerará conforme avança.)
animation: 1s; (A animação começará 1 segundo após o elemento ser carregado.)
animation: 2; (A animação será repetida 2 vezes.)
animation: reverse; (A animação será reproduzida reversamente após cada repetição.)
animation: both; (O estado final da animação será mantido após a conclusão da animação e também após a reversão da animação)
animation: paused;  (A animação começará em estado pausado.)
animation: slidein; (Este é o nome da animação definida em @keyframes. Será aplicada ao elemento com uma duração de 3 segundos, começando devagar e acelerando, com um atraso de 1 segundo, repetida duas vezes, com direção reversa após cada repetição, mantendo o estado final após a conclusão e a reversão, e começando em estado pausado.)
animation: 3s ease-in 1s infinite reverse both running slidein; (infinite - A animação será repetida infinitamente. running - A animação começará a ser reproduzida imediatamente (ou continuará sendo reproduzida se já estiver em andamento).)
animation: 3s linear 1s infinite alternate slidein; (linear - A animação será reproduzida em uma taxa constante, sem aceleração ou desaceleração. alternate - A animação será reproduzida em direções alternadas; ou seja, após cada iteração, a animação será reproduzida reversamente.)
animation: 3s ease-out 5s slideout; (ease-out - A animação começará rapidamente e desacelerará conforme avança. slideout será aplicada ao elemento com uma duração de 3 segundos, começando rapidamente e desacelerando à medida que avança, com um atraso de 5 segundos antes de começar)
animation-composition: replace; (Este é o valor padrão. Quando uma nova animação é aplicada ao elemento, ela substitui completamente qualquer animação anteriormente aplicada.)
animation-composition: add; (As novas animações são adicionadas à fila de animações existente no elemento, sem substituir ou interromper as animações em andamento. Isso significa que várias animações podem estar ocorrendo simultaneamente.)
animation-composition: accumulate; ( As novas animações são adicionadas à fila de animações existente e todas as animações na fila são aplicadas ao elemento ao mesmo tempo. Isso resulta em uma combinação de efeitos de todas as animações na fila.)
animation-delay: 3s; /  -1500ms; (é utilizada para definir um atraso antes do início de uma animação. Ela especifica o tempo que deve decorrer antes que a animação comece a ser aplicada ao elemento alvo.)
animation-direction: normal; (é utilizada para definir a direção na qual uma animação é reproduzida. A animação é reproduzida do início ao fim, e então reinicia para o início.)
animation-direction: reverse; (A animação é reproduzida do fim ao início, e então reinicia para o fim.)
animation-direction: alternate; (A animação é reproduzida do início ao fim, e então reversa e é reproduzida do fim ao início, alternando entre as direções a cada iteração.)
animation-direction: alternate-reverse; (A animação é reproduzida do fim ao início, e então reversa e é reproduzida do início ao fim, alternando entre as direções a cada iteração.)
animation-duration: 6s; /  auto; / 120ms; (é utilizada para definir a duração de uma animação. Ela especifica quanto tempo uma animação deve levar para ser reproduzida de forma completa, indo desde o início até o fim.)
animation-fill-mode: none; (define como um elemento deve ser estilizado antes e depois da execução de uma animação. Esta é a configuração padrão. Significa que o elemento não será afetado por estilos de animação fora do período de execução da animação.)
animation-fill-mode: forwards; (O elemento manterá o último estado da animação após a sua conclusão. Em outras palavras, os estilos finais da animação serão aplicados ao elemento e permanecerão após a animação terminar.)
animation-fill-mode: backwards; (O elemento adotará os estilos iniciais da animação antes de iniciar a execução da animação. Isso significa que os estilos iniciais da animação serão aplicados ao elemento antes do início da animação e permanecerão até o início da animação.)
animation-fill-mode: both; (Combina os comportamentos de forwards e backwards. Isso significa que os estilos iniciais da animação serão aplicados ao elemento antes do início da animação, e os estilos finais serão mantidos após a conclusão da animação.)
animation-iteration-count: infinite; / 3; (é utilizada para definir o número de vezes que uma animação deve ser repetida. la pode receber valores numéricos inteiros ou a palavra-chave infinite, que significa que a animação será repetida infinitamente.)
animation-name: none; (é usada para especificar o nome da animação que será aplicada a um elemento.Esta configuração indica que nenhum nome de animação será aplicado ao elemento, o que efetivamente desativa qualquer animação associada a esse elemento.) 
animation-name: bounce; (Pode ser colocado qualquer nome e dizer as definições da animação e no @Keyframes colocar o mesmo nome)
animation-play-state: running; (é utilizada para controlar o estado de reprodução de uma animação. Indica que a animação está em execução.)
animation-play-state: paused; (Indica que a animação está pausada.)
animation-timing-function: (é usada para especificar a função de temporização que define como a animação progride ao longo do tempo. Ela determina a aceleração e a desaceleração da animação durante seu ciclo de vida.)
animation-timing-function: ease; (Começa devagar, acelera no meio e desacelera no final. É o valor padrão se não for especificado.)
animation-timing-function: ease-in; (Começa devagar e acelera até o final.)
animation-timing-function: ease-out; (Começa rápido e desacelera até o final.)
animation-timing-function: ease-in-out; (Começa devagar, acelera no meio e desacelera no final, como ease.)
animation-timing-function: linear; (Mantém uma progressão constante da animação.)
animation-timing-function: step-start; (A animação avança instantaneamente para o próximo estado no início de cada intervalo de tempo.)
animation-timing-function: step-end; (A animação avança instantaneamente para o próximo estado no final de cada intervalo de tempo.)
animation-timing-function: cubic-bezier(0.1, 0.7, 1, 0.1); (Define uma função de temporização personalizada usando os pontos de controle de uma curva de Bézier cúbica)
animation-timing-function: steps(4, end); ( Define uma função de temporização que divide a duração da animação em um número específico de intervalos de tempo, avançando instantaneamente para o próximo estado no final de cada intervalo)

filter: blur(10px); (é utilizada para aplicar efeitos visuais. Aplica um efeito de desfoque ao elemento. Você pode especificar o raio do desfoque em pixels.)
filter: brightness(150%); (Ajusta o brilho do elemento. Um valor de 0% torna o elemento completamente preto, 100% mantém o brilho original e valores maiores que 100% aumentam o brilho. )
filter: contrast(200%); (Ajusta o contraste do elemento. Um valor de 0% produzirá uma imagem completamente cinza, 100% mantém o contraste original e valores maiores que 100% aumentam o contraste.)
filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.5)); (Adiciona uma sombra ao elemento. Você pode especificar a cor, a posição horizontal, a posição vertical, o desfoque e a propagação da sombra.)
filter: grayscale(50%); (Converte o elemento para uma imagem em escala de cinza. Um valor de 0% mantém a cor original, 100% converte o elemento para uma imagem em escala de cinza completa. )
filter: hue-rotate(90deg); (Gira a matiz do elemento. Um ângulo de 0deg mantém a matiz original, valores maiores que 0deg rotacionam a matiz no sentido horário e valores negativos rotacionam no sentido anti-horário. )
filter: opacity(50%); (Ajusta a opacidade do elemento. Um valor de 0% torna o elemento completamente transparente, 100% mantém a opacidade original.)
filter: saturate(200%); (justa a saturação do elemento. Um valor de 0% produzirá uma imagem em escala de cinza, 100% mantém a saturação original e valores maiores que 100% aumentam a saturação.)
filter: sepia(30%); (Aplica um tom sépia ao elemento. Um valor de 0% mantém a cor original, 100% aplica um tom sépia completo. )
filter: invert(75%); (significa que as cores do elemento serão invertidas em 75%. Isso resultará em uma aparência onde as cores serão alteradas para o seu complemento, com uma intensidade de 75%. Por exemplo, um vermelho intenso se tornaria um ciano intenso, e um azul intenso se tornaria um amarelo intenso.)

backdrop-filter: (é usada para aplicar efeitos de filtro ao plano de fundo de um elemento, ou seja, ao "papel de parede" atrás do elemento, incluindo elementos absolutamente posicionados ou fixos. Isso pode ser útil para criar efeitos visuais como desfoque, alteração de cor e outros efeitos.)
backdrop-filter: none; (Remove qualquer efeito de filtro aplicado ao plano de fundo do elemento. Isso restaura o plano de fundo para sua aparência padrão, sem filtros aplicados.)
backdrop-filter: invert(70%); (Aplica um efeito de inversão de cores ao plano de fundo do elemento, onde 70% das cores são invertidas e 30% permanecem inalteradas. Isso resulta em uma aparência onde a maioria das cores é invertida.)
backdrop-filter: url(commonfilters.svg#filter); (Aplica um efeito de filtro personalizado ao plano de fundo do elemento, especificado por um arquivo SVG externo chamado commonfilters.svg e uma ID de filtro chamada filter. Isso permite aplicar filtros mais complexos e personalizados ao plano de fundo do elemento, usando o arquivo SVG como definição de filtro.)
backdrop-filter: blur(10px); (é utilizada para aplicar efeitos visuais. Aplica um efeito de desfoque ao elemento. Você pode especificar o raio do desfoque em pixels.)
backdrop-filter: brightness(150%); (Ajusta o brilho do elemento. Um valor de 0% torna o elemento completamente preto, 100% mantém o brilho original e valores maiores que 100% aumentam o brilho. )
backdrop-filter: contrast(200%); (Ajusta o contraste do elemento. Um valor de 0% produzirá uma imagem completamente cinza, 100% mantém o contraste original e valores maiores que 100% aumentam o contraste.)
backdrop-filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.5)); (Adiciona uma sombra ao elemento. Você pode especificar a cor, a posição horizontal, a posição vertical, o desfoque e a propagação da sombra.)
backdrop-filter: grayscale(50%); (Converte o elemento para uma imagem em escala de cinza. Um valor de 0% mantém a cor original, 100% converte o elemento para uma imagem em escala de cinza completa. )
backdrop-filter: hue-rotate(90deg); (Gira a matiz do elemento. Um ângulo de 0deg mantém a matiz original, valores maiores que 0deg rotacionam a matiz no sentido horário e valores negativos rotacionam no sentido anti-horário. )
backdrop-filter: opacity(50%); (Ajusta a opacidade do elemento. Um valor de 0% torna o elemento completamente transparente, 100% mantém a opacidade original.)
backdrop-filter: saturate(200%); (justa a saturação do elemento. Um valor de 0% produzirá uma imagem em escala de cinza, 100% mantém a saturação original e valores maiores que 100% aumentam a saturação.)
backdrop-filter: sepia(30%); (Aplica um tom sépia ao elemento. Um valor de 0% mantém a cor original, 100% aplica um tom sépia completo. )

paint-order: (é utilizada para determinar a ordem de renderização dos componentes de pintura (fill, stroke e markers) de um elemento SVG ou de um elemento HTML que utilize uma pintura especial.)
paint-order: normal; (Este é o valor padrão. Define a ordem de renderização padrão, que é fill primeiro, seguido por stroke e, por último, markers.)
paint-order: stroke; (Especifica que o componente de pintura stroke (contorno) deve ser renderizado antes do componente fill (preenchimento).)
paint-order: markers; (Especifica que os marcadores (se existirem) devem ser renderizados após o componente fill (preenchimento) e antes do componente stroke (contorno).)
paint-order:  fill; (Especifica que o componente de pintura fill (preenchimento) deve ser renderizado antes do componente stroke (contorno).)

shape-outside: (é usada para definir a forma que o conteúdo de um elemento deve tomar ao redor de uma forma geométrica ou uma imagem. Ela permite que o conteúdo de um elemento flua ao redor de uma forma definida, criando layouts mais interessantes e dinâmicos.)
shape-outside: none; (Nenhum valor é definido e o conteúdo não é moldado em torno de nenhuma forma.)
shape-outside: margin-box; (O conteúdo é moldado em torno da caixa de margem do elemento.)
shape-outside: content-box; (O conteúdo é moldado em torno da caixa de conteúdo do elemento.)
shape-outside: border-box; (O conteúdo é moldado em torno da caixa de borda do elemento.)
shape-outside: padding-box; (O conteúdo é moldado em torno da caixa de preenchimento do elemento.)
shape-outside: circle(); (Define a forma da área como um círculo com base nas coordenadas especificadas.)
shape-outside: ellipse(); (Define a forma da área como uma elipse com base nas coordenadas especificadas.)
shape-outside: inset(10px 10px 10px 10px); (Define a forma da área como um retângulo interno com base nas coordenadas especificadas.)
shape-outside: polygon(10px 10px, 20px 20px, 30px 30px); (Define a forma da área como um polígono com base nas coordenadas especificadas.)
shape-outside: path("M100,0 A100,100 0 1,1 100,200 A100,100 0 1,1 100,0"); (Define a forma da área como um caminho SVG com base nas coordenadas especificadas.)
shape-outside: url(image.png); (Define a forma da área como uma imagem com base na URL especificada.)
shape-outside: linear-gradient(45deg, #fff 150px, red 150px); (Define a forma da área como um gradiente linear com base nas coordenadas especificadas.)
shape-image-threshold: 0.7; (é usada em conjunto com a propriedade shape-outside para especificar a opacidade mínima para os pixels de uma imagem que serão considerados pela forma do elemento ao redor do qual o conteúdo é disposto. Essa propriedade define o limite de transparência para a forma que está sendo criada a partir da imagem.)
shape-margin: 10px; (é usada em conjunto com a propriedade shape-outside para definir a margem exterior de uma forma ao redor de um elemento, especificando a distância entre a forma e o conteúdo circundante. Essa propriedade permite controlar o espaçamento entre a forma e o conteúdo ao redor dela.)

backface-visibility: (é usada para controlar a visibilidade da face traseira de um elemento que está sendo girado ou transformado em 3D.)
backface-visibility: visible; (Isso faz com que a face traseira do elemento seja visível quando o elemento é girado ou transformado em 3D. Esta é a configuração padrão.)
backface-visibility: hidden; (Isso faz com que a face traseira do elemento seja ocultada quando o elemento é girado ou transformado em 3D. Isso significa que a face traseira não será exibida, mesmo que o elemento esteja girado de modo que a face traseira seja visível.)

all: (são usadas para redefinir ou herdar todas as propriedades de estilo (ou propriedades específicas) para seus valores iniciais, valores herdados, valores indefinidos, valores revertidos ou valores revertidos em relação à camada atual.)
all: initial; (Isso redefine todas as propriedades de estilo para seus valores iniciais. Qualquer estilo aplicado anteriormente é descartado e os estilos padrão do navegador são aplicados.)
all: inherit; (sso faz com que todas as propriedades de estilo herdem os valores de seus pais. Cada propriedade de estilo terá o mesmo valor que o elemento pai.)
all: unset; (Isso redefine todas as propriedades de estilo para seus valores iniciais se elas foram alteradas pelo usuário ou pelo autor da página. Caso contrário, as propriedades de estilo são redefinidas para seus valores padrão.)
all: revert; (Isso redefiniria todas as propriedades de estilo para os valores que teriam se o elemento não tivesse sido alterado de alguma forma pelo usuário ou pelo autor da página. Se o elemento foi alterado, ele se comporta como unset.)
all: revert-layer; (Isso é semelhante ao revert, mas se aplica somente às propriedades de estilo que foram definidas na mesma camada onde a regra é aplicada.)

initial-letter: 1.5; / normal; (é usada para controlar a aparência da primeira letra ou letras iniciais em um bloco de texto.)
initial-letter-align: (é usada para controlar o alinhamento vertical da primeira letra ou letras iniciais em um bloco de texto, em relação à linha base do texto ao qual pertencem.)
initial-letter-align: auto; (Este é o valor padrão. Ele permite que o navegador escolha automaticamente o melhor alinhamento vertical para a primeira letra ou letras iniciais com base em regras de layout internas.)
initial-letter-align: alphabetic; (Este valor alinha a parte inferior da primeira letra ou letras iniciais com a linha base do texto ao qual pertencem.)
initial-letter-align: hanging; (Este valor alinha a parte superior da primeira letra ou letras iniciais com a linha base do texto, resultando em um efeito de "suspensão".)
initial-letter-align: ideographic; (Este valor é usado para idiomas que usam escrita ideográfica, como chinês ou japonês. Ele alinha a primeira letra ou letras iniciais com o centro da linha base do texto.)

will-change: opacity, transform; ( é usada em CSS para informar ao navegador que um elemento sofrerá alterações em determinadas propriedades, permitindo que o navegador faça otimizações de desempenho em antecipação a essas alterações.)
will-change: auto; (Deixa a decisão para o navegador sobre quais propriedades otimizar.)
will-change: scroll-position; (Informa ao navegador que a posição de rolagem será alterada.)
will-change: contents; (Informa ao navegador que o conteúdo do elemento mudará, como texto ou imagens.)
will-change: opacity; (Informa ao navegador que a opacidade do elemento será alterada.)
will-change: transform; (Informa ao navegador que transformações, como rotação, escala ou translação, serão aplicadas ao elemento.)
will-change: color; (Informa ao navegador que a cor do texto ou do fundo do elemento será alterada.)
will-change: all; (Informa ao navegador que todas as propriedades do elemento serão alteradas.)
will-change: initial; (Define o valor inicial da propriedade will-change.)
will-change: unset; (Retorna a propriedade will-change ao seu valor inicial, se definido pelo usuário, caso contrário, ao valor inherit.)

list-style-type: upper-roman; (é utilizada para especificar o tipo de marcador de lista a ser exibido em elementos <li> de uma lista não ordenada ou ordenada. O valor upper-roman indica que os marcadores de lista serão exibidos como algarismos romanos em maiúsculas.)
list-style-type: disc; (O marcador é exibido como um círculo preenchido.)
list-style-type: circle; (O marcador é exibido como um círculo vazio.)
list-style-type: square; (O marcador é exibido como um quadrado preenchido.)
list-style-type: decimal; (O marcador é exibido como um número decimal (1, 2, 3, ...).)
list-style-type: decimal-leading-zero; (O marcador é exibido como um número decimal com zero à esquerda (01, 02, 03, ...).)
list-style-type: lower-roman; (O marcador é exibido como algarismos romanos em minúsculas (i, ii, iii, ...).)
list-style-type: lower-alpha; (O marcador é exibido como letras do alfabeto em minúsculas (a, b, c, ...).)
list-style-type: upper-alpha; (O marcador é exibido como letras do alfabeto em maiúsculas (A, B, C, ...).)
list-style-type: none; (Nenhum marcador é exibido.)
list-style-position: inside; (é utilizada para definir a posição dos marcadores de lista em elementos <li> de uma lista não ordenada ou ordenada. O valor inside indica que os marcadores devem ser colocados dentro da área de conteúdo do elemento <li>, ou seja, eles aparecem antes do texto dentro do elemento.)
list-style-position: outside; (Os marcadores de lista são colocados fora da área de conteúdo do elemento <li>, antes da borda do elemento. Isso significa que o texto do elemento <li> não é ajustado para acomodar os marcadores de lista.)
list-style-image: url(star.svg); (é utilizada para especificar uma imagem como marcador de lista em elementos <li> de uma lista não ordenada ou ordenada. O valor desse tipo de propriedade é uma URL que aponta para a imagem desejada.)
list-style: square url(example.png) inside; (square: Define o tipo de marcador de lista como um quadrado preenchido. url(example.png): Define uma imagem example.png como o marcador de lista. inside: Define a posição dos marcadores de lista como dentro da área de conteúdo do elemento <li>.)

appearance: (é utilizada para controlar a aparência visual padrão de elementos de formulário. Ela permite modificar o estilo nativo dos elementos do formulário para uma aparência personalizada, que pode variar dependendo do navegador.)
appearance: none; (Remove a aparência padrão do elemento de formulário, deixando-o sem estilo. Isso é útil quando você deseja estilizar completamente o elemento usando CSS personalizado.)
appearance: auto; (Retorna à aparência padrão do elemento de formulário, que pode variar dependendo do navegador e do sistema operacional.)
appearance: menulist-button; (Aplica a aparência de um botão de lista suspensa a um elemento de formulário. Isso é comumente usado em elementos <select> para garantir uma aparência consistente em diferentes navegadores e sistemas operacionais.)
appearance: textfield; (Aplica a aparência de uma caixa de texto a um elemento de formulário. Isso é comumente usado em elementos <input> do tipo text para garantir uma aparência consistente em diferentes navegadores e sistemas operacionais.)
appearance: inherit; (O elemento de formulário herda o valor de appearance de seu elemento pai. Se não houver um valor definido no elemento pai, ele usará a aparência padrão do navegador.)
appearance: initial; (O elemento de formulário recebe a aparência inicial padrão do navegador.)
appearance: revert; ( O elemento de formulário reverterá para a aparência padrão do navegador, ignorando qualquer estilo personalizado.)
appearance: revert-layer; (Semelhante ao revert, mas também afeta os elementos filhos aninhados, revertendo-os para a aparência padrão do navegador.)
appearance: unset; (O elemento de formulário terá a aparência determinada pela propriedade appearance do elemento pai, se definido, caso contrário, usará a aparência padrão do navegador.)
appearance: button; (O elemento de formulário é exibido como um botão.)
appearance: checkbox; (O elemento de formulário é exibido como uma caixa de seleção (checkbox).)

writing-mode: vertical-rl; (você está definindo o modo de escrita do texto no elemento como vertical da direita para a esquerda)
writing-mode: vertical-lr; (indica que o texto é empilhado verticalmente de cima para baixo e escrito da esquerda para a direita.)
writing-mode: horizontal-tb; (você está definindo o modo de escrita do texto no elemento como horizontal da esquerda para a direita, o que é comum em muitos idiomas)

user-select: (é usada para controlar a seleção de texto em elementos HTML. Ela especifica se o texto dentro de um elemento pode ser selecionado pelo usuário e como ele pode ser selecionado.)
user-select: none; (Impede que o texto seja selecionado pelo usuário. O texto dentro do elemento não pode ser selecionado com o cursor do mouse ou com gestos de seleção em dispositivos sensíveis ao toque.)
user-select: auto; (Permite a seleção de texto pelo usuário. Este é o valor padrão dos elementos de página da web.)
user-select: text; (Permite a seleção de texto pelo usuário apenas dentro do conteúdo do elemento. Isso impede a seleção de texto em partes do elemento, como margens ou preenchimentos.)
user-select: contain; (Permite a seleção de texto pelo usuário apenas no conteúdo do elemento e em seus descendentes diretos. Isso impede a seleção de texto em elementos aninhados dentro do elemento.)
user-select: all; (Permite a seleção de texto pelo usuário em todo o elemento, incluindo seus descendentes diretos.)

box-decoration-break: (é usada para controlar como as propriedades de decoração (como background, border, border-radius, padding e margin) são aplicadas quando um elemento é dividido em várias linhas ou colunas.)
box-decoration-break: slice; (você está instruindo o navegador a dividir as propriedades de decoração na linha de quebra de linha ou coluna. Isso significa que, se um elemento for dividido em várias linhas ou colunas, as propriedades de decoração serão aplicadas como se cada linha ou coluna fosse uma entidade separada.)
box-decoration-break: clone; (as propriedades de decoração serão clonadas na linha de quebra, garantindo que as propriedades de decoração sejam aplicadas consistentemente em ambas as partes da linha de quebra.)
box-shadow: red 60px -16px; / none; (é usada para adicionar uma ou mais sombras a um elemento)
box-sizing: (são usadas para determinar como o tamanho total de um elemento é calculado, incluindo suas bordas e preenchimentos.)
box-sizing: border-box; (Com esta configuração, o tamanho total do elemento é calculado incluindo o conteúdo, o preenchimento (padding) e a borda (border), mas excluindo margens. Isso significa que o tamanho que você especifica para o elemento (por exemplo, usando width e height) será aplicado ao elemento inteiro, incluindo suas bordas e preenchimentos, e as margens serão adicionadas a essa largura total.)
box-sizing: content-box; (Com esta configuração (que é o valor padrão), o tamanho total do elemento é calculado incluindo apenas o conteúdo e excluindo o preenchimento, a borda e as margens. Isso significa que o tamanho que você especifica para o elemento (por exemplo, usando width e height) será aplicado apenas ao conteúdo do elemento, e os preenchimentos, bordas e margens serão adicionados a essa largura total.)

break-after: ( são usadas para controlar a quebra de páginas, colunas ou regiões em layouts que envolvem esses conceitos, como em ambientes de impressão ou em layouts de várias colunas)
break-after: avoid-page; (Indica que a quebra de página deve ser evitada após o elemento.)
break-after: page; (Força uma quebra de página após o elemento.)
break-after: left; (Forçam uma quebra de página, iniciando a próxima página à esquerda ou à direita, respectivamente.)
break-after: right; (Forçam uma quebra de página, iniciando a próxima página à esquerda ou à direita, respectivamente.)
break-after: recto; (Utilizado em ambientes de impressão para forçar uma quebra de página começando na próxima página ímpar (recto) ou par (verso).)
break-after: verso; (Utilizado em ambientes de impressão para forçar uma quebra de página começando na próxima página ímpar (recto) ou par (verso).)
break-after: avoid-column; (Indica que a quebra de coluna deve ser evitada após o elemento.)
break-after: column; (Força uma quebra de coluna após o elemento.)
break-after: avoid-region; ( Indica que a quebra de região deve ser evitada após o elemento.)
break-after: region; (Força uma quebra de região após o elemento.)
break-before: (Essas propriedades são úteis para controlar onde ocorrem as quebras em layout de documentos, especialmente em ambientes de impressão ou em layouts de várias colunas em uma página web. Elas oferecem controle preciso sobre como o conteúdo é distribuído em diferentes partes do layout.)
break-before: auto; (Permite que o navegador decida automaticamente onde ocorrerá a quebra.)
break-before: avoid; (Indica que a quebra deve ser evitada antes do elemento.)
break-before: avoid-page; ( Indica que a quebra de página deve ser evitada antes do elemento.)
break-before: page; (Força uma quebra de página antes do elemento.)
break-before: left; (Força uma quebra de página, começando a próxima página à esquerda.)
break-before: right; (Força uma quebra de página, começando a próxima página à direita.)
break-before: recto; (Utilizado em ambientes de impressão para forçar uma quebra de página começando na página ímpar (recto).)
break-before: verso; (Utilizado em ambientes de impressão para forçar uma quebra de página começando na página par (verso).)
break-before: avoid-column; (Indica que a quebra de coluna deve ser evitada antes do elemento.)
break-before: column; (Força uma quebra de coluna antes do elemento.)
break-before: avoid-region; (Indica que a quebra de região deve ser evitada antes do elemento.)
break-before: region; (Força uma quebra de região antes do elemento.)
break-inside: (é usada para controlar como um elemento deve ser dividido entre as páginas, colunas ou regiões em um layout que envolva esses conceitos. Ela determina se um elemento pode ser quebrado dentro de uma página, coluna ou região, ou se deve ser mantido intacto em uma única página, coluna ou região.)
break-inside: auto; (Permite ao navegador decidir se o elemento pode ser dividido ou não. É o valor padrão.)
break-inside: avoid; (Indica que o elemento não deve ser dividido entre as páginas, colunas ou regiões.)
break-inside: avoid-page; (Indica que o elemento não deve ser dividido entre as páginas.)
break-inside: avoid-column; (Indica que o elemento não deve ser dividido entre as colunas.)
break-inside: avoid-region; (Indica que o elemento não deve ser dividido entre as regiões.)
break-inside: initial; (Define o valor padrão da propriedade.)
break-inside: inherit; (Herda o valor da propriedade do elemento pai.)

page-break-inside: (essa propriedade é usada para controlar a quebra de página dentro de um elemento. Ela especifica se uma página deve ser quebrada dentro do elemento, evitando assim que o conteúdo seja dividido em várias páginas.)
page-break-inside: avoid; (Evita que a página seja quebrada dentro deste elemento)
page-break-inside: auto; (permite que o navegador decida automaticamente se uma página deve ser quebrada dentro do elemento. )
page-break-after: (é usada para controlar o comportamento de quebra de página após um elemento durante a impressão. Ela especifica se uma quebra de página deve ser inserida após o elemento durante a impressão.)
page-break-after: auto; (Este é o valor padrão. Indica que o navegador pode decidir automaticamente se deve inserir uma quebra de página após o elemento com base em vários fatores, como o tamanho do elemento e as configurações de impressão.)
page-break-after: always; (Especifica que uma quebra de página deve ser inserida sempre após o elemento durante a impressão, garantindo que o conteúdo após o elemento seja movido para a próxima página.)
page-break-after: avoid; (Indica que o navegador deve tentar evitar uma quebra de página após o elemento, se possível. O navegador pode ajustar a quebra de página para manter o elemento e seu conteúdo juntos em uma página.)
page-break-after: left; (Especifica que uma quebra de página deve ser inserida após o elemento, garantindo que o próximo conteúdo seja exibido na próxima página à esquerda. Esse valor é especialmente relevante em layouts de impressão com páginas duplas.)
page-break-after: right; (especifica que uma quebra de página deve ser inserida após o elemento, garantindo que o próximo conteúdo seja exibido na próxima página à direita em layouts de impressão com páginas duplas.)
page-break-after: recto; (Este valor é um sinônimo para page-break-after: right;, sendo usado em contextos de impressão onde há diferenciação entre páginas pares e ímpares.)
page-break-after: verso; (Este valor é um sinônimo para page-break-after: left;, sendo usado em contextos de impressão onde há diferenciação entre páginas pares e ímpares.)
page-break-before: (é usada para controlar o comportamento de quebra de página antes de um elemento durante a impressão. Ela especifica se uma quebra de página deve ser inserida antes do elemento durante a impressão.)
page-break-before: auto; (Este é o valor padrão. Indica que o navegador pode decidir automaticamente se deve inserir uma quebra de página antes do elemento com base em vários fatores, como o tamanho do elemento e as configurações de impressão.)
page-break-before: always; (Especifica que uma quebra de página deve ser inserida sempre antes do elemento durante a impressão, garantindo que o conteúdo do elemento seja movido para a próxima página.)
page-break-before: avoid; (Indica que o navegador deve tentar evitar uma quebra de página antes do elemento, se possível. O navegador pode ajustar a quebra de página para manter o elemento e seu conteúdo juntos em uma página.)
page-break-before: left; (Especifica que uma quebra de página deve ser inserida antes do elemento, garantindo que o próximo conteúdo seja exibido na próxima página à esquerda. Esse valor é especialmente relevante em layouts de impressão com páginas duplas.)
page-break-before: right; ( especifica que uma quebra de página deve ser inserida antes do elemento, garantindo que o próximo conteúdo seja exibido na próxima página à direita em layouts de impressão com páginas duplas.)
page-break-before: recto; (Este valor é um sinônimo para page-break-before: right;, sendo usado em contextos de impressão onde há diferenciação entre páginas pares e ímpares.)
page-break-before: verso; (Este valor é um sinônimo para page-break-before: left;, sendo usado em contextos de impressão onde há diferenciação entre páginas pares e ímpares.)

print-color-adjust: (é uma propriedade CSS que define a maneira como as cores são ajustadas ao serem impressas. Esta propriedade é especialmente útil quando você quer garantir uma correspondência mais precisa entre as cores exibidas na tela e as cores impressas.)
print-color-adjust: economy; (Este valor indica que o navegador pode ajustar as cores de impressão para economizar tinta ou toner, o que pode resultar em uma correspondência de cores menos precisa entre a tela e a impressão.)
print-color-adjust: exact; (Este valor indica que o navegador deve tentar manter uma correspondência mais exata entre as cores exibidas na tela e as cores impressas, mesmo que isso possa resultar em um uso maior de tinta ou toner.)

caption-side: (é utilizada para controlar o posicionamento da legenda (caption) em uma tabela HTML. A legenda normalmente fornece uma descrição ou título para a tabela e pode ser posicionada acima ou abaixo da tabela.)
caption-side: top; (Posiciona a legenda acima da tabela.)
caption-side: bottom; (Posiciona a legenda abaixo da tabela.)
caption-side: block-start; (Coloca a legenda no início do bloco, que pode ser acima ou abaixo da tabela, dependendo da direção de leitura do texto (LTR ou RTL).)
caption-side: block-end; (Coloca a legenda no final do bloco, que pode ser acima ou abaixo da tabela, dependendo da direção de leitura do texto (LTR ou RTL).)
caption-side: inline-start; (Coloca a legenda no início do fluxo inline, que pode ser à esquerda ou à direita da tabela, dependendo da direção de leitura do texto (LTR ou RTL).)
caption-side: inline-end; (Coloca a legenda no final do fluxo inline, que pode ser à esquerda ou à direita da tabela, dependendo da direção de leitura do texto (LTR ou RTL).)

object-fit: (é usada para especificar como o conteúdo de um elemento substituído (como uma <img>, <video> ou <object>) deve ser dimensionado e posicionado dentro do contêiner desse elemento)
object-fit: contain; (O conteúdo é dimensionado para caber dentro do contêiner enquanto mantém a proporção original. Isso significa que o conteúdo pode não preencher completamente o contêiner e pode haver espaço vazio ao redor do conteúdo.)
object-fit: cover; (O conteúdo é dimensionado para cobrir todo o contêiner, mantendo a proporção original. Isso significa que o conteúdo pode estender além das bordas do contêiner e partes do conteúdo podem ser cortadas para que ele preencha completamente o contêiner.)
object-fit: fill; (O conteúdo é dimensionado para preencher completamente o contêiner, ignorando a proporção original. Isso pode distorcer o conteúdo se a proporção do contêiner for diferente da proporção do conteúdo.)
object-fit: none; (O conteúdo não é dimensionado automaticamente e mantém sua proporção original. Ele é exibido no tamanho original, podendo estender além das bordas do contêiner ou ficar menor do que o contêiner.)
object-fit: scale-down; (O conteúdo é dimensionado para caber dentro do contêiner, mas é dimensionado para baixo se necessário para que ele não exceda as dimensões originais do conteúdo.)
object-position: top; / bottom; / left; / right; / center; / 25%; (é usada para especificar a posição do conteúdo de um elemento substituído (como uma <img>, <video> ou <object>) dentro do contêiner desse elemento. Ela define onde o conteúdo deve ser posicionado em relação ao contêiner.)

clip-path: (é utilizada para definir uma máscara de recorte (clipping mask) para um elemento. Essa máscara determina quais partes do elemento são mostradas e quais são ocultadas.)
clip-path: none; (Este é o valor padrão, e indica que nenhum recorte é aplicado ao elemento, ou seja, o elemento não é mascarado.)
clip-path: url(resources.svg#c1); (Define a máscara de recorte usando um elemento SVG externo. resources.svg é o arquivo SVG que contém a definição da máscara de recorte, e #c1 é o ID da máscara de recorte dentro do arquivo SVG.)
clip-path: margin-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: border-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: padding-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: content-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: fill-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: stroke-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: view-box; (Esses valores definem a máscara de recorte baseada em caixas CSS, como a caixa de margem, caixa de borda, caixa de preenchimento, caixa de conteúdo, caixa de preenchimento de preenchimento, caixa de preenchimento de traçado e caixa de visualização.)
clip-path: inset(100px 50px); ( Essas funções de forma definem a máscara de recorte como uma forma geométrica, como um retângulo inserido, um círculo, uma elipse ou um polígono.)
clip-path: circle(50px at 0 100px); ( Essas funções de forma definem a máscara de recorte como uma forma geométrica, como um retângulo inserido, um círculo, uma elipse ou um polígono.)
clip-path: ellipse(50px 60px at 0 10% 20%); ( Essas funções de forma definem a máscara de recorte como uma forma geométrica, como um retângulo inserido, um círculo, uma elipse ou um polígono.)
clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); ( Essas funções de forma definem a máscara de recorte como uma forma geométrica, como um retângulo inserido, um círculo, uma elipse ou um polígono.)
clip-path: path("M0.5,1 C0.5,1,0,0.7,0,0.3 A0.25,0.25,1,1,1,0.5,0.3 A0.25,0.25,1,1,1,1,0.3 C1,0.7,0.5,1,0.5,1 Z"); (Define a máscara de recorte usando um caminho SVG definido diretamente em CSS.)
clip-path: rect(5px 5px 160px 145px round 20%); (Define a máscara de recorte como um retângulo com cantos arredondados.)
clip-path: xywh(0 5px 100% 75% round 15% 0); (Define a máscara de recorte como um retângulo com largura (width), altura (height) e posição (x e y), com a opção de cantos arredondados.)

empty-cells: (é utilizada para especificar como as células de uma tabela devem ser tratadas quando estão vazias (sem conteúdo). Ela aceita dois valores principais:)
empty-cells: show; (Isso indica que as células vazias devem ser exibidas. Se uma célula estiver vazia, ela será exibida normalmente, sem ser afetada por estilos como border ou background-color.)
empty-cells: hide; (Isso indica que as células vazias não devem ser exibidas. Se uma célula estiver vazia, ela não será exibida visualmente, mas qualquer estilo aplicado a ela (como border ou background-color) ainda será aplicado.)

offset: (Essas propriedades CSS são parte do módulo "Motion Path" da especificação CSS e são usadas para controlar o posicionamento e o movimento de elementos ao longo de um caminho. )
offset-position: normal / auto; / top; / bottom; / left; / right; / center; / 25% / 1cm /  8em / 20px (Define como o elemento é posicionado em relação ao caminho)
offset-distance: 0 / 25% / 1cm /  8em / 20px (Define a distância ao longo do caminho que o elemento deve ser deslocado)
offset-anchor: auto; / top; / bottom; / left; / right; / center; / 25% / 1cm /  8em / 20px (Especifica o ponto de ancoragem do elemento ao longo do caminho)
offset-rotate: auto; / 45deg; / reverse; / 0.5turn; (Define a rotação do elemento ao longo do caminho)
offset-path: none ( Especifica o caminho que o elemento deve seguir)
offset-path: content-box; (O caminho é definido pelo contorno exterior do conteúdo do elemento.)
offset-path: padding-box; (O caminho é definido pelo contorno exterior da área de preenchimento do elemento.)
offset-path: border-box; (O caminho é definido pelo contorno exterior da borda do elemento.)
offset-path: fill-box; (O caminho é definido pelo contorno exterior da área de preenchimento e traçado do elemento.)
offset-path: stroke-box; (O caminho é definido pelo contorno exterior do traçado do elemento.)
offset-path: view-box; (O caminho é definido pelo tamanho da visualização do elemento.)
offset-path: ray(45deg); (Define um caminho em forma de raio com um ângulo de 45 graus a partir do ponto de origem do elemento.)
offset-path: url(#myCircle); (Define o caminho como um caminho SVG com um identificador chamado myCircle)
offset-path: circle(50% at 25% 25%); (Define o caminho como um círculo com um centro localizado a 25% da largura e 25% da altura do elemento, e um raio igual a 50% do tamanho do elemento.)
offset-path: ellipse(50% 50% at 25% 25%); (Define o caminho como uma elipse com um centro localizado a 25% da largura e 25% da altura do elemento, e eixos x e y iguais a 50% do tamanho do elemento.)
offset-path: inset(50% 50% 50% 50%); (Define o caminho como um retângulo interno com as coordenadas especificadas para o ponto superior esquerdo, superior direito, inferior direito e inferior esquerdo.)
offset-path: polygon(30% 0%, 70% 0%, 100% 50%, 30% 100%, 0% 70%, 0% 30%); (Define o caminho como um polígono com os pontos especificados.)
offset-path: path("M 0,200 Q 200,200 260,80 Q 290,20 400,0 Q 300,100 400,200"); (Define o caminho como um caminho SVG definido diretamente na propriedade.)
offset-path: rect(5px 5px 160px 145px round 20%); (Define o caminho como um retângulo com as coordenadas especificadas para o ponto superior esquerdo, superior direito, inferior direito e inferior esquerdo, e os cantos arredondados com um raio de 20%.)
offset-path: xywh(0 5px 100% 75% round 15% 0); (Define o caminho como um retângulo com as coordenadas especificadas para o ponto superior esquerdo, altura e largura, e os cantos arredondados com um raio de 15%.)

unicode-bidi: (é usada para controlar a direção do fluxo de texto e a direção da direita para a esquerda (RTL) em elementos HTML que contêm texto em scripts bidirecionais, como o árabe ou o hebraico, que são lidos da direita para a esquerda.)
unicode-bidi: normal; (Este é o valor padrão. O texto é tratado como direcionalmente independente, seguindo a direção do texto dentro do contexto do documento pai.)
unicode-bidi: embed; (O texto é tratado como direcionalmente independente, mas pode ser incorporado em um contexto bidirecional, como uma caixa embutida.)
unicode-bidi: isolate; (O texto é tratado como uma sequência isolada que possui sua própria direção e nível de incorporação.)
unicode-bidi: bidi-override; (A direção do texto e a direção de incorporação são definidas explicitamente por meio de marcadores direcionais, como o marcador de direção de texto RTL (Right-To-Left))
unicode-bidi: isolate-override; (Combina as funcionalidades do isolate e do bidi-override.)
unicode-bidi: plaintext; (O texto é tratado como direcionalmente independente e todos os caracteres são tratados como se estivessem em um contexto LTR (Left-To-Right).)

visibility: (é utilizada para controlar a visibilidade de um elemento na página. Ela determina se o elemento é exibido ou não no layout do documento.)
visibility: visible; (O elemento é exibido normalmente no layout do documento. Este é o valor padrão.)
visibility: hidden; (O elemento não é exibido no layout do documento, mas ainda ocupa espaço no layout. Ou seja, o elemento é renderizado, mas não é visível para o usuário. O espaço ocupado pelo elemento é preservado.)
visibility: collapse; (Este valor é utilizado especificamente para elementos de tabelas HTML. Quando aplicado a células de tabela (<td> ou <th>), ele remove a célula do layout da tabela, bem como qualquer espaço que ela ocuparia. )

zoom: (é uma propriedade específica do Internet Explorer (IE) que permite ajustar a escala de um elemento ou da página como um todo. No entanto, ela não é uma propriedade padrão do CSS e não é amplamente suportada pelos navegadores modernos.)
zoom: normal; (Este valor não tem efeito e é apenas usado para redefinir a propriedade zoom para o seu valor padrão.)
zoom: reset; (Este valor não tem efeito e é apenas usado para redefinir a propriedade zoom para o seu valor padrão.)
zoom: 50%; (Define o zoom do elemento para 50% do tamanho original. Isso faz com que o elemento seja exibido em metade do tamanho normal.)

display: block; (O elemento é exibido como um bloco, ocupando toda a largura disponível e começando em uma nova linha.)
display: inline; (O elemento é exibido como um elemento inline, permitindo que outros elementos fiquem ao lado dele na mesma linha.)
display: inline-block; (O elemento é exibido como um elemento inline, mas permite definir largura e altura, além de margens e preenchimentos.)
display: none; (O elemento é renderizado invisível e não ocupará espaço na página.)
display: table; (O elemento é exibido como uma tabela HTML.)
display: table-cell; (O elemento é exibido como uma célula de tabela HTML.)
display: table-row; (O elemento é exibido como uma linha de tabela HTML.)
display: list-item; (O elemento é exibido como um item de lista, como <li>.)
display: contents; ( é usada para fazer com que um elemento filho seja tratado como se não estivesse presente, permitindo que os elementos filhos diretos do elemento com essa propriedade adotem o mesmo comportamento de layout do elemento pai.)
display: flow-root; (ele cria um novo BFC para esse elemento. O BFC é uma região na qual um conjunto de regras de formatação se aplica de maneira específica. Elementos dentro de um BFC não afetam elementos fora dele no que diz respeito a colisões de layout, evitando assim alguns problemas comuns de flutuação.)

display: flex; (O elemento é exibido como um contêiner flexível, permitindo que seus itens filhos sejam flexíveis dentro dele.)
display: inline-flex; (combina os comportamentos de display: inline; e display: flex;. Ele torna o elemento um flex container, mas também faz com que ele se comporte como um elemento de linha em relação ao layout, permitindo que outros elementos fiquem ao lado dele na mesma linha.)
flex-direction: column; (é usada em contêineres flexíveis para definir a direção principal dos eixos flexíveis. Em outras palavras, ela determina se os itens flexíveis dentro do contêiner devem ser dispostos em uma linha (no eixo horizontal) ou em uma coluna (no eixo vertical).)
flex-direction: row; (Os itens são dispostos na mesma direção do bloco de escrita, ou seja, da esquerda para a direita na maioria dos casos. O eixo principal é horizontal.)
flex-direction: row-reverse; (Os itens são dispostos na direção oposta ao bloco de escrita, ou seja, da direita para a esquerda na maioria dos casos. O eixo principal é horizontal.)
flex-direction: column-reverse; (Os itens são dispostos na direção oposta ao bloco de escrita, ou seja, de baixo para cima na maioria dos casos. O eixo principal é vertical.)
flex-wrap: wrap; (é usada em contêineres flexíveis para especificar se os itens flexíveis devem ser dispostos em uma ou várias linhas, se necessário, dentro do contêiner. Ela determina se os itens flexíveis podem ser "enrolados" para a próxima linha ou se devem ser ajustados para caber em uma única linha.)
flex-flow: rowrap; (combina as propriedades flex-direction e flex-wrap em uma única declaração. Ela permite definir a direção dos itens flexíveis e se eles devem ser dispostos em uma ou várias linhas dentro do contêiner flexível.)
flex-flow: row nowwrap; (Coloca o conteúdo em linha e não permite a quebra de linha)
flex-flow: column nowwrap; (Coloca o conteúdo em coluna e não permite a quebra de linha)
flex: 200px; (é uma propriedade abreviada que combina as propriedades flex-grow, flex-shrink e flex-basis em uma única declaração. É uma maneira conveniente de definir o comportamento de um item flexível dentro de um contêiner flexível.)
flex-grow: 1; (O item pode crescer para preencher o espaço disponível)
flex-shrink: 1; (O item pode encolher para se ajustar ao espaço disponível)
flex-basis: 200px; / auto (O tamanho base do item é de 200 pixels)
justify-content; flex-start; (Os itens são alinhados no início do contêiner flexível. Este é o comportamento padrão.)
justify-content; flex-end; (Os itens são alinhados no final do contêiner flexível.)
justify-content: center; (Os itens são centralizados ao longo do eixo principal do contêiner flexível.)
justify-content: space-between; (Os itens são distribuídos uniformemente ao longo do eixo principal, com o primeiro item alinhado no início do contêiner e o último item alinhado no final do contêiner.)
justify-content: space-around; (Os itens são distribuídos uniformemente ao longo do eixo principal com um espaço igual em ambos os lados de cada item. O espaço à esquerda e à direita do contêiner é a metade do espaço entre os itens.)
justify-content: space-evenly; (Os itens são distribuídos uniformemente ao longo do eixo principal com um espaço igual ao redor de cada item, incluindo o espaço à esquerda e à direita do contêiner.)
align-items: stretch; (Os itens são esticados para preencher todo o contêiner flexível ao longo do eixo transversal. Este é o comportamento padrão.
align-items: flex-start; (Os itens são alinhados no início do contêiner flexível ao longo do eixo transversal.)
align-items: flex-end; (Os itens são alinhados no final do contêiner flexível ao longo do eixo transversal.)
align-items: center; (Os itens são centralizados ao longo do eixo transversal do contêiner flexível.)
align-items: baseline; (Os itens são alinhados com base na linha de base de seu conteúdo. Isso pode ser útil quando os itens têm alturas diferentes, como texto com diferentes tamanhos de fonte.)
align-content: (é usada em layouts de grade e flexbox para alinhar o conteúdo do container ao longo do eixo de bloco (verticalmente em layouts de grade e horizontalmente em layouts de flexbox) quando o espaço disponível é maior do que o tamanho total do conteúdo.)
align-content: center; (Alinha o conteúdo no centro do container.)
align-content: start; (Alinha o conteúdo no início do container.)
align-content: end; (Alinha o conteúdo no final do container.)
align-content: flex-start; (Alinha o conteúdo no início do eixo principal do container.)
align-content: flex-end; (Alinha o conteúdo no final do eixo principal do container.)
align-content: normal; (Restaura o comportamento padrão da propriedade.)
align-content: baseline; (Alinha o conteúdo à linha base do primeiro item de linha no container.)
align-content: first baseline; (Alinha o conteúdo à linha base do primeiro item de linha no container.)
align-content: last baseline; (Alinha o conteúdo à linha base do último item de linha no container.)
align-content: space-between;  (Distribui uniformemente o espaço entre os itens, mas não antes do primeiro item ou depois do último item.)
align-content: space-around; (Distribui uniformemente o espaço ao redor dos itens, incluindo espaço antes do primeiro item e depois do último item.)
align-content: space-evenly; (Distribui uniformemente o espaço entre e ao redor dos itens, incluindo espaço antes do primeiro item e depois do último item.)
align-content: stretch; (Estica o conteúdo para preencher o container.)
align-content: safe center; (Alinha o conteúdo no centro do container, respeitando as margens seguras (espaço entre a área visível e a borda do dispositivo).)
align-content: unsafe center; (Alinha o conteúdo no centro do container, sem respeitar as margens seguras.)
align-content: inherit; (Herda o valor do pai.)
align-content: initial; (Define o valor inicial.)
align-content: revert; (Reverte para o valor padrão.)
align-content: revert-layer; (Reverte para o valor padrão em relação à camada atual.)
align-content: unset; (Redefine para o valor inicial.)
align-self: auto; (é usada para substituir o alinhamento definido pelo align-items para um item flexível específico dentro de um contêiner flexível. Ela permite controlar o alinhamento de um item individualmente em relação aos outros itens dentro do contêiner. O valor padrão. O item usa o alinhamento definido pelo align-items do contêiner pai.)
align-self: stretch; (O item é esticado para preencher todo o espaço disponível ao longo do eixo transversal.)
align-self: flex-start; (O item é alinhado no início do contêiner ao longo do eixo transversal.)
align-self: flex-end; (O item é alinhado no final do contêiner ao longo do eixo transversal.)
align-self: center; (O item é centralizado ao longo do eixo transversal do contêiner.)
align-self: baseline; (O item é alinhado com base na linha de base de seu conteúdo.)
order: 1; (é usada em itens flexíveis dentro de um contêiner flexível para controlar a ordem em que eles são exibidos visualmente, independentemente de sua ordem no código HTML.)

display: grid; (Define o elemento pai como um container de grid, o que significa que os elementos filhos serão posicionados em uma grade.)
display: inline-grid; (combina os comportamentos de display: inline; e display: grid;. Ele torna o elemento um grid container, mas também faz com que ele se comporte como um elemento de linha em relação ao layout, permitindo que outros elementos fiquem ao lado dele na mesma linha.)
display: subgrid; (Para grids dentro de grids)
grid: 200px / auto-flow; (200px: Isso define o tamanho da grade principal (grid container) para 200 pixels de largura. auto-flow: Isso define o comportamento de fluxo automático para os itens dentro da grade. Isso significa que os itens dentro da grade serão automaticamente colocados na grade com base na disponibilidade de espaço e na ordem de inclusão dos elementos.)
gap: 10px;(Define um espaçamento de 10 pixels entre as células da grade, tanto horizontal quanto verticalmente)
column-gap: 20px; (é usada em layouts de múltiplas colunas para especificar o espaçamento entre as colunas.)
row-gap: 20px; (Define 20px de distância entre as linhas)
grid-template: 100px 1fr / 50px 1fr; (é uma propriedade abreviada que combina as propriedades grid-template-rows e grid-template-columns em uma única declaração.)
grid-template-columns: 1fr 1fr 1fr; (Define três colunas na grade, cada uma com a mesma largura)
grid-template-rows: 100px 100px; / 20% 40% 40%; / 1fr 2fr 3fr; / repeat(3, 100px 1fr); / auto auto auto; / minmax(100px, 1fr); / subgrid;(Define quantidade de linhas na grade)
grid-template-areas: "a b"; ( é usada para definir o layout de grade atribuindo nomes de áreas a células específicas na grade. )
grid-area: auto; (é usada em um contexto de layout de grade (CSS Grid Layout) para especificar em qual área da grade um item de grade (grid item) deve ser posicionado.)
grid-column: 2 / 4; (em CSS Grid são usadas para definir a posição dos itens dentro de um grid. Elas especificam em qual linha e coluna o item começa e termina dentro do grid. Este item começa na segunda coluna e termina na quarta coluna do grid.)
grid-row: 1; (em CSS Grid são usadas para definir a posição dos itens dentro de um grid. Elas especificam em qual linha e coluna o item começa e termina dentro do grid. Este item está localizado na primeira linha do grid.)
grid-row-gap: 20px; (Espaçamento entre as linhas do grid)
grid-row-end: 2; / auto; (é usada para especificar até qual linha um item de grade deve se estender. Ela define o final da área de linha que o item de grade deve ocupar na grade.)
grid-row-start: 2; / auto; (é usada para especificar em qual linha um item de grade deve começar a ser posicionado. Ela define o início da área de linha que o item de grade deve ocupar na grade.)
grid-column-gap: 20px; (Espaçamento entre as colunas do grid)
grid-column-start: 2; / auto; (é usada para especificar em qual coluna um item de grade deve começar a ser posicionado. Ela define o início da área de coluna que o item de grade deve ocupar na grade.)
grid-column-end: 2; /  auto; ( é usada para especificar até qual coluna um item de grade deve se estender. Ela define o final da área de coluna que o item de grade deve ocupar na grade.)
grid-auto-columns: min-content; (definir a largura das colunas automáticas dentro de uma grade. A configuração min-content para grid-auto-columns define a largura das colunas automáticas com base no tamanho mínimo necessário para acomodar o conteúdo mais amplo dentro de cada coluna. Isso significa que as colunas automáticas terão a largura do conteúdo mais amplo encontrado dentro delas.)
grid-auto-columns: max-content; (está instruindo a grade a fazer com que as colunas automáticas tenham a largura máxima possível com base no conteúdo dentro delas. Isso significa que as colunas automáticas terão a largura do conteúdo mais largo encontrado dentro de cada uma delas.)ss
grid-auto-columns: auto; (as colunas automáticas terão uma largura que se ajusta ao tamanho do conteúdo que está dentro delas, sem especificar um tamanho específico. Isso pode resultar em colunas de larguras variáveis, dependendo do conteúdo dentro delas.)
grid-auto-columns: fit-content(400px); (é usada para definir a largura de uma coluna de acordo com o tamanho do conteúdo dentro dela, mas limitando essa largura máxima para o valor especificado.)
grid-auto-columns: 100px; /  20cm; / 50vmax; / 10%; /  0.5fr; / minmax(100px, auto);
grid-auto-rows: 100px; (é usada em layouts de grid para definir a altura padrão das linhas automáticas que são geradas automaticamente para preencher o espaço entre as linhas explícitas definidas no grid.)
grid-auto-rows: minmax(100px, auto); (Isso define que a altura mínima de cada linha automática é de 100 pixels e a altura máxima é automática, o que significa que as linhas podem se expandir dinamicamente para se ajustar ao conteúdo dentro delas.)
grid-auto-rows: min-content;
grid-auto-rows: max-content;
grid-auto-rows: auto;
grid-auto-flow: row; (é usada para especificar como os itens são automaticamente colocados dentro da grade quando não há espaço suficiente nas linhas ou colunas definidas explicitamente. row;: Os itens são automaticamente colocados em novas linhas à medida que necessário, preenchendo cada linha antes de passar para a próxima.)
grid-auto-flow: column; (Os itens são automaticamente colocados em novas colunas à medida que necessário, preenchendo cada coluna antes de passar para a próxima.)
grid-auto-flow: dense; (Os itens são automaticamente colocados em células vazias, mesmo que isso quebre a ordem original. Isso significa que a grade tentará preencher os espaços vazios da melhor maneira possível.)
grid-auto-flow: row dense; ( Os itens são colocados em novas linhas à medida que necessário, e a propriedade dense faz com que os itens sejam compactados para preencher espaços vazios, mesmo que isso quebre a ordem original.)
grid-auto-flow: column dense; (Os itens são colocados em novas colunas à medida que necessário, e a propriedade dense faz com que os itens sejam compactados para preencher espaços vazios, mesmo que isso quebre a ordem original.)
justify-content; flex-start; (Os itens são alinhados no início do contêiner flexível. Este é o comportamento padrão.)
justify-content; flex-end; (Os itens são alinhados no final do contêiner flexível.)
justify-content: center; (Os itens são centralizados ao longo do eixo principal do contêiner flexível.)
justify-content: space-between; (Os itens são distribuídos uniformemente ao longo do eixo principal, com o primeiro item alinhado no início do contêiner e o último item alinhado no final do contêiner.)
justify-content: space-around; (Os itens são distribuídos uniformemente ao longo do eixo principal com um espaço igual em ambos os lados de cada item. O espaço à esquerda e à direita do contêiner é a metade do espaço entre os itens.)
justify-content: space-evenly; (Os itens são distribuídos uniformemente ao longo do eixo principal com um espaço igual ao redor de cada item, incluindo o espaço à esquerda e à direita do contêiner.)
justify-items: (é usada para alinhar os itens dentro de um contêiner flexível ou de grade ao longo do eixo principal. Ela define como os itens flexíveis ou de grade devem ser alinhados dentro de cada célula ou track.)
justify-items: center; ( Os itens são alinhados ao centro da célula ou track.)
justify-items: start; (Os itens são alinhados ao início da célula ou track.)
justify-items: end; (Os itens são alinhados ao final da célula ou track.)
justify-items: flex-start; (Os itens são alinhados ao início da célula ou track.)
justify-items: flex-end; (Os itens são alinhados ao final da célula ou track.)
justify-items: self-start; (Os itens são alinhados ao início da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-items: self-end; (Os itens são alinhados ao final da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-items: left; (Os itens são alinhados à esquerda da célula ou track.)
justify-items: right; (Os itens são alinhados à direita da célula ou track.)
justify-items: baseline; (Os itens são alinhados na linha de base.)
justify-items: first baseline; (Os itens são alinhados na primeira linha de base do texto.)
justify-items: last baseline; (Os itens são alinhados na última linha de base do texto.)
justify-items: safe center; (Os itens são alinhados ao centro da célula ou track, garantindo que não haja sobreposição com os bordos da célula ou track.)
justify-items: unsafe center; (Os itens são alinhados ao centro da célula ou track, podendo ocorrer sobreposição com os bordos da célula ou track.)
justify-items: legacy right; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-items: legacy left; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-items: legacy center; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-self: (é utilizada em elementos filhos de um contêiner flexível ou de grade para definir como um único item é alinhado ao longo do eixo principal dentro de sua própria célula ou track.)
justify-self: center; ( Os itens são alinhados ao centro da célula ou track.)
justify-self: start; (Os itens são alinhados ao início da célula ou track.)
justify-self: end; (Os itens são alinhados ao final da célula ou track.)
justify-self: stretch; (Estica o item)
justify-self: flex-start; (Os itens são alinhados ao início da célula ou track.)
justify-self: flex-end; (Os itens são alinhados ao final da célula ou track.)
justify-self: self-start; (Os itens são alinhados ao início da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-self: self-end; (Os itens são alinhados ao final da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-self: left; (Os itens são alinhados à esquerda da célula ou track.)
justify-self: right; (Os itens são alinhados à direita da célula ou track.)
justify-self: baseline; (Os itens são alinhados na linha de base.)
justify-self: first baseline; (Os itens são alinhados na primeira linha de base do texto.)
justify-self: last baseline; (Os itens são alinhados na última linha de base do texto.)
justify-self: safe center; (Os itens são alinhados ao centro da célula ou track, garantindo que não haja sobreposição com os bordos da célula ou track.)
justify-self: unsafe center; (Os itens são alinhados ao centro da célula ou track, podendo ocorrer sobreposição com os bordos da célula ou track.)
justify-self: legacy right; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-self: legacy left; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-self: legacy center; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
align-content: (é usada em layouts de grade e flexbox para alinhar o conteúdo do container ao longo do eixo de bloco (verticalmente em layouts de grade e horizontalmente em layouts de flexbox) quando o espaço disponível é maior do que o tamanho total do conteúdo.)
align-content: center; (Alinha o conteúdo no centro do container.)
align-content: start; (Alinha o conteúdo no início do container.)
align-content: end; (Alinha o conteúdo no final do container.)
align-content: flex-start; (Alinha o conteúdo no início do eixo principal do container.)
align-content: flex-end; (Alinha o conteúdo no final do eixo principal do container.)
align-content: normal; (Restaura o comportamento padrão da propriedade.)
align-content: baseline; (Alinha o conteúdo à linha base do primeiro item de linha no container.)
align-content: first baseline; (Alinha o conteúdo à linha base do primeiro item de linha no container.)
align-content: last baseline; (Alinha o conteúdo à linha base do último item de linha no container.)
align-content: space-between;  (Distribui uniformemente o espaço entre os itens, mas não antes do primeiro item ou depois do último item.)
align-content: space-around; (Distribui uniformemente o espaço ao redor dos itens, incluindo espaço antes do primeiro item e depois do último item.)
align-content: space-evenly; (Distribui uniformemente o espaço entre e ao redor dos itens, incluindo espaço antes do primeiro item e depois do último item.)
align-content: stretch; (Estica o conteúdo para preencher o container.)
align-content: safe center; (Alinha o conteúdo no centro do container, respeitando as margens seguras (espaço entre a área visível e a borda do dispositivo).)
align-content: unsafe center; (Alinha o conteúdo no centro do container, sem respeitar as margens seguras.)
align-content: inherit; (Herda o valor do pai.)
align-content: initial; (Define o valor inicial.)
align-content: revert; (Reverte para o valor padrão.)
align-content: revert-layer; (Reverte para o valor padrão em relação à camada atual.)
align-content: unset; (Redefine para o valor inicial.)
align-items: stretch; (Os itens são esticados para preencher todo o contêiner flexível ao longo do eixo transversal. Este é o comportamento padrão.
align-items: flex-start; (Os itens são alinhados no início do contêiner flexível ao longo do eixo transversal.)
align-items: flex-end; (Os itens são alinhados no final do contêiner flexível ao longo do eixo transversal.)
align-items: center; (Os itens são centralizados ao longo do eixo transversal do contêiner flexível.)
align-items: baseline; (Os itens são alinhados com base na linha de base de seu conteúdo. Isso pode ser útil quando os itens têm alturas diferentes, como texto com diferentes tamanhos de fonte.)
align-self: auto; (é usada para substituir o alinhamento definido pelo align-items para um item flexível específico dentro de um contêiner flexível. Ela permite controlar o alinhamento de um item individualmente em relação aos outros itens dentro do contêiner. O valor padrão. O item usa o alinhamento definido pelo align-items do contêiner pai.)
align-self: stretch; (O item é esticado para preencher todo o espaço disponível ao longo do eixo transversal.)
align-self: flex-start; (O item é alinhado no início do contêiner ao longo do eixo transversal.)
align-self: flex-end; (O item é alinhado no final do contêiner ao longo do eixo transversal.)
align-self: center; (O item é centralizado ao longo do eixo transversal do contêiner.)
align-self: baseline; (O item é alinhado com base na linha de base de seu conteúdo.)
align-tracks: (é uma propriedade do módulo CSS Grid Level 3 que define como as faixas de grade (linhas ou colunas) devem ser alinhadas dentro de um grid container. Esta propriedade é usada em conjunto com a propriedade grid-auto-rows ou grid-template-rows para controlar o alinhamento das faixas de grade na direção do bloco, enquanto em conjunto com grid-auto-columns ou grid-template-columns controla o alinhamento na direção inline.)
align-tracks: start; (Alinha as faixas de grade na borda inicial do grid container.)
align-tracks: center; (Alinha as faixas de grade no centro do grid container.)
align-tracks: stretch; (Estica as faixas de grade para preencher todo o espaço disponível no grid container.)
align-tracks: space-between; (Distribui igualmente o espaço restante entre as faixas de grade, com o primeiro e o último alinhados nas bordas inicial e final, respectivamente.)
align-tracks: space-around; (Distribui igualmente o espaço restante entre as faixas de grade e ao redor de cada uma delas.)
align-tracks: space-evenly; (Distribui igualmente o espaço restante entre as faixas de grade, incluindo o espaço antes da primeira faixa e depois da última faixa.)

columns: 18em; / auto; (é uma forma abreviada que combina as propriedades column-width e column-count, permitindo definir o número de colunas e a largura das colunas em um único valor.)
column-width: 200px; (é usada em layouts de múltiplas colunas para especificar a largura mínima das colunas em uma região de colunas. Ela define a largura mínima que cada coluna deve ter. Se a largura da região de colunas for menor do que a largura especificada, o número de colunas será ajustado automaticamente para se encaixar na região disponível.)
column-count: 3; (é usada em layouts de múltiplas colunas para especificar o número de colunas em que o conteúdo de um elemento deve ser dividido. Essa propriedade é útil para criar layouts de texto em múltiplas colunas, como em jornais ou revistas)
column-gap: 20px; (é usada em layouts de múltiplas colunas para especificar o espaçamento entre as colunas.)
column-fill: (é utilizada em layouts de várias colunas para especificar como o conteúdo é distribuído entre as colunas. Ela controla se as colunas devem ser preenchidas sequencialmente ou se deve haver um esforço para equilibrar o conteúdo entre as colunas.)
column-fill: auto; (Este é o valor padrão. Ele indica que o navegador deve distribuir o conteúdo entre as colunas de forma automática, sem esforço adicional para equilibrar o conteúdo. Isso pode resultar em colunas de diferentes alturas, dependendo do conteúdo.)
column-fill: balance; (Este valor indica que o navegador deve fazer um esforço para equilibrar o conteúdo entre as colunas. Isso significa que o navegador tentará garantir que as colunas tenham aproximadamente a mesma altura, redistribuindo o conteúdo entre as colunas conforme necessário)
column-fill: balance-all; (Este valor é semelhante a balance, mas com um comportamento ligeiramente diferente. Enquanto balance tenta equilibrar o conteúdo entre todas as colunas, balance-all tenta equilibrar o conteúdo dentro de cada conjunto de colunas em uma página.)
column-gap: 3px; (é utilizada em layouts de várias colunas para especificar a largura do espaço entre as colunas. Ela define a distância horizontal entre as bordas das colunas adjacentes.)
column-rule: thick inset blue; (é utilizada em layouts de várias colunas para especificar a aparência da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-color: red; (é utilizada em layouts de várias colunas para especificar a cor da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: none; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: hidden; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: dotted; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: dashed; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: solid; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: double; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: groove; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: ridge; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: inset; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-style: outset; (é utilizada em layouts de várias colunas para especificar o estilo da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-width: thin; (é utilizada em layouts de várias colunas para especificar o tamanho da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-width: medium; (é utilizada em layouts de várias colunas para especificar o tamanho da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-width: thick; (é utilizada em layouts de várias colunas para especificar o tamanho da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-rule-width: 1px; / 2.5em; (é utilizada em layouts de várias colunas para especificar o tamanho da linha de regra (rule line) entre as colunas. Esta linha de regra é uma linha vertical que separa visualmente as colunas.)
column-span: (é utilizada em layouts de várias colunas para especificar se um elemento deve se estender por todas as colunas em que ele é dividido ou se deve ser tratado como uma coluna normal. Ela determina o comportamento de layout de um elemento em um contexto de várias colunas.)
column-span: none; (Este é o valor padrão. Indica que o elemento deve ser tratado como uma coluna normal e não deve se estender por todas as colunas em que ele é dividido. Cada parte do conteúdo do elemento será tratada como uma coluna separada.)
column-span: all; (Indica que o elemento deve se estender por todas as colunas em que ele é dividido. Isso significa que o elemento abrangerá todas as colunas em que é dividido, ocupando o espaço horizontal disponível para todas as colunas.)

align-content: (é usada em layouts de grade e flexbox para alinhar o conteúdo do container ao longo do eixo de bloco (verticalmente em layouts de grade e horizontalmente em layouts de flexbox) quando o espaço disponível é maior do que o tamanho total do conteúdo.)
align-content: center; (Alinha o conteúdo no centro do container.)
align-content: start; (Alinha o conteúdo no início do container.)
align-content: end; (Alinha o conteúdo no final do container.)
align-content: flex-start; (Alinha o conteúdo no início do eixo principal do container.)
align-content: flex-end; (Alinha o conteúdo no final do eixo principal do container.)
align-content: normal; (Restaura o comportamento padrão da propriedade.)
align-content: baseline; (Alinha o conteúdo à linha base do primeiro item de linha no container.)
align-content: first baseline; (Alinha o conteúdo à linha base do primeiro item de linha no container.)
align-content: last baseline; (Alinha o conteúdo à linha base do último item de linha no container.)
align-content: space-between;  (Distribui uniformemente o espaço entre os itens, mas não antes do primeiro item ou depois do último item.)
align-content: space-around; (Distribui uniformemente o espaço ao redor dos itens, incluindo espaço antes do primeiro item e depois do último item.)
align-content: space-evenly; (Distribui uniformemente o espaço entre e ao redor dos itens, incluindo espaço antes do primeiro item e depois do último item.)
align-content: stretch; (Estica o conteúdo para preencher o container.)
align-content: safe center; (Alinha o conteúdo no centro do container, respeitando as margens seguras (espaço entre a área visível e a borda do dispositivo).)
align-content: unsafe center; (Alinha o conteúdo no centro do container, sem respeitar as margens seguras.)
align-content: inherit; (Herda o valor do pai.)
align-content: initial; (Define o valor inicial.)
align-content: revert; (Reverte para o valor padrão.)
align-content: revert-layer; (Reverte para o valor padrão em relação à camada atual.)
align-content: unset; (Redefine para o valor inicial.)

justify-items: (é usada para alinhar os itens dentro de um contêiner flexível ou de grade ao longo do eixo principal. Ela define como os itens flexíveis ou de grade devem ser alinhados dentro de cada célula ou track.)
justify-items: center; ( Os itens são alinhados ao centro da célula ou track.)
justify-items: start; (Os itens são alinhados ao início da célula ou track.)
justify-items: end; (Os itens são alinhados ao final da célula ou track.)
justify-items: flex-start; (Os itens são alinhados ao início da célula ou track.)
justify-items: flex-end; (Os itens são alinhados ao final da célula ou track.)
justify-items: self-start; (Os itens são alinhados ao início da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-items: self-end; (Os itens são alinhados ao final da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-items: left; (Os itens são alinhados à esquerda da célula ou track.)
justify-items: right; (Os itens são alinhados à direita da célula ou track.)
justify-items: baseline; (Os itens são alinhados na linha de base.)
justify-items: first baseline; (Os itens são alinhados na primeira linha de base do texto.)
justify-items: last baseline; (Os itens são alinhados na última linha de base do texto.)
justify-items: safe center; (Os itens são alinhados ao centro da célula ou track, garantindo que não haja sobreposição com os bordos da célula ou track.)
justify-items: unsafe center; (Os itens são alinhados ao centro da célula ou track, podendo ocorrer sobreposição com os bordos da célula ou track.)
justify-items: legacy right; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-items: legacy left; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-items: legacy center; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)

justify-self: (é utilizada em elementos filhos de um contêiner flexível ou de grade para definir como um único item é alinhado ao longo do eixo principal dentro de sua própria célula ou track.)
justify-self: center; ( Os itens são alinhados ao centro da célula ou track.)
justify-self: start; (Os itens são alinhados ao início da célula ou track.)
justify-self: end; (Os itens são alinhados ao final da célula ou track.)
justify-self: stretch; (Estica o item)
justify-self: flex-start; (Os itens são alinhados ao início da célula ou track.)
justify-self: flex-end; (Os itens são alinhados ao final da célula ou track.)
justify-self: self-start; (Os itens são alinhados ao início da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-self: self-end; (Os itens são alinhados ao final da célula ou track, mas o comportamento específico depende do valor de writing-mode.)
justify-self: left; (Os itens são alinhados à esquerda da célula ou track.)
justify-self: right; (Os itens são alinhados à direita da célula ou track.)
justify-self: baseline; (Os itens são alinhados na linha de base.)
justify-self: first baseline; (Os itens são alinhados na primeira linha de base do texto.)
justify-self: last baseline; (Os itens são alinhados na última linha de base do texto.)
justify-self: safe center; (Os itens são alinhados ao centro da célula ou track, garantindo que não haja sobreposição com os bordos da célula ou track.)
justify-self: unsafe center; (Os itens são alinhados ao centro da célula ou track, podendo ocorrer sobreposição com os bordos da célula ou track.)
justify-self: legacy right; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-self: legacy left; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)
justify-self: legacy center; (Esses valores são usados para manter a compatibilidade com versões mais antigas do CSS.)

place-content: (é uma abreviação para as propriedades align-content e justify-content, que são usadas em layouts de grade (grid) e flexíveis (flexbox) para alinhar e distribuir itens dentro de um contêiner.)
place-content: center start; (Alinha os itens ao centro verticalmente e no início horizontalmente.)
place-content: start center; (Alinha os itens no início verticalmente e ao centro horizontalmente.)
place-content: end left; (Alinha os itens no final verticalmente e à esquerda horizontalmente.)
place-content: flex-start center; (Alinha os itens no início verticalmente (equivalente a align-content: flex-start) e ao centro horizontalmente.)
place-content: flex-end center; (Alinha os itens no final verticalmente (equivalente a align-content: flex-end) e ao centro horizontalmente.)
place-content: baseline center; (Alinha os itens na linha de base (equivalente a align-content: baseline) e ao centro horizontalmente.)
place-content: first baseline space-evenly; (Alinha os itens à primeira linha de base (equivalente a align-content: first baseline) e distribui o espaço entre os itens igualmente.)
place-content: last baseline right; (Alinha os itens à última linha de base (equivalente a align-content: last baseline) e à direita horizontalmente.)
place-content: space-between space-evenly; (Distribui os itens uniformemente ao longo do eixo principal, com espaços iguais entre eles e nos lados extremos.)
place-content: space-around space-evenly; (Distribui os itens uniformemente ao longo do eixo principal, com espaços iguais entre eles, incluindo espaços nos lados extremos.)
place-content: space-evenly stretch; (Distribui os itens uniformemente ao longo do eixo principal, com espaços iguais entre eles, e estica os itens para ocupar todo o espaço disponível.)
place-content: stretch space-evenly; (Estica os itens para ocupar todo o espaço disponível ao longo do eixo principal, com espaços iguais entre eles.)

place-items: (é uma abreviação para as propriedades align-items e justify-items, que são usadas em layouts de grade (grid) e flexíveis (flexbox) para alinhar e posicionar itens dentro de um contêiner.)
place-items: center; (Centraliza tanto vertical quanto horizontalmente os itens dentro do contêiner.)
place-items: normal start; (Alinha os itens no início verticalmente e ao início horizontalmente.)
place-items: center normal; (Centraliza verticalmente e alinha ao início horizontalmente.)
place-items: start legacy; (Alinha os itens no início verticalmente e usa a herança para a propriedade justify-items.)
place-items: end normal; (Alinha os itens no final verticalmente e ao início horizontalmente.)
place-items: self-start legacy; (Alinha os itens no início verticalmente e usa a herança para a propriedade justify-items.)
place-items: self-end normal; (Alinha os itens no final verticalmente e ao início horizontalmente.)
place-items: flex-start legacy; (Alinha os itens no início verticalmente e usa a herança para a propriedade justify-items.)
place-items: flex-end normal; (Alinha os itens no final verticalmente e ao início horizontalmente.)
place-items: baseline normal; (Alinha os itens à linha de base verticalmente e ao início horizontalmente.)
place-items: first baseline legacy; (Alinha os itens à primeira linha de base verticalmente e usa a herança para a propriedade justify-items.)
place-items: last baseline normal; (Alinha os itens à última linha de base verticalmente e ao início horizontalmente.)
place-items: stretch legacy; (Estica os itens para ocupar todo o espaço disponível verticalmente e usa a herança para a propriedade justify-items.)

place-self: (é uma abreviação para as propriedades align-self e justify-self, que são usadas em layouts de grade (grid) e flexíveis (flexbox) para alinhar e posicionar um único item dentro de um contêiner, substituindo as configurações padrão definidas pelo align-items e justify-items do contêiner.)
place-self: auto center; (Centraliza o item tanto vertical quanto horizontalmente dentro do contêiner, usando as configurações padrão definidas pelo contêiner.)
place-self: normal start; (Alinha o item no início verticalmente e ao início horizontalmente.)
place-self: center normal; (Centraliza o item verticalmente e alinha ao início horizontalmente.)
place-self: start auto; (Alinha o item no início verticalmente e centraliza horizontalmente.)
place-self: end normal; (Alinha o item no final verticalmente e ao início horizontalmente.)
place-self: self-start auto; (Alinha o item no início verticalmente e centraliza horizontalmente.)
place-self: self-end normal; (Alinha o item no final verticalmente e ao início horizontalmente.)
place-self: flex-start auto; (Alinha o item no início verticalmente e centraliza horizontalmente.)
place-self: flex-end normal; (Alinha o item no final verticalmente e ao início horizontalmente.)
place-self: baseline normal; (Alinha o item à linha de base verticalmente e ao início horizontalmente.)
place-self: first baseline auto; (Alinha o item à primeira linha de base verticalmente e centraliza horizontalmente.)
place-self: last baseline normal; (Alinha o item à última linha de base verticalmente e ao início horizontalmente.)
place-self: stretch auto; (Estica o item para ocupar todo o espaço disponível verticalmente e centraliza horizontalmente.)

masonry-auto-flow: (é uma propriedade do CSS Grid Level 3 especificamente destinada a ser usada com o módulo Masonry Layout. Essa propriedade controla como os itens são posicionados automaticamente em um layout de alvenaria (masonry layout).)
masonry-auto-flow: pack; (Esse valor indica que os itens devem ser empacotados o máximo possível em cada linha, resultando em uma grade irregular.)
masonry-auto-flow: next; (Esse valor indica que os itens devem ser colocados na próxima posição disponível na grade, criando uma grade regular onde os itens são adicionados um após o outro, da esquerda para a direita e de cima para baixo.)
masonry-auto-flow: ordered; ( Esse valor indica que os itens devem ser colocados na próxima posição disponível na grade, seguindo uma ordem específica definida pelo autor, geralmente especificada usando a propriedade order.)
masonry-auto-flow: definite-first; (Esse valor indica que os itens devem ser posicionados na próxima posição disponível na grade, mas os itens com um valor de order definido (diferente de zero) devem ser posicionados antes dos itens com order igual a zero.)
masonry-auto-flow: next ordered; (Esse valor combina os comportamentos de next e ordered, colocando os itens na próxima posição disponível na grade, seguindo uma ordem específica definida pelo autor.)

ruby-align: (é usada para definir o alinhamento horizontal de ruby ​​base e ruby text. Ruby é uma notação tipográfica usada principalmente em línguas asiáticas para fornecer uma leitura fonética ou uma explicação de caracteres difíceis.)
ruby-align: start; (Alinha o ruby text (texto ruby) com o início do ruby base (base ruby).)
ruby-align: center; (Centraliza o ruby text em relação ao ruby base.)
ruby-align: space-between; (Distribui igualmente o espaço disponível entre os ruby text ao longo do ruby base, com o primeiro ruby text alinhado ao início do ruby base e o último ruby text alinhado ao final do ruby base.)
ruby-align: space-around; (Distribui igualmente o espaço disponível entre os ruby text ao longo do ruby base, com espaços iguais entre cada par de ruby text e entre o primeiro e o último ruby text e os limites do ruby base.)

ruby-position: (é usada para definir a posição dos rubys (anotações fonéticas ou explicativas tipicamente usadas em línguas asiáticas) em relação ao texto base. Esta propriedade é aplicada ao elemento que contém tanto o texto base quanto o texto ruby.)
ruby-position: over; (Define que o texto ruby deve ser posicionado acima do texto base.)
ruby-position: under; (Define que o texto ruby deve ser posicionado abaixo do texto base.)
ruby-position: inter-character; (Define que o texto ruby deve ser intercalado entre os caracteres do texto base.)
ruby-position: alternate; (Define que o texto ruby deve ser alternado entre as posições acima e abaixo do texto base, dependendo do estilo de escrita ou da implementação específica.)

position: relative; (Define a posição do elemento em relação à sua posição normal na página. Quando um elemento tem position: relative;, ele ainda ocupa o espaço normal no layout da página, mas suas propriedades de posicionamento (como top, bottom, left e right) são aplicadas em relação à sua posição normal)
position: absolute; (é usada para posicionar um elemento de forma absoluta em relação ao seu ancestral posicionado mais próximo. Quando um elemento tem essa propriedade, ele é removido do fluxo normal do documento, o que significa que ele não afetará a posição de outros elementos e não será afetado por eles)
position: sticky; (é usada para posicionar um elemento de forma híbrida entre relative e fixed. Ele funciona como relative até que o elemento alcance uma determinada posição de rolagem (geralmente especificada por top, bottom, left ou right), momento em que ele se comporta como fixed, permanecendo fixo na tela.)
position: fixed; (é usada para posicionar um elemento de forma fixa em relação à janela de visualização do navegador, independentemente de rolagens. Isso significa que o elemento permanecerá no mesmo local, mesmo que o usuário role a página para cima ou para baixo.)
position: static; (é o valor padrão para a posição de um elemento no layout normal do documento. Quando um elemento tem essa propriedade, ele é posicionado de acordo com o fluxo normal do documento.)
z-index: 1; (é usada para controlar a ordem de empilhamento de elementos posicionados em um layout.)

float: left; / right; / none; / inherit; / inline-start; / inline-end; (é usada para definir a direção na qual um elemento deve ser empurrado, ou "flutuar", em relação aos elementos ao seu redor.)
clear: (é usada para controlar o comportamento de elementos que são posicionados ao lado de elementos flutuantes. Ela define se um elemento deve ser movido abaixo (limpado) de elementos flutuantes à esquerda, à direita ou ambos.)
clear: none; (O elemento não será movido para baixo de quaisquer elementos flutuantes)
clear: left; (O elemento será movido para baixo de elementos flutuantes à esquerda.)
clear: right; (O elemento será movido para baixo de elementos flutuantes à direita.)
clear: both; (O elemento será movido para baixo de elementos flutuantes à esquerda e à direita.)
clear: inline-start; (O elemento será movido para baixo de elementos flutuantes na direção de texto inicial (começo) do documento. Isso pode ser à esquerda ou à direita, dependendo da direção de texto (LTR ou RTL).)
clear: inline-end; (O elemento será movido para baixo de elementos flutuantes na direção de texto final (fim) do documento. Isso pode ser à esquerda ou à direita, dependendo da direção de texto (LTR ou RTL).)
display: flow-root; (é útil para limpar elementos flutuantes, estabelecendo um novo contexto que força o elemento pai a se expandir para conter seus filhos, mesmo que esses filhos sejam elementos flutuantes.é uma técnica útil para evitar problemas de layout causados por elementos flutuantes, sem precisar recorrer a hacks como clearfix.)

contain: none; (contain em CSS é usada para especificar como um elemento deve ser tratado em relação ao layout e à pintura do navegador. O elemento não é afetado pelo sistema de layout da página.)
contain: strict; (O elemento é isolado do layout pai, o que significa que ele não afeta e não é afetado por outros elementos fora de seu contexto.)
contain: content; (O elemento é isolado apenas do layout, o que significa que ele não afeta e não é afetado pelo layout fora de seu contexto, mas ainda é afetado pela pintura (renderização) de outros elementos fora de seu contexto.)
contain: size; (O elemento é isolado apenas em relação ao layout e tamanho, o que significa que ele não afeta e não é afetado pelo layout e tamanho fora de seu contexto, mas ainda é afetado pela pintura de outros elementos fora de seu contexto.)
contain: layout; (O elemento é isolado apenas em relação ao layout, o que significa que ele não afeta e não é afetado pelo layout fora de seu contexto, mas ainda é afetado pela pintura de outros elementos fora de seu contexto.)
contain: style; (O elemento é isolado apenas em relação à pintura (renderização), o que significa que ele não afeta e não é afetado pela pintura fora de seu contexto, mas ainda é afetado pelo layout fora de seu contexto.)
contain: paint; (O elemento é isolado apenas em relação à pintura (renderização), o que significa que ele não afeta e não é afetado pela pintura fora de seu contexto, mas ainda é afetado pelo layout e tamanho fora de seu contexto.)
contain: inline-size; (Indica que o navegador deve otimizar o layout com base apenas na largura do elemento (para elementos de bloco) ou na altura do elemento (para elementos em linha). Isso pode resultar em otimizações específicas dependendo da direção de escrita do documento (LTR ou RTL).)
contain-intrinsic-size: 1000px; (permite definir um valor específico para o tamanho intrínseco do elemento.)
content-visibility: auto; (o navegador decidirá quando e como renderizar o conteúdo do elemento com base em várias heurísticas e otimizações internas. Isso geralmente inclui atrasar a renderização de conteúdo fora da área visível da página ou conteúdo que está fora do campo de visão do usuário.)
content-visibility: visible; (Este é o valor padrão. Significa que o conteúdo é renderizado normalmente.)
content-visibility: hidden; (Este valor indica que o conteúdo não deve ser renderizado até que seja necessário, como quando se torna visível na janela de visualização do usuário.)

@charset "UTF-8"; (indica que o arquivo CSS está codificado usando UTF-8, permitindo que ele represente uma ampla gama de caracteres, incluindo caracteres especiais, acentuados e de diferentes idiomas.)
@import url('styles.css'); (é usada para importar estilos de outro arquivo CSS para o arquivo atual. Isso é útil quando você deseja dividir seu código CSS em vários arquivos ou quando está usando bibliotecas externas de estilos CSS.)
@media screen and (max-width: 600px) {} (Neste exemplo, os estilos dentro da regra @media serão aplicados apenas em dispositivos de tela (screen) cuja largura máxima seja de 600 pixels.)
@media (min-width: 30em) and (max-width: 50em) (é uma regra de mídia em CSS que permite aplicar estilos específicos quando a largura da janela do navegador estiver entre 30em e 50em.)
@media print {} (é uma regra de mídia em CSS que permite aplicar estilos apenas quando uma página da web é impressa)
@media (orientation: landscape) {} (é uma regra de mídia em CSS que permite aplicar estilos específicos quando o dispositivo está em modo de orientação paisagem, ou seja, quando a largura da tela é maior que a altura.)
@media not all and (orientation: landscape) {} (é uma regra de mídia em CSS que permite aplicar estilos específicos quando o dispositivo não está na orientação paisagem, ou seja, quando a largura da tela é menor ou igual à altura.)
@media (hover: hover) {} (é uma regra de mídia em CSS que permite aplicar estilos específicos quando o dispositivo suporta a interação por hover, ou seja, quando o dispositivo possui um dispositivo de apontamento, como um mouse, e é capaz de detectar a passagem do cursor sobre os elementos da página.)
@font-face {font-family: "MinhaFontePersonalizada"; src: url("minhafonte.woff2") format("woff2"), url("minhafonte.woff") format("woff"); font-weight: normal; font-style: normal;} (é usada para definir fontes personalizadas que podem ser usadas em um documento da web. Ela permite que os desenvolvedores carreguem fontes personalizadas diretamente de um servidor e usem essas fontes em suas folhas de estilo CSS.)
@keyframes {} (é utilizada para definir animações personalizadas. O nome dado ao conjunto de regras após @keyframes é o identificador da animação, que pode ser qualquer nome válido em CSS.)
@color-profile nome_perfil_url_perfil; {} ( é uma regra CSS que define um perfil de cor ICC (International Color Consortium) a ser usado para interpretar as cores em um documento. Isso é especialmente útil quando se trabalha com imagens e gráficos em um documento HTML ou CSS, onde as cores precisam ser consistentes em diferentes dispositivos e mídias. url_perfil: É o URL onde o perfil de cor ICC está localizado.)
@layer nome; (Ela permite que os desenvolvedores definam camadas específicas para agrupar e controlar a ordem de sobreposição das regras CSS.)
@namespace prefix url; (é usada para declarar e definir um namespace para um conjunto de seletores CSS. Isso é útil quando você está trabalhando com XML, XHTML ou SVG incorporados em documentos HTML e deseja aplicar estilos específicos a elementos desses namespaces.)
@page {} ( é usada para especificar estilos para diferentes páginas ao criar documentos para impressão. Ela permite definir estilos específicos para a formatação da página, como margens, tamanhos de página, cabeçalhos, rodapés e muito mais.)
@page { @top-left{}, @top-center{}, @top-right{}, @bottom-left{}, @bottom-center{}, @bottom-right{} } (Define o conteúdo do cabeçalho e rodapé em posições específicas na página.)
@page :first {} (Este seletor é usado para aplicar estilos específicos à primeira página do documento. Isso é útil, por exemplo, se você quiser adicionar um cabeçalho especial ou uma margem diferente apenas na primeira página.)
@page :left {} (Este seletor é usado para aplicar estilos específicos a todas as páginas ímpares (páginas do lado esquerdo) do documento. É útil quando você deseja definir margens ou outras propriedades específicas para páginas ímpares em documentos de layout de dupla face.)
@page :right {} (Este seletor é usado para aplicar estilos específicos a todas as páginas pares (páginas do lado direito) do documento. Da mesma forma que o seletor :left, é útil em documentos de layout de dupla face para definir estilos específicos para páginas pares.)
@page nome (Este é um exemplo de uma regra @page nomeada. Ao nomear uma regra @page, você pode posteriormente aplicar estilos a todas as páginas que referenciam esse nome. )
@property --nome-var; ( é usada para definir variáveis ​​CSS personalizadas. Ela permite que você defina e reutilize valores em suas folhas de estilo, facilitando a manutenção e a organização do código CSS.)
@supports (display: flex) / (display: grid) and (grid-template-columns: 1fr 1fr) {} (é uma regra de condição que verifica se o navegador dá suporte a um determinado conjunto de recursos ou funcionalidades CSS. Isso permite que você aplique estilos condicionalmente com base no suporte do navegador a recursos específicos.)

@font-feature-values FonteOne {} (é uma regra CSS que permite definir valores de características tipográficas específicas para um elemento ou um conjunto de elementos HTML. )
font-variant-alternates: styleset(FonteOne); (é uma propriedade CSS que permite controlar o uso de alternativas estilísticas fornecidas pela fonte, como ligaduras, caracteres ornamentais, variações estilísticas, entre outros.)

@font-palette-values --one { (é usada para definir valores de paleta de fontes personalizadas. Isso permite que você atribua nomes a diferentes paletas de fontes e as associe a certos valores de base-palette.)
base-palette: 1; ( Isso define a paleta de base associada à paleta --one. O valor 1 representa uma paleta de fontes específica, que pode ser definida em outro lugar do seu código CSS ou sistema de estilo.)
}

@counter-style nome { ( Dentro do bloco de declaração, estão várias propriedades que definem como esse estilo de contagem deve ser apresentado.)
system: cyclic; (Esta propriedade especifica que o estilo de contagem deve ser cíclico, o que significa que ele se repete quando o limite de contagem é atingido.)
symbols: "\1F44D"; (Esta propriedade define o símbolo a ser usado para representar cada contagem. No caso, o código Unicode "\1F44D" representa um emoji de polegar para cima (👍).)
suffix: " "; (Esta propriedade define o sufixo a ser adicionado após cada contagem. Aqui, um espaço em branco é adicionado para separar o emoji do conteúdo da lista.)
}
list-style: nome; (Esta regra CSS aplica o estilo de contagem "nome" à lista não ordenada (ul). Isso significa que cada item da lista será precedido pelo emoji de polegar para cima (👍), conforme definido no estilo de contagem )

a:link {} (é um seletor em CSS que é usado para estilizar links não visitados em uma página da web)
a:visited {} (é um seletor em CSS que é usado para estilizar links que já foram visitados pelo usuário em uma página da web)
a:focus {} (é usado para estilizar um link que está atualmente focado, ou seja, quando ele é selecionado por meio de teclado ou de outra forma que não seja o mouse)
a:hover {} (é usado para estilizar um link quando o cursor do mouse está sobre ele, mas antes que ele seja clicado.)
a:active {} (é usado para estilizar um link enquanto ele está sendo ativamente clicado pelo usuário)
a:target {} (estilizar um elemento que é o alvo de um link âncora)
a:any-link {} (é usada para aplicar estilos a qualquer elemento <a> (âncora) que tenha um atributo href, independentemente de ser um link não visitado, visitado ou mesmo um link ativo (ou seja, o link que está sendo atualmente seguido).)
:blank {} (seleciona elementos que não têm conteúdo visível ou apenas conteúdo em branco, como espaços em branco, tabs ou quebras de linha. É útil para aplicar estilos a elementos que não têm conteúdo, mas estão presentes no documento HTML.)
:autofill {} (é usada para selecionar elementos de formulário que estão preenchidos automaticamente pelo navegador. Isso permite aplicar estilos específicos a esses elementos quando o preenchimento automático é ativado.)
:buffering {} (é uma forma hipotética de aplicar estilos a elementos de vídeo HTML5 enquanto estão no estado de buffering, ou seja, enquanto estão carregando ou processando dados, permitindo que os desenvolvedores de front-end apliquem estilos específicos a elementos de vídeo que estão no processo de buffering.)
:checked {} ( é usada para selecionar elementos de entrada (como caixas de seleção ou botões de rádio) quando estão marcados ou selecionados. Essa pseudo-classe é comumente usada em conjunto com elementos de formulário para aplicar estilos específicos a elementos que foram marcados ou selecionados pelo usuário.)
:default {} (seleciona elementos de formulário quando eles têm o estado padrão, ou seja, quando o valor do elemento é o valor padrão definido pelo navegador ou pelo desenvolvedor. é frequentemente usada em conjunto com elementos de formulário, como <input> e <select>, para aplicar estilos a elementos que não foram modificados pelo usuário.)
:dir(ltr) {} / :dir(rtl) {} / :dir([ltr | rtl]) {} (é usada para selecionar elementos que tenham o atributo dir definido como ltr (left-to-right), indicando que o texto dentro desse elemento deve ser renderizado da esquerda para a direita. rtl (right-to-left)
:enabled {} (é usada para selecionar elementos de formulário que estão habilitados para interação do usuário. Isso inclui elementos como <input>, <button>, <select>, <textarea>, entre outros, que estão em um estado habilitado e disponíveis para receber entrada do usuário.)
:disabled {} (é usada para selecionar elementos que estão desabilitados. Isso inclui elementos de formulário, como <input>, <button>, <select>, <textarea>, etc., que estão em estado desabilitado.)
:empty {} (é usada para selecionar elementos que não contêm nenhum conteúdo ou apenas contêm conteúdo em branco, como espaços em branco, tabs ou quebras de linha. Em outras palavras, ela seleciona elementos que não têm filhos, texto ou nós de conteúdo.)
:first-child {} (é usada para selecionar o primeiro filho de um elemento pai. Ela é aplicada a um elemento quando ele é o primeiro filho direto de seu pai.)
:first-of-type {} (é usada para selecionar o primeiro elemento de um tipo específico dentro de seu elemento pai. Ela é aplicada a um elemento quando ele é o primeiro de seu tipo entre os filhos diretos de seu pai.)
:last-child {} (é usada para selecionar o último filho de seu elemento pai. Ela é aplicada a um elemento quando ele é o último filho direto de seu pai.)
:last-of-type {} (é usada para selecionar o último elemento de um tipo específico dentro de seu elemento pai. Ela é aplicada a um elemento quando ele é o último de seu tipo entre os filhos diretos de seu pai.)
:focus {} (é usada para selecionar elementos que estão com foco, ou seja, são ativos e estão prontos para receber entrada do usuário. Isso é comumente usado para aplicar estilos a elementos que estão sendo interagidos pelo usuário, como campos de entrada de texto, caixas de seleção, botões, etc., quando estão em estado de foco.)
:focus-visible {} (é usada para selecionar elementos que estão com foco e que se tornam visualmente evidentes para o usuário. Ela é semelhante à pseudo-classe :focus, mas é mais específica, visando elementos que estão com foco e cujo foco está sendo tratado de forma visualmente evidente pelo navegador ou dispositivo do usuário.)
:focus-within {} (é usada para selecionar um elemento pai que contém um elemento filho com foco. Isso significa que se algum elemento filho dentro do elemento pai estiver com foco, então o próprio elemento pai também será considerado como estando com foco.)
:fullscreen {} (é usada para selecionar um elemento quando ele está em modo de tela cheia. Isso permite aplicar estilos específicos a elementos que estão sendo exibidos em modo de tela cheia, como imagens, vídeos, ou até mesmo páginas da web inteiras.)
:has(tag) {} (é usada para selecionar um elemento pai que contenha um elemento que corresponda ao seletor especificado dentro dos parênteses. Ela permite selecionar um elemento pai com base nas características de seus elementos filhos. Neste exemplo: "div:has(p){}" seleciona todos os elementos <div> que contêm pelo menos um elemento <p>.)
:host {} (é usada em conjuntos com Shadow DOM (DOM Sombreado) para estilizar o próprio elemento que está hospedando o Shadow DOM. Dentro de um componente de Shadow DOM, a pseudo-classe :host permite aplicar estilos ao elemento que é o "hospedeiro" do Shadow DOM, ou seja, o elemento ao qual o Shadow DOM está associado.)
:host-context {} (é usada para aplicar estilos a um elemento hospedeiro com base em seu contexto pai externo, fora do escopo do Shadow DOM. Isso permite que você selecione o elemento hospedeiro com base nas características de seus ancestrais fora do Shadow DOM.)
:in-range {} (é usada para selecionar elementos de entrada (como <input> e <textarea>) que estão dentro de um intervalo específico definido pelo atributo min e max. Especificamente, ela seleciona elementos que têm um valor válido dentro do intervalo especificado.)
:out-of-range {} (é usada para selecionar elementos de entrada (como <input type="number"> e <input type="range">) cujo valor está fora do intervalo especificado pelos atributos min e max.)
:indeterminate {} (é usada para selecionar elementos de entrada (como checkboxes e radio buttons) que estão em um estado indeterminado.)
:valid {} (é usada para selecionar elementos de entrada que passaram com sucesso em sua validação, como campos de formulário que foram preenchidos corretamente de acordo com as regras de validação especificadas.)
:invalid {} (é usada para selecionar elementos de entrada (como <input>, <select> e <textarea>) que contêm dados inválidos de acordo com as restrições definidas pelos atributos de validação, como required, min, max, pattern, entre outros.)
:is(:valid, :unsupported) {} (:is() é usada para agrupar seletores CSS em uma única regra. :valid Estilos para elementos válidos. :unsupported Estilos para elementos não suportados)
:lang(en) {} (é usada para selecionar elementos com base no valor do atributo lang. Ela permite aplicar estilos a elementos que tenham um determinado valor de linguagem. Você também pode usar seletores mais específicos em conjunto com :lang() para estilizar elementos específicos com base na linguagem)
:not(seletor) {} (é usada para selecionar elementos que não correspondem a um determinado seletor)
:nth-child() {} (é usada para selecionar elementos com base em sua posição entre os filhos diretos de seu elemento pai. )
:nth-last-child() {} ( é usada para selecionar elementos com base na sua posição entre os filhos diretos do seu elemento pai, mas contando a partir do último filho em vez do primeiro. )
:nth-last-of-type() {} (é usada para selecionar elementos com base em sua posição entre os irmãos diretos de seu elemento pai, contando a partir do último elemento do mesmo tipo.)
:nth-of-type() {} (é usada para selecionar elementos com base em sua posição entre os irmãos diretos de seu elemento pai, considerando apenas elementos do mesmo tipo.)
:only-child () {} (é usada para selecionar elementos que são os únicos filhos diretos de seu elemento pai. Essa pseudo-classe é aplicada a um elemento quando ele é o único filho direto de seu pai, ou seja, não tem irmãos diretos.)
:only-of-type () {} (é usada para selecionar elementos que são os únicos de seu tipo entre os filhos diretos de seu elemento pai. Essa pseudo-classe é aplicada a um elemento quando ele é o único filho direto de seu pai com aquele tipo específico.)
:optional () {} (é usada para selecionar elementos de entrada que não são obrigatórios, ou seja, elementos que não têm o atributo required. Essa pseudo-classe é aplicada a elementos de entrada, como <input>, <select> e <textarea>, que não têm o atributo required definido.)
:placeholder-shown {} ( é usada para selecionar um elemento de entrada quando seu texto de espaço reservado (placeholder) está sendo exibido. Isso é útil para aplicar estilos específicos quando o texto de espaço reservado está visível em elementos de entrada, como <input> e <textarea>.)
:read-only {} (é usada para selecionar elementos de entrada (como <input>, <textarea>, e <select>) que estão em um estado de somente leitura (read-only), ou seja, não podem ser editados ou modificados pelo usuário.)
:read-write {} ( é usada para selecionar elementos de entrada (como <input>, <textarea>, e <select>) que estão em um estado de leitura e escrita, ou seja, que podem ser editados ou modificados pelo usuário.)
:required {} (é usada para selecionar elementos de entrada (como <input>, <select>, e <textarea>) que têm o atributo required definido. Essa pseudo-classe é aplicada a elementos de entrada que são obrigatórios, ou seja, que devem ser preenchidos ou selecionados pelo usuário antes de enviar um formulário.)
:where(input:valid, input:unsupported) {} ( permite agrupar um conjunto de seletores e aplicar estilos a elementos que correspondem a qualquer um desses seletores dentro do bloco.)
video:muted {} (é aplicada a elementos <video> que estejam no estado "muted", ou seja, onde o áudio do vídeo está desativado.)
video:playing {} ( é aplicada a elementos de mídia, como <audio> e <video>, que estão atualmente em estado de reprodução. Isso pode ser útil para aplicar estilos específicos a elementos de mídia enquanto estão sendo reproduzidos.)
::before {} (é um seletor de pseudo-elemento em CSS que é usado para inserir conteúdo antes do conteúdo do elemento alvo.)
::after {} (é usado para selecionar e estilizar o conteúdo que será inserido após o conteúdo real do elemento)
::backdrop {background-color: #ff} (Este é um seletor de pseudo-elemento que seleciona o plano de fundo (backdrop) de um elemento.)
::cue {color: red; font-size: 1.2em;} (é um seletor de pseudo-elemento CSS que é usado para estilizar legendas de mídia, como aquelas usadas em vídeos. As legendas de mídia são controladas pelo navegador e são normalmente exibidas quando o usuário ativa a opção de legenda em um vídeo. O pseudo-elemento ::cue permite estilizar o texto das legendas. Por exemplo, você pode usar ::cue para alterar a cor do texto das legendas ou aplicar outros estilos de texto, como tamanho da fonte, família da fonte, estilo da fonte, etc.)
::cue-region {} (é usado para definir as propriedades de estilo da área onde as legendas de mídia serão renderizadas. Isso pode incluir propriedades como largura, altura, posição, cor de fundo, etc)
::file-selector-button {} (é usado para estilizar o botão de seleção de arquivo (input[type="file"]) em formulários HTML)
::first-letter {} (é usado para estilizar a primeira letra de um elemento de bloco (como <p>, <div>, <ul>, etc.). Além disso, a primeira letra deve ser uma letra real, não um espaço ou caractere especial.)
::first-line {} (é usado para estilizar a primeira linha de texto dentro de um elemento de bloco (como <p>, <div>, <ul>, etc.).)
::grammar-error {} (é usado para estilizar partes de um documento que são marcadas como erros gramaticais pelo navegador ou por um mecanismo de verificação ortográfica integrado.)
::selection {} (permite aplicar estilos a parte do texto que o usuário selecionou com o mouse.)
::marker {} (é usado para estilizar o marcador de uma lista, como uma lista ordenada <ol> ou uma lista não ordenada <ul>. Este seletor é usado para aplicar estilos ao marcador (ou bullet) que aparece antes de cada item da lista. Isso permite que você personalize a aparência dos marcadores de lista, como alterar a cor, tamanho, estilo do marcador, etc.)
::part() {} (é usado para estilizar as partes internas de um componente personalizado, definido usando Shadow DOM. Os componentes personalizados podem expor partes internas que podem ser estilizadas pelo desenvolvedor da aplicação usando o seletor ::part().)
::placeholder {} (usado para estilizar o texto de placeholder em campos de entrada de texto e áreas de texto.)
::slotted() {} (usado em conjunto com Shadow DOM em elementos HTML personalizados. Ele é usado para estilizar conteúdo distribuído que foi inserido em slots dentro de um componente personalizado.)
::spelling-error {} (é usado para estilizar partes de um documento que são identificadas como erros ortográficos pelo navegador ou por um mecanismo de verificação ortográfica integrado.)
::scope {} (é usado para aplicar estilos apenas ao componente de sombra e seus descendentes, evitando que esses estilos vazem para o restante do documento. )

content: ' ' (É uma propriedade CSS que define o conteúdo inserido pelo pseudo-elemento ::after ou ::before)
quotes: (é utilizada para especificar os pares de citação usados em elementos que têm a propriedade content aplicada. Esses pares de citação podem ser usados, por exemplo, com os pseudo-elementos ::before e ::after para adicionar aspas automáticas ao redor do conteúdo gerado.)
quotes: none; (Este valor indica que nenhum par de citação deve ser usado. Isso significa que as aspas não serão adicionadas automaticamente ao redor do conteúdo gerado.)
quotes: auto; / "«" "»" "‹" "›"; (Este valor indica que o navegador deve usar os pares de citação padrão do idioma atual. Cada idioma tem seus próprios pares de citação padrão. Por exemplo, em inglês, os pares de citação padrão são " (aspas duplas) para aspas primárias e ' (aspas simples) para aspas secundárias.)
counter-increment: my-counter; (é usada para aumentar ou diminuir o valor de um contador específico, que pode ser usado em conjunto com a propriedade content para inserir contadores em elementos selecionados.)
counter-increment: counter1 counter2 -4; (Incrementar o valor do contador denominado "counter1" em 1 unidade. Incrementar o valor do contador denominado "counter2" em 1 unidade. Decrementar o valor do contador denominado "counter2" em 4 unidades.)
counter-increment: chapter 0 section 2 page; (Incrementar o valor do contador denominado "chapter" em 0 unidades (ou seja, não incrementar). Incrementar o valor do contador denominado "section" em 2 unidades. Incrementar o valor do contador denominado "page" em 1 unidade.)
counter-reset: my-counter; (é usada para definir o valor inicial de um contador específico ou redefinir um contador para um valor específico.  está instruindo o navegador a definir o valor do contador denominado "my-counter" como zero. Isso significa que o contador será redefinido para zero sempre que o seletor ao qual esta regra se aplica for correspondido.)

:root {  (é usada para definir variáveis CSS globais (também conhecidas como variáveis personalizadas) que podem ser acessadas em qualquer lugar da folha de estilo CSS.)
--somekeyword: left; / position: var(--somekeyword); (é uma variável personalizada, começando com dois hífens (--). No exemplo fornecido, --somekeyword: left;, estamos definindo uma variável CSS chamada --somekeyword com o valor left. Isso significa que qualquer lugar em que essa variável for utilizada em um seletor CSS, ela será substituída pelo valor left.)
--somecolor: #0000ff; / color: var (--somecolor);
--somecomplexvalue: 3px 6px rgb(20 32 54); / backgroundcolor: var (--somecomplexvalue);
}

display: -webkit-box; (é uma extensão proprietária específica do WebKit (usada principalmente no Safari) que permite definir o número máximo de linhas de texto que um elemento pode exibir)
-webkit-box-orient: vertical; (para criar layouts de texto truncado ou com corte em elementos que normalmente exibiriam todo o conteúdo de texto.)
-webkit-box-orient: horizontal; (Os elementos filho são empilhados horizontalmente, um ao lado do outro.)
-webkit-line-clamp: 3; (Define o máximo de 3 linhas de texto)

-webkit-border-before: 1px solid black; (é uma propriedade específica do WebKit usada para definir a largura, o estilo e a cor da borda antes do conteúdo do elemento. Define uma borda de 1 pixel de largura, sólida e preta antes do conteúdo do elemento)
-webkit-border-before: none; (Remove a borda antes do conteúdo do elemento)
-webkit-box-reflect: above; (é uma propriedade específica do WebKit que permite adicionar reflexos espelhados em torno de elementos usando a caixa flexível. Adiciona um reflexo espelhado acima do elemento.)
-webkit-box-reflect: below; (Adiciona um reflexo espelhado abaixo do elemento.)
-webkit-box-reflect: left; (Adiciona um reflexo espelhado à esquerda do elemento.)
-webkit-box-reflect: right; (Adiciona um reflexo espelhado à direita do elemento.)
-webkit-mask-attachment: scroll; (é uma propriedade específica do WebKit que define como uma máscara aplicada a um elemento se comporta em relação ao deslocamento do conteúdo dentro desse elemento. A máscara rola com o conteúdo do elemento quando o conteúdo é rolado.)
-webkit-mask-attachment: fixed; (A máscara permanece fixa em relação à janela de visualização, independentemente do deslocamento do conteúdo dentro do elemento.)
-webkit-mask-attachment: local; (A máscara rola com o conteúdo do elemento apenas até atingir o limite do próprio elemento, e então permanece fixa.)
-webkit-mask-attachment: none; (Remove a máscara de anexo)
-webkit-mask-box-image: url(image.png) 10px 20px 20px 10px; (é uma propriedade específica do WebKit que define uma imagem como máscara para um elemento. Essa imagem é usada para definir a forma da máscara aplicada ao elemento, ocultando partes do elemento onde a imagem é transparente e revelando partes onde a imagem é opaca.)
-webkit-mask-box-image: none; (você está removendo qualquer máscara definida para o elemento, ou seja, não haverá nenhuma imagem utilizada como máscara.)
-webkit-mask-composite: clear; (é uma propriedade específica do WebKit que define como as máscaras aplicadas a um elemento são compostas entre si ou com o conteúdo subjacente.  Limpa a máscara aplicada ao elemento, tornando completamente transparente onde a máscara é aplicada.)
-webkit-mask-composite: copy; (Copia a máscara aplicada ao elemento, substituindo completamente o conteúdo subjacente com a máscara.)
-webkit-mask-composite: source-over; (Aplica a máscara sobre o conteúdo subjacente, substituindo completamente o conteúdo onde a máscara é opaca.)
-webkit-mask-composite: source-in; (Mantém apenas a área de interseção entre a máscara e o conteúdo subjacente.)
-webkit-mask-composite: source-out; (Mantém apenas a área fora da interseção entre a máscara e o conteúdo subjacente.)
-webkit-mask-composite: source-atop; (Mantém o conteúdo subjacente onde a máscara é opaca e mistura o conteúdo da máscara com o conteúdo subjacente onde a máscara é transparente.)
-webkit-mask-composite: destination-over; (A máscara é aplicada sobre o conteúdo subjacente, mas apenas onde a máscara é transparente, o conteúdo subjacente é visível.)
-webkit-mask-composite: destination-in; (Mantém apenas a área de interseção entre a máscara e o conteúdo subjacente. Onde a máscara é opaca, o conteúdo subjacente é mantido.)
-webkit-mask-composite: destination-out; (Mantém apenas a área fora da interseção entre a máscara e o conteúdo subjacente. Onde a máscara é opaca, o conteúdo subjacente é removido.)
-webkit-mask-composite: destination-atop; (Mantém o conteúdo subjacente onde a máscara é opaca e mistura o conteúdo da máscara com o conteúdo subjacente onde a máscara é transparente.)
-webkit-mask-composite: xor; (Mantém apenas as áreas onde a máscara e o conteúdo subjacente não se sobrepõem. Remove qualquer área de interseção.)
-webkit-mask-position-x: left; / center; / right; / 100%; / 50px; / -1cm; /  -3em; (é uma propriedade específica do WebKit que define a posição horizontal da máscara aplicada a um elemento.)
-webkit-mask-position-y: top; / center; / bottom; / 100%; / 50px / -1cm; /  -3em; (é uma propriedade específica do WebKit que define a posição vertical da máscara aplicada a um elemento.)
-webkit-mask-repeat-x: repeat; (A máscara é repetida ao longo do eixo horizontal do elemento, começando do início do elemento.)
-webkit-mask-repeat-x: no-repeat; (A máscara não é repetida ao longo do eixo horizontal do elemento. Ela é aplicada apenas uma vez, começando do início do elemento.)
-webkit-mask-repeat-x: space; (A máscara é repetida ao longo do eixo horizontal do elemento, mas é espaçada uniformemente para preencher o espaço disponível, sem cortar ou esticar a máscara.)
-webkit-mask-repeat-x: round; (A máscara é repetida ao longo do eixo horizontal do elemento, mas é esticada ou reduzida para preencher o espaço disponível, mantendo a proporção original da máscara.)
-webkit-mask-repeat-y: repeat; (A máscara é repetida ao longo do eixo vertical do elemento, começando do início do elemento.)
-webkit-mask-repeat-y: no-repeat; (A máscara não é repetida ao longo do eixo vertical do elemento. Ela é aplicada apenas uma vez, começando do início do elemento.)
-webkit-mask-repeat-y: space; (A máscara é repetida ao longo do eixo vertical do elemento, mas é espaçada uniformemente para preencher o espaço disponível, sem cortar ou esticar a máscara.)
-webkit-mask-repeat-y: round; (A máscara é repetida ao longo do eixo vertical do elemento, mas é esticada ou reduzida para preencher o espaço disponível, mantendo a proporção original da máscara.)
-webkit-overflow-scrolling: auto; ( O navegador decide se deve usar a rolagem de inércia ou a rolagem padrão, dependendo do conteúdo e do contexto do elemento.)
-webkit-overflow-scrolling: touch; (A rolagem de inércia é habilitada para o elemento, permitindo que ele role de forma suave e natural com movimentos de toque.)
-webkit-tap-highlight-color: red; (controla a cor do destaque que aparece quando um elemento é tocado em um dispositivo sensível ao toque.)
-webkit-text-fill-color: red; (controla a cor do texto dentro de um elemento. Ela substitui a cor de preenchimento padrão do texto, permitindo que você defina uma cor personalizada para o texto dentro do elemento.)
-webkit-text-security: circle; (define o estilo de ocultação do texto dentro de um elemento, geralmente utilizado para mascarar senhas e informações sensíveis. O texto é exibido como círculos. Cada caractere é substituído por um pequeno círculo.)
-webkit-text-security: disc; (O texto é exibido como discos. Cada caractere é substituído por um pequeno disco.)
-webkit-text-security: square; (O texto é exibido como quadrados. Cada caractere é substituído por um pequeno quadrado.)
-webkit-text-security: none; (O texto não é mascarado e é exibido normalmente.)
-webkit-text-stroke: 4px navy; (Ela define a largura e a cor do contorno ao redor do texto.)
-webkit-text-stroke-color: red; (é usada para definir a cor do contorno ao redor do texto em elementos HTML )
-webkit-text-stroke-width: thin; (são usadas para definir a largura do contorno ao redor do texto em elementos HTML. Define a largura do contorno como fina.)
-webkit-text-stroke-width: medium; (Define a largura do contorno como média.)
-webkit-text-stroke-width: thick; (Define a largura do contorno como grossa.)
-webkit-text-stroke-width: 2px; / 0.1em; / 1mm; / 5pt;
-webkit-touch-callout: default; (Esta propriedade permite que o menu de contexto padrão seja exibido quando o usuário toca e mantém pressionado um elemento. O menu de contexto padrão geralmente inclui opções como "Copiar", "Colar" e "Selecionar tudo".)
-webkit-touch-callout: none; (Esta propriedade impede que o menu de contexto padrão seja exibido quando o usuário toca e mantém pressionado um elemento. Isso é útil em casos em que você deseja implementar um comportamento personalizado ao toque e não deseja que o menu de contexto padrão seja exibido.)

/*A propriedade -moz-float-edge é uma propriedade específica do Mozilla (Firefox)*/
-moz-float-edge: border-box; (Esta opção define a borda da caixa de flutuação como sendo a borda da caixa de conteúdo do elemento pai. Isso significa que o elemento flutuante será posicionado em relação à borda interna da borda do conteúdo do elemento pai.)
-moz-float-edge: content-box; (Esta opção define a borda da caixa de flutuação como sendo a borda da caixa de conteúdo do próprio elemento. Isso significa que o elemento flutuante será posicionado em relação à borda interna da própria borda de conteúdo do elemento flutuante.)
-moz-float-edge: margin-box; (Esta opção define a borda da caixa de flutuação como sendo a borda da caixa de margem do elemento pai. Isso significa que o elemento flutuante será posicionado em relação à borda interna da borda de margem do elemento pai.)
-moz-float-edge: padding-box; (Esta opção define a borda da caixa de flutuação como sendo a borda da caixa de preenchimento do elemento pai. Isso significa que o elemento flutuante será posicionado em relação à borda interna da borda de preenchimento do elemento pai.)
-moz-float-edge: inherit; (Esta opção faz com que o elemento herde o valor de -moz-float-edge do seu pai.)
-moz-float-edge: initial; (Esta opção define o valor inicial para -moz-float-edge, que é content-box.)
-moz-float-edge: unset; (Esta opção redefine -moz-float-edge para o seu valor padrão, que é initial.)
-moz-force-broken-image-icon: 1; (controla se o navegador deve exibir um ícone padrão para imagens quebradas ou não carregadas. Quando definida como 1, ela instrui o navegador a exibir o ícone padrão para imagens que falharam ao carregar. Esse ícone é comumente representado por uma imagem quebrada ou uma marca de falha, dependendo da implementação do navegador.)
-moz-image-region: auto; (define a região de uma imagem que deve ser exibida em um elemento. Ela é usada principalmente em conjunto com a propriedade background-image para especificar qual parte de uma imagem de fundo deve ser exibida em um determinado elemento. auto: Este valor indica que a imagem de fundo deve ser exibida na sua totalidade, sem recorte ou modificação da região.)
-moz-image-region: rect(0, 8px, 4px, 4px); (rect(top, right, bottom, left): Este valor permite especificar uma região retangular da imagem que deve ser exibida. Os valores top, right, bottom e left especificam as coordenadas (em pixels) do topo, direita, fundo e esquerda da região, respectivamente.)
-moz-orient: vertical; (é utilizada para definir a orientação de um elemento. Ela é especialmente útil para elementos que são exibidos em um contexto bidimensional, como caixas flexíveis ou em layouts de grade.)
-moz-user-focus: normal; (controla como um elemento reage ao foco do usuário. Esta é a configuração padrão. Ela indica que o elemento pode ser focado pelo usuário normalmente.)
-moz-user-focus: ignore; (Esta configuração faz com que o elemento ignore qualquer tentativa de foco por parte do usuário.)
-moz-user-input: none; (controla a capacidade de um elemento de receber entrada do usuário. Esta configuração indica que o elemento não pode receber entrada do usuário.)
-moz-user-input: enabled; (Esta configuração indica que o elemento pode receber entrada do usuário. Esta é a configuração padrão.)
-moz-user-input: disabled; (Esta configuração indica que o elemento não pode receber entrada do usuário.)

